[
  {
    "rendered_body": "\n\u003ch1\u003e\n\u003cspan id=\"tldr\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#tldr\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eTL;DR\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"テストコードの準備\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%86%E3%82%B9%E3%83%88%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AE%E6%BA%96%E5%82%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eテストコードの準備\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"appbulidgradleに依存関係を追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#appbulidgradle%E3%81%AB%E4%BE%9D%E5%AD%98%E9%96%A2%E4%BF%82%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eapp/bulid.gradleに依存関係を追加\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"groovy\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003edependencies\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"n\"\u003etestCompile\u003c/span\u003e \u003cspan class=\"s1\"\u003e'org.robolectric:robolectric:2.4'\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e最新版を\u003ca href=\"https://github.com/robolectric/robolectric#install\"\u003e公式\u003c/a\u003eで確認して下さい。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"customrobolectrictestrunnerを設置\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#customrobolectrictestrunner%E3%82%92%E8%A8%AD%E7%BD%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ca href=\"https://github.com/robolectric/robolectric-gradle-plugin/issues/142#issuecomment-103962546\"\u003eCustomRobolectricTestRunner\u003c/a\u003eを設置\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"java\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomRobolectricTestRunner\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eRobolectricTestRunner\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eCustomRoblectricTestRunner\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eClass\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;?\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etestClass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"kd\"\u003ethrows\u003c/span\u003e \u003cspan class=\"n\"\u003eInitializationError\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"kd\"\u003esuper\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etestClass\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003ebuildVariant\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eFLAVOR\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eisEmpty\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\"\"\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eBuildConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eFLAVOR\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\"/\"\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003eBuildConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eBUILD_TYPE\u003c/span\u003e\u003cspan class=\"o\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetProperty\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"android.package\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eBuildConfig\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eAPPLICATION_ID\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetProperty\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"android.manifest\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"build/intermediates/manifests/full/\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ebuildVariant\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\"/AndroidManifest.xml\"\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetProperty\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"android.resources\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"build/intermediates/res/\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ebuildVariant\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003esetProperty\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"android.assets\"\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\"build/intermediates/assets/\"\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ebuildVariant\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e（※Resource not foundなどというエラー出たら補足を参照のこと）\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"robolectricを参照するテストコードにannotationを追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#robolectric%E3%82%92%E5%8F%82%E7%85%A7%E3%81%99%E3%82%8B%E3%83%86%E3%82%B9%E3%83%88%E3%82%B3%E3%83%BC%E3%83%89%E3%81%ABannotation%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRobolectricを参照するテストコードにannotationを追加\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"java\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nd\"\u003e@Config\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eemulateSdk\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e18\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nd\"\u003e@RunWith\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCustomRobolectricTestRunner\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eclass\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFoobarTest\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nd\"\u003e@Test\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003etestHoge\u003c/span\u003e\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRobolectric\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003eapplciation\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"na\"\u003egetApplicationContext\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eFoobar\u003c/span\u003e \u003cspan class=\"n\"\u003efoobar\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nf\"\u003eFoobar\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"android-studioの設定\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#android-studio%E3%81%AE%E8%A8%AD%E5%AE%9A\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eAndroid Studioの設定\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"run-configurationsでjunit用のworking-directoryを-module_dir-に変更\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#run-configurations%E3%81%A7junit%E7%94%A8%E3%81%AEworking-directory%E3%82%92-module_dir-%E3%81%AB%E5%A4%89%E6%9B%B4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRun ConfigurationsでJUnit用のWorking Directoryを \u003ccode\u003e$MODULE_DIR$\u003c/code\u003e に変更\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/4153/6ecc0ade-08d3-c297-ac37-276598f8b8ef.png\" alt=\"image\"\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/4153/99e45ac4-143d-9857-efe9-1b8563b3f652.png\" alt=\"image\"\u003e\u003c/p\u003e\n\n\u003cp\u003edeefaultを変更しておくと便利です。既存のConfigurationがある場合は書き換えるか消しておくとよいと思います。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"build-variantsのタブでtest-artifactをunit-testsに変更\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#build-variants%E3%81%AE%E3%82%BF%E3%83%96%E3%81%A7test-artifact%E3%82%92unit-tests%E3%81%AB%E5%A4%89%E6%9B%B4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eBuild VariantsのタブでTest ArtifactをUnit Testsに変更\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/4153/c8e6ab83-ab0f-0a2c-7643-e765b6e327ab.png\" alt=\"image\"\u003e\u003c/p\u003e\n\n\u003cp\u003eデフォはAndroid Instrumentation Testsになってるはずです。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"実行\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実行\u003c/h3\u003e\n\n\u003cp\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/4153/45890cb6-f2cf-6d0c-b1a4-1d66336325e8.png\" alt=\"image\"\u003e\u003c/p\u003e\n\n\u003cp\u003e全部実行はtest/javaディレクトリを右クリックすれば簡単にできます。1回実行すればRun Configurationsに追加されます。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"テストの開始までが遅い場合\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E9%96%8B%E5%A7%8B%E3%81%BE%E3%81%A7%E3%81%8C%E9%81%85%E3%81%84%E5%A0%B4%E5%90%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eテストの開始までが遅い場合\u003c/h3\u003e\n\n\u003cp\u003eRun/Debug ConfigurationsのBefore launchで\"Gradle-aware Make\"のほかに\"Make\"とかの余計なものがないか確認します。\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/4153/30554cd6-2c62-b7ce-7abb-0c07d8047fd6.png\" alt=\"image\"\u003e\u003c/p\u003e\n\n\u003cp\u003eまた、\u003ca href=\"https://code.google.com/p/android/issues/detail?id=156256#c10\"\u003eAndroid Studio 1.3まではテスト実行に不要なapk作成までやってしまい遅い\u003c/a\u003eので、Gradle-aware Makeにtaskの設定をするともう少し早くなります。\u003c/p\u003e\n\n\u003cp\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/4153/37ddf544-6135-5b87-f41a-c8ee01f55a15.png\" alt=\"gradle-aware-make.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003eFooBarの部分は\"Debug\"など、 \u003cem\u003e現在の\u003c/em\u003e Build Variantに該当する名前を書きます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"補足\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A3%9C%E8%B6%B3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e補足\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"customrobolectrictestrunner\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#customrobolectrictestrunner\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCustomRobolectricTestRunner\u003c/h2\u003e\n\n\u003cp\u003e元ネタ：\u003ca href=\"https://github.com/robolectric/robolectric-gradle-plugin/issues/142#issuecomment-103962546\"\u003ehttps://github.com/robolectric/robolectric-gradle-plugin/issues/142#issuecomment-103962546\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"なぜ必要か\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AA%E3%81%9C%E5%BF%85%E8%A6%81%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eなぜ必要か\u003c/h3\u003e\n\n\u003cp\u003eRobolectricのライブラリにbuildされたresource群やAndroidManifestファイルの位置を知らせるために必要です。\u003cbr\u003e\nこれがないとgetResources()やgetString()を叩くなどするとresourceが見つからない旨のエラーが出ます。\u003c/p\u003e\n\n\u003cp\u003e別の対応として\u003ca href=\"https://github.com/robolectric/robolectric-gradle-plugin\"\u003erobolectric-gradle-plugin\u003c/a\u003eもありますが、Android StudioでJUnit実行するとgradleを介さず起動するので、効果がありません。なので、pluginでやってることをCustomRobolectricTestRunnerにやらせます。\u003cbr\u003e\n（余談ですが最近の\u003ca href=\"https://github.com/robolectric/robolectric-gradle-plugin\"\u003erobolectric-gradle-plugin\u003c/a\u003eは\u003ca href=\"https://github.com/JakeWharton/gradle-android-test-plugin/blob/master/example/src/test/java/com/example/RobolectricGradleTestRunner.java\"\u003eRobolectricGradleTestRunner\u003c/a\u003eが不要になったようです。）\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"resource-not-foundのようなエラーが出る場合\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#resource-not-found%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E5%87%BA%E3%82%8B%E5%A0%B4%E5%90%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eResource not foundのようなエラーが出る場合\u003c/h3\u003e\n\n\u003cp\u003ebuild.gradleでapplicationIdを使い分けている等の場合は、android.packageのBuildConfig.APPLICATION_IDをデフォルトのapplicationId（恐らくAndroidManifest.xmlのandroid:package）に書き換えないとエラーが出ます。\u003cbr\u003e\n直接パッケージ名を記載したくない場合はbuild.gradleにbuildConfigFieldを書くと便利です。\u003cbr\u003e\n\u003ca href=\"https://github.com/robolectric/robolectric-gradle-plugin/issues/142#issuecomment-112386932\"\u003ehttps://github.com/robolectric/robolectric-gradle-plugin/issues/142#issuecomment-112386932\u003c/a\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"config\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#config\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003e@Config\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003erobolectric 3.0ならemulateSdkは21までいけるらしいです。\u003c/p\u003e\n\n\u003cp\u003eTODO: app/test/resources/robolectric.propretiesにsdk指定を書いても反映されなかったのでどなたかうまくできた方がいれば教えて下さい。これができると \u003ccode\u003e@Config(emulateSdk = ...)\u003c/code\u003e を書かずにすみます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"module_dir\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#module_dir\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003e$MODULE_DIR$\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003egradleは最初からmoduleの中（/path/to/project/app）で実行してくれるんですが、Android StudioのJUnit実行のデフォルトはprojectディレクトリ（/path/to/project）になってます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"before-launchのgradle-aware-makeとmake\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#before-launch%E3%81%AEgradle-aware-make%E3%81%A8make\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eBefore launchのGradle-aware MakeとMake\u003c/h2\u003e\n\n\u003cp\u003e手元の環境だとなぜだか実行時に2回ビルドが走るのでおかしいなと思ったら、MakeとGradle-aware Makeの両方が入っていました。もしかしたら自分でやったのかもしれない・・・。\u003c/p\u003e\n",
    "body": "# TL;DR\n\n## テストコードの準備\n\n### app/bulid.gradleに依存関係を追加\n\n```groovy\ndependencies {\n    ...\n    testCompile 'org.robolectric:robolectric:2.4'\n}\n```\n\n最新版を[公式](https://github.com/robolectric/robolectric#install)で確認して下さい。\n\n### [CustomRobolectricTestRunner](https://github.com/robolectric/robolectric-gradle-plugin/issues/142#issuecomment-103962546)を設置\n\n```java\n\npublic class CustomRobolectricTestRunner extends RobolectricTestRunner {\n    public CustomRoblectricTestRunner(Class\u003c?\u003e testClass) throws InitializationError {\n        super(testClass);\n        String buildVariant = (BuildConfig.FLAVOR.isEmpty() ? \"\" : BuildConfig.FLAVOR + \"/\") + BuildConfig.BUILD_TYPE;\n        System.setProperty(\"android.package\", BuildConfig.APPLICATION_ID);\n        System.setProperty(\"android.manifest\", \"build/intermediates/manifests/full/\" + buildVariant + \"/AndroidManifest.xml\");\n        System.setProperty(\"android.resources\", \"build/intermediates/res/\" + buildVariant);\n        System.setProperty(\"android.assets\", \"build/intermediates/assets/\" + buildVariant);\n    }\n}\n```\n\n（※Resource not foundなどというエラー出たら補足を参照のこと）\n\n### Robolectricを参照するテストコードにannotationを追加\n\n```java\n@Config(emulateSdk = 18)\n@RunWith(CustomRobolectricTestRunner.class)\npublic class FoobarTest {\n    @Test\n    public testHoge() {\n        Context context = Robolectric.applciation.getApplicationContext();\n        Foobar foobar = new Foobar(context);\n        ...\n    }\n}\n```\n\n## Android Studioの設定\n\n### Run ConfigurationsでJUnit用のWorking Directoryを `$MODULE_DIR$` に変更\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/4153/6ecc0ade-08d3-c297-ac37-276598f8b8ef.png)\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/4153/99e45ac4-143d-9857-efe9-1b8563b3f652.png)\n\ndeefaultを変更しておくと便利です。既存のConfigurationがある場合は書き換えるか消しておくとよいと思います。\n\n### Build VariantsのタブでTest ArtifactをUnit Testsに変更\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/4153/c8e6ab83-ab0f-0a2c-7643-e765b6e327ab.png)\n\nデフォはAndroid Instrumentation Testsになってるはずです。\n\n### 実行\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/4153/45890cb6-f2cf-6d0c-b1a4-1d66336325e8.png)\n\n全部実行はtest/javaディレクトリを右クリックすれば簡単にできます。1回実行すればRun Configurationsに追加されます。\n\n### テストの開始までが遅い場合\n\nRun/Debug ConfigurationsのBefore launchで\"Gradle-aware Make\"のほかに\"Make\"とかの余計なものがないか確認します。\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/4153/30554cd6-2c62-b7ce-7abb-0c07d8047fd6.png)\n\nまた、[Android Studio 1.3まではテスト実行に不要なapk作成までやってしまい遅い](https://code.google.com/p/android/issues/detail?id=156256#c10)ので、Gradle-aware Makeにtaskの設定をするともう少し早くなります。\n\n![gradle-aware-make.png](https://qiita-image-store.s3.amazonaws.com/0/4153/37ddf544-6135-5b87-f41a-c8ee01f55a15.png)\n\nFooBarの部分は\"Debug\"など、 *現在の* Build Variantに該当する名前を書きます。\n\n# 補足\n\n## CustomRobolectricTestRunner\n\n元ネタ：https://github.com/robolectric/robolectric-gradle-plugin/issues/142#issuecomment-103962546\n\n### なぜ必要か\n\nRobolectricのライブラリにbuildされたresource群やAndroidManifestファイルの位置を知らせるために必要です。\nこれがないとgetResources()やgetString()を叩くなどするとresourceが見つからない旨のエラーが出ます。\n\n別の対応として[robolectric-gradle-plugin](https://github.com/robolectric/robolectric-gradle-plugin)もありますが、Android StudioでJUnit実行するとgradleを介さず起動するので、効果がありません。なので、pluginでやってることをCustomRobolectricTestRunnerにやらせます。\n（余談ですが最近の[robolectric-gradle-plugin](https://github.com/robolectric/robolectric-gradle-plugin)は[RobolectricGradleTestRunner](https://github.com/JakeWharton/gradle-android-test-plugin/blob/master/example/src/test/java/com/example/RobolectricGradleTestRunner.java)が不要になったようです。）\n\n### Resource not foundのようなエラーが出る場合\n\nbuild.gradleでapplicationIdを使い分けている等の場合は、android.packageのBuildConfig.APPLICATION_IDをデフォルトのapplicationId（恐らくAndroidManifest.xmlのandroid:package）に書き換えないとエラーが出ます。\n直接パッケージ名を記載したくない場合はbuild.gradleにbuildConfigFieldを書くと便利です。\nhttps://github.com/robolectric/robolectric-gradle-plugin/issues/142#issuecomment-112386932\n\n\n## `@Config`\n\nrobolectric 3.0ならemulateSdkは21までいけるらしいです。\n\nTODO: app/test/resources/robolectric.propretiesにsdk指定を書いても反映されなかったのでどなたかうまくできた方がいれば教えて下さい。これができると `@Config(emulateSdk = ...)` を書かずにすみます。\n\n## `$MODULE_DIR$`\n\ngradleは最初からmoduleの中（/path/to/project/app）で実行してくれるんですが、Android StudioのJUnit実行のデフォルトはprojectディレクトリ（/path/to/project）になってます。\n\n## Before launchのGradle-aware MakeとMake\n\n手元の環境だとなぜだか実行時に2回ビルドが走るのでおかしいなと思ったら、MakeとGradle-aware Makeの両方が入っていました。もしかしたら自分でやったのかもしれない・・・。\n",
    "coediting": false,
    "created_at": "2015-06-16T21:49:45+09:00",
    "id": "d5cc27225a19e1971096",
    "private": false,
    "tags": [
      {
        "name": "AndroidStudio",
        "versions": []
      },
      {
        "name": "robolectric",
        "versions": []
      }
    ],
    "title": "最速でAndroid StudioでRobolectricのテストを正しく＆高速に動かす",
    "updated_at": "2015-06-16T21:50:14+09:00",
    "url": "http://qiita.com/yuya_presto/items/d5cc27225a19e1971096",
    "user": {
      "description": "Android StudioとXcodeを同時起動しながらgitでmergeしてpushする日々。",
      "facebook_id": "",
      "followees_count": 114,
      "followers_count": 75,
      "github_login_name": "ypresto",
      "id": "yuya_presto",
      "items_count": 18,
      "linkedin_id": "ypresto",
      "location": "Tokyo, Japan",
      "name": "Yuya Tanaka",
      "organization": "mixi, Inc",
      "permanent_id": 4153,
      "profile_image_url": "https://secure.gravatar.com/avatar/356e56d2b5f14e05f3c7e7931197da0b",
      "twitter_screen_name": "yuya_presto",
      "website_url": "http://ypresto.github.com/blog"
    }
  },
  {
    "rendered_body": "\u003cp\u003eSource Han Code JPとは、Adobe Fontsで無償公開されている\u003cbr\u003e\nコーディングに最適化された日本語フォントです。\u003cbr\u003e\nMac OSXからはhomebrew-caskからインストールできますし、\u003cbr\u003e\nWindowsなら以下のページからダウンロードして利用できます。\u003cbr\u003e\n\u003ca href=\"https://github.com/adobe-fonts/source-han-code-jp\"\u003ehttps://github.com/adobe-fonts/source-han-code-jp\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e数日間使ってみて、自分なりに良かった点と悪かった点が\u003cbr\u003e\nいくつか見つかったので書いていきます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"良い点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%89%AF%E3%81%84%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e良い点\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eフォントのウェイト（太さ）設定の幅が広い\u003c/li\u003e\n\u003cli\u003e全角文字がポップすぎない\u003c/li\u003e\n\u003cli\u003e漢字にアンチエイリアスが掛かっても消えたり潰れたりしにくい\u003c/li\u003e\n\u003cli\u003e「アルファベットの中に少しだけ日本語」の状態の見た目の調和が取れている\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"悪い点\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%82%AA%E3%81%84%E7%82%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e悪い点\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e全角文字が中心のドキュメントでは文字が小さく見える\u003c/li\u003e\n\u003cli\u003e半角文字が全角文字よりも全体的に太く見える\u003c/li\u003e\n\u003cli\u003e半角文字と全角文字が1行の中にあると文末が不揃いに見える\u003c/li\u003e\n\u003cli\u003eエディタのruler機能があてにならない\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"これらの原因\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%93%E3%82%8C%E3%82%89%E3%81%AE%E5%8E%9F%E5%9B%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eこれらの原因\u003c/h3\u003e\n\n\u003cp\u003eこのフォントは一般の等幅フォントと違って\u003cbr\u003e\n半角文字と全角文字の幅の比率が2:3になっています。\u003cbr\u003e\nそのため、半角文字が中心のコードでは\u003cbr\u003e\n字間がゆったりと取れ、見やすくなっているわけです。\u003c/p\u003e\n\n\u003cp\u003eしかしその弊害で、これまでの等幅フォントに慣れていればいるほど、\u003cbr\u003e\n全角文字と比較して半角文字の幅が広く、\u003cbr\u003e\n半角文字と比較して全角文字が小さく見えてしまう、\u003cbr\u003e\nということが起きてるのではないかと思います。\u003cbr\u003e\nこの辺は慣れでカバーできる部分かなと。\u003c/p\u003e\n",
    "body": "\nSource Han Code JPとは、Adobe Fontsで無償公開されている\nコーディングに最適化された日本語フォントです。\nMac OSXからはhomebrew-caskからインストールできますし、\nWindowsなら以下のページからダウンロードして利用できます。\nhttps://github.com/adobe-fonts/source-han-code-jp\n\n数日間使ってみて、自分なりに良かった点と悪かった点が\nいくつか見つかったので書いていきます。\n\n## 良い点\n\n* フォントのウェイト（太さ）設定の幅が広い\n* 全角文字がポップすぎない\n* 漢字にアンチエイリアスが掛かっても消えたり潰れたりしにくい\n* 「アルファベットの中に少しだけ日本語」の状態の見た目の調和が取れている\n\n## 悪い点\n\n* 全角文字が中心のドキュメントでは文字が小さく見える\n* 半角文字が全角文字よりも全体的に太く見える\n* 半角文字と全角文字が1行の中にあると文末が不揃いに見える\n* エディタのruler機能があてにならない\n\n### これらの原因\n\nこのフォントは一般の等幅フォントと違って\n半角文字と全角文字の幅の比率が2:3になっています。\nそのため、半角文字が中心のコードでは\n字間がゆったりと取れ、見やすくなっているわけです。\n\nしかしその弊害で、これまでの等幅フォントに慣れていればいるほど、\n全角文字と比較して半角文字の幅が広く、\n半角文字と比較して全角文字が小さく見えてしまう、\nということが起きてるのではないかと思います。\nこの辺は慣れでカバーできる部分かなと。\n",
    "coediting": false,
    "created_at": "2015-06-16T21:39:58+09:00",
    "id": "07f84796e5bfcdd4aa30",
    "private": false,
    "tags": [
      {
        "name": "font",
        "versions": []
      }
    ],
    "title": "Source Han Code JPを使ってみて感じたこと",
    "updated_at": "2015-06-16T21:39:58+09:00",
    "url": "http://qiita.com/nipoko/items/07f84796e5bfcdd4aa30",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 0,
      "followers_count": 0,
      "github_login_name": "nipoko",
      "id": "nipoko",
      "items_count": 1,
      "linkedin_id": "",
      "location": "Aichi, Japan",
      "name": "Nipoko Ogino",
      "organization": "",
      "permanent_id": 80659,
      "profile_image_url": "https://secure.gravatar.com/avatar/28850ae687dadd1e103d6b5cda25a72e",
      "twitter_screen_name": "nipoko",
      "website_url": "http://8-degrees.info/"
    }
  },
  {
    "rendered_body": "\u003cp\u003e\u003ca href=\"https://developer.mozilla.org/ja/docs/WebAPI\"\u003eWebAPI\u003c/a\u003eの\u003ca href=\"http://au-fx.kddi.com/products/index.html\"\u003eFx0\u003c/a\u003eでの動作確認。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"vibration-api\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#vibration-api\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ca href=\"https://developer.mozilla.org/ja/docs/Web/Guide/API/Vibration\"\u003eVibration API\u003c/a\u003e\n\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"js\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nx\"\u003enavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evibrate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e1000ミリ秒振動させる。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"js\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nx\"\u003enavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evibrate\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e150\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e50ミリ秒振動させて100ミリ秒止めて150ミリ秒振動させる。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"js\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nx\"\u003enavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evibrate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e振動をすべて止める。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"fx0で動作確認\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#fx0%E3%81%A7%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eFx0で動作確認\u003c/h1\u003e\n\n\u003cp\u003eFirefox WebIDEのHello Worldテンプレで確認してみます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"js\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp.js\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"load\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003enavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evibrate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eと修正してFx0にインストールするとブーンと１秒間振動。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"js\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp.js\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"load\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003enavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evibrate\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e150\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eと修正してFx0にインストールするとブブンと振動。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"js\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp.js\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"load\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003enavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evibrate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eと修正してFx0にインストールするとずっと振動しつづける。\u003cbr\u003e\nそもそも渡す値は\u003ccode\u003eunsigned long\u003c/code\u003eとされているので\u003ccode\u003e-1\u003c/code\u003eを渡すと\u003ccode\u003e0xffffffff\u003c/code\u003eとなるのかな？\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"js\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp.js\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"load\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"touchstart\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003enavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evibrate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n  \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eaddEventListener\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"touchend\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003enavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003evibrate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eとするとタッチした間だけ振動する。\u003c/p\u003e\n",
    "body": "[WebAPI](https://developer.mozilla.org/ja/docs/WebAPI)の[Fx0](http://au-fx.kddi.com/products/index.html)での動作確認。\n\n# [Vibration API](https://developer.mozilla.org/ja/docs/Web/Guide/API/Vibration)\n```js:\nnavigator.vibrate(1000);\n```\n1000ミリ秒振動させる。\n\n```js:\nnavigator.vibrate([50, 100, 150]);\n```\n50ミリ秒振動させて100ミリ秒止めて150ミリ秒振動させる。\n\n```js:\nnavigator.vibrate(0);\n```\n振動をすべて止める。\n\n# Fx0で動作確認\nFirefox WebIDEのHello Worldテンプレで確認してみます。\n\n```js:app.js\nwindow.addEventListener(\"load\", function() {\n  navigator.vibrate(1000);\n});\n```\n\nと修正してFx0にインストールするとブーンと１秒間振動。\n\n```js:app.js\nwindow.addEventListener(\"load\", function() {\n  navigator.vibrate([50, 100, 150]);\n});\n```\n\nと修正してFx0にインストールするとブブンと振動。\n\n```js:app.js\nwindow.addEventListener(\"load\", function() {\n  navigator.vibrate(-1);\n});\n```\n\nと修正してFx0にインストールするとずっと振動しつづける。\nそもそも渡す値は`unsigned long`とされているので`-1`を渡すと`0xffffffff`となるのかな？\n\n```js:app.js\nwindow.addEventListener(\"load\", function() {\n  document.addEventListener(\"touchstart\", function(){\n    navigator.vibrate(-1);\n  });\n  \n  document.addEventListener(\"touchend\", function(){\n    navigator.vibrate(0);\n  });\n});\n```\n\nとするとタッチした間だけ振動する。\n",
    "coediting": false,
    "created_at": "2015-06-16T21:37:00+09:00",
    "id": "a08d7536323ea5d2d605",
    "private": false,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "FirefoxOS",
        "versions": []
      },
      {
        "name": "fxos",
        "versions": []
      },
      {
        "name": "Fx0",
        "versions": []
      }
    ],
    "title": "Fx0でVibration API",
    "updated_at": "2015-06-16T21:37:00+09:00",
    "url": "http://qiita.com/nobucci/items/a08d7536323ea5d2d605",
    "user": {
      "description": null,
      "facebook_id": null,
      "followees_count": 0,
      "followers_count": 0,
      "github_login_name": null,
      "id": "nobucci",
      "items_count": 2,
      "linkedin_id": null,
      "location": null,
      "name": "",
      "organization": null,
      "permanent_id": 79655,
      "profile_image_url": "https://pbs.twimg.com/profile_images/2495616871/iavvgzz86osrvzam8tf4_normal.jpeg",
      "twitter_screen_name": "nobucci",
      "website_url": null
    }
  },
  {
    "rendered_body": "\u003cp\u003e普通のRailsのルーティングなら\u003ccode\u003epry\u003c/code\u003eを使っている場合以下のように簡単に確認できる。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eshow\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eroutes\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eGrapeの場合はうまい方法が見当たらなかったのでとりあえず以下のようにやった。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003epp\u003c/span\u003e \u003cspan class=\"no\"\u003eApi\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eroutes\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eselect\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einstance_variable_get\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:@options\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/Login/\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"c1\"\u003e#\u0026lt;Grape::Route:0x007fdd5a2c32a8\u003c/span\u003e\n  \u003cspan class=\"vi\"\u003e@options\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\n   \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"ss\"\u003e:params\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\n     \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"mail\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"ss\"\u003e:required\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:type\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"String\"\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n      \u003cspan class=\"s2\"\u003e\"password\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"ss\"\u003e:required\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:type\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"String\"\u003c/span\u003e\u003cspan class=\"p\"\u003e}},\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Login\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003e:prefix\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003e:version\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"v1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003e:namespace\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"/\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003e:method\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"POST\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003e:path\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"/:version/login(.:format)\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003e:compiled\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\\A\\/(?\u0026lt;version\u0026gt;v1)\\/login(?:\\.(?\u0026lt;format\u0026gt;[^\\/.?]+))?\\Z/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"ss\"\u003e:settings\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\n     \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\n       \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"ss\"\u003e:description\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"Login\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"ss\"\u003e:params\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\n         \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"mail\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"ss\"\u003e:required\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:type\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"String\"\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n          \u003cspan class=\"s2\"\u003e\"password\"\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"ss\"\u003e:required\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:type\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"String\"\u003c/span\u003e\u003cspan class=\"p\"\u003e}}},\u003c/span\u003e\n      \u003cspan class=\"ss\"\u003e:declared_params\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;[\u003c/span\u003e\u003cspan class=\"ss\"\u003e:mail\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:password\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e}}\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;]\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eGrapeのパラメータの指定とか書く位置間違えて（ネスト間違えたり）して意図しないことになってたりしたことがあったので、作ってる最中はまめに確認したい。\u003c/p\u003e\n\n\u003cp\u003ebeforeとかafterがどの単位に効いているかも確認できたら良いんだけどなー\u003cbr\u003e\nどうしたらいいんだろう？\u003c/p\u003e\n",
    "body": "普通のRailsのルーティングなら`pry`を使っている場合以下のように簡単に確認できる。\n\n```rb\n\u003e show-routes\n```\n\nGrapeの場合はうまい方法が見当たらなかったのでとりあえず以下のようにやった。\n\n```rb\n\u003e pp Api.routes.select {|r| r.instance_variable_get(:@options)[:description] =~ /Login/ }\n[#\u003cGrape::Route:0x007fdd5a2c32a8\n  @options=\n   {:params=\u003e\n     {\"mail\"=\u003e{:required=\u003etrue, :type=\u003e\"String\"},\n      \"password\"=\u003e{:required=\u003etrue, :type=\u003e\"String\"}},\n    :description=\u003e\"Login\",\n    :prefix=\u003enil,\n    :version=\u003e\"v1\",\n    :namespace=\u003e\"/\",\n    :method=\u003e\"POST\",\n    :path=\u003e\"/:version/login(.:format)\",\n    :compiled=\u003e/\\A\\/(?\u003cversion\u003ev1)\\/login(?:\\.(?\u003cformat\u003e[^\\/.?]+))?\\Z/,\n    :settings=\u003e\n     {:description=\u003e\n       {:description=\u003e\"Login\",\n        :params=\u003e\n         {\"mail\"=\u003e{:required=\u003etrue, :type=\u003e\"String\"},\n          \"password\"=\u003e{:required=\u003etrue, :type=\u003e\"String\"}}},\n      :declared_params=\u003e[:mail, :password]}}\u003e]\n```\n\nGrapeのパラメータの指定とか書く位置間違えて（ネスト間違えたり）して意図しないことになってたりしたことがあったので、作ってる最中はまめに確認したい。\n\nbeforeとかafterがどの単位に効いているかも確認できたら良いんだけどなー\nどうしたらいいんだろう？\n",
    "coediting": false,
    "created_at": "2015-06-16T21:36:37+09:00",
    "id": "853e839893b31a3fd317",
    "private": false,
    "tags": [
      {
        "name": "Rails",
        "versions": []
      },
      {
        "name": "grape",
        "versions": []
      }
    ],
    "title": "コンソール上からGrapeのroutesを確認する",
    "updated_at": "2015-06-16T21:36:37+09:00",
    "url": "http://qiita.com/akiyoshi83/items/853e839893b31a3fd317",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 1,
      "followers_count": 1,
      "github_login_name": "akiyoshi83",
      "id": "akiyoshi83",
      "items_count": 2,
      "linkedin_id": "",
      "location": "",
      "name": "akiyoshi",
      "organization": "",
      "permanent_id": 36124,
      "profile_image_url": "https://secure.gravatar.com/avatar/8c583a8630bc2f59435d266e6b17d1a2",
      "twitter_screen_name": "akiyoshi83",
      "website_url": ""
    }
  },
  {
    "rendered_body": "\u003cp\u003ever 0.12.1 になって、 component の中で使う props の validation の記述ができるようになったのは便利そう。他にも変更点はいくつかあるけど、中でも困っていた\u003ccode\u003e\u0026lt;content\u0026gt;\u003c/code\u003eのエラーが改善されたのでメモしておく。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"0120系ではエラーになる書き方\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#0120%E7%B3%BB%E3%81%A7%E3%81%AF%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%AB%E3%81%AA%E3%82%8B%E6%9B%B8%E3%81%8D%E6%96%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e0.12.0系ではエラーになる書き方。\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://jsfiddle.net/akiho/Lp6aws1h/\"\u003edemo\u003c/a\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"html\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehtml\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nt\"\u003e\u0026lt;div\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"app\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;cmpo\u0026gt;\u003c/span\u003ethis is app message\u003cspan class=\"nt\"\u003e\u0026lt;/cmpo\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;cmpo\u0026gt;\u0026lt;/cmpo\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/div\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"nt\"\u003e\u0026lt;template\u003c/span\u003e \u003cspan class=\"na\"\u003eid=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"cmpo\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;p\u0026gt;\u003c/span\u003ethis is cmpo message\u003cspan class=\"nt\"\u003e\u0026lt;/p\u0026gt;\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\u0026lt;content\u0026gt;\u0026lt;/content\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/template\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"javascript\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ejavascript\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nx\"\u003eVue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ecomponent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'cmpo'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003etemplate\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e'#cmpo'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nx\"\u003eVue\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n    \u003cspan class=\"nx\"\u003eel\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s1\"\u003e'#app'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003e結果\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"vg\"\u003ethis\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"vg\"\u003eis\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"vg\"\u003ecmpo\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"vg\"\u003emessage\u003c/span\u003e\n\u003cspan class=\"vg\"\u003ethis\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"vg\"\u003eis\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"vg\"\u003eapp\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"vg\"\u003emessage\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003ethis is cmpo message\u003c/code\u003eがもうひとつ表示されて欲しかった。\u003cbr\u003e\nこの問題は v0.12.1 になって改善されたみたい。\u003c/p\u003e\n",
    "body": "ver 0.12.1 になって、 component の中で使う props の validation の記述ができるようになったのは便利そう。他にも変更点はいくつかあるけど、中でも困っていた``\u003ccontent\u003e``のエラーが改善されたのでメモしておく。\n\n## 0.12.0系ではエラーになる書き方。\n\n[demo](https://jsfiddle.net/akiho/Lp6aws1h/)\n\n```html:html\n\u003cdiv id=\"app\"\u003e\n    \u003ccmpo\u003ethis is app message\u003c/cmpo\u003e\n    \u003ccmpo\u003e\u003c/cmpo\u003e\n\u003c/div\u003e\n\n\u003ctemplate id=\"cmpo\"\u003e\n    \u003cp\u003ethis is cmpo message\u003c/p\u003e\n    \u003ccontent\u003e\u003c/content\u003e\n\u003c/template\u003e\n```\n\n\n```javascript:javascript\nVue.component('cmpo', {\n    template: '#cmpo',\n});\n\nnew Vue({\n    el: '#app',\n});\n```\n\n```:結果\nthis is cmpo message\nthis is app message\n```\n\n``this is cmpo message``がもうひとつ表示されて欲しかった。\nこの問題は v0.12.1 になって改善されたみたい。\n\n",
    "coediting": false,
    "created_at": "2015-06-16T21:31:11+09:00",
    "id": "14de3f08d03aeb46a63e",
    "private": false,
    "tags": [
      {
        "name": "vue.js",
        "versions": []
      }
    ],
    "title": "Vue.js 0.12.1 になって、改善されたこと。",
    "updated_at": "2015-06-16T21:31:11+09:00",
    "url": "http://qiita.com/akifo/items/14de3f08d03aeb46a63e",
    "user": {
      "description": "エンジニア目指して勉強中。\r\n今、２８歳。\r\nいつか就職できるかな。",
      "facebook_id": "",
      "followees_count": 1,
      "followers_count": 2,
      "github_login_name": "akifo",
      "id": "akifo",
      "items_count": 11,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 62259,
      "profile_image_url": "https://avatars.githubusercontent.com/u/7263054?v=3",
      "twitter_screen_name": "akihoo",
      "website_url": ""
    }
  },
  {
    "rendered_body": "\u003cp\u003eセル移動の際に呼ばれるデリゲートメソッドを使用する。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"objc\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003emethod\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"p\"\u003e-\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eNSIndexPath\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003enonnull\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"nf\"\u003etableView:\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eUITableView\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003enonnull\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"nv\"\u003etableView\u003c/span\u003e\n    \u003cspan class=\"nf\"\u003etargetIndexPathForMoveFromRowAtIndexPath:\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eNSIndexPath\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003enonnull\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"nv\"\u003esourceIndexPath\u003c/span\u003e\n    \u003cspan class=\"nf\"\u003etoProposedIndexPath:\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eNSIndexPath\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003enonnull\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"nv\"\u003eproposedDestinationIndexPath\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e入れ替えていいインデックスと入れ替えてはいけないインデックスを指定することで、移動禁止のセルの移動を抑制できる。\u003c/p\u003e\n\n\u003cp\u003e実装例\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"objc\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eexample\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"p\"\u003e-\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eNSIndexPath\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"nf\"\u003etableView:\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eUITableView\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"nv\"\u003etableView\u003c/span\u003e\n\u003cspan class=\"nf\"\u003etargetIndexPathForMoveFromRowAtIndexPath:\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eNSIndexPath\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"nv\"\u003esourceIndexPath\u003c/span\u003e\n       \u003cspan class=\"nf\"\u003etoProposedIndexPath:\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"bp\"\u003eNSIndexPath\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"nv\"\u003eproposedDestinationIndexPath\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eproposedDestinationIndexPath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esection\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003eproposedDestinationIndexPath\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erow\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"bp\"\u003eNSIndexPath\u003c/span\u003e \u003cspan class=\"nl\"\u003eindexPathForRow\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"nl\"\u003einSection\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eproposedDestinationIndexPath\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e上記コードは、テーブルの中でsection:0 row:0 のセルの移動を制限している。\u003cbr\u003e\n制限されている場所にセルを移動しようとすると、その真下(section:0 row:1)に移動するようにしている。\u003c/p\u003e\n\n\u003cp\u003e参考\u003cbr\u003e\n\u003ca href=\"https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITableViewDelegate_Protocol/#//apple_ref/occ/intfm/UITableViewDelegate/tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:\"\u003eUITableViewDelegate Protocol Reference\u003c/a\u003e\u003c/p\u003e\n",
    "body": "セル移動の際に呼ばれるデリゲートメソッドを使用する。\n\n```objc:method\n- (NSIndexPath * nonnull)tableView:(UITableView * nonnull)tableView\n    targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath * nonnull)sourceIndexPath\n    toProposedIndexPath:(NSIndexPath * nonnull)proposedDestinationIndexPath\n```\n\n入れ替えていいインデックスと入れ替えてはいけないインデックスを指定することで、移動禁止のセルの移動を抑制できる。\n\n\n\n実装例\n\n```objc:example\n- (NSIndexPath *)tableView:(UITableView *)tableView\ntargetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)sourceIndexPath\n       toProposedIndexPath:(NSIndexPath *)proposedDestinationIndexPath{\n    if (proposedDestinationIndexPath.section==0 \u0026\u0026 proposedDestinationIndexPath.row==0) {\n        return [NSIndexPath indexPathForRow:0 inSection:1];\n    }\n    return proposedDestinationIndexPath;\n}\n\n```\n\n上記コードは、テーブルの中でsection:0 row:0 のセルの移動を制限している。\n制限されている場所にセルを移動しようとすると、その真下(section:0 row:1)に移動するようにしている。\n\n\n\n\n参考\n[UITableViewDelegate Protocol Reference](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITableViewDelegate_Protocol/#//apple_ref/occ/intfm/UITableViewDelegate/tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:)\n",
    "coediting": false,
    "created_at": "2015-06-16T21:24:11+09:00",
    "id": "1d302f0b5e68c509d77b",
    "private": false,
    "tags": [
      {
        "name": "iOS",
        "versions": []
      }
    ],
    "title": "編集中のUITableViewController で順番入れ替えを制限する",
    "updated_at": "2015-06-16T21:24:11+09:00",
    "url": "http://qiita.com/color_box/items/1d302f0b5e68c509d77b",
    "user": {
      "description": null,
      "facebook_id": null,
      "followees_count": 29,
      "followers_count": 3,
      "github_login_name": "colorbox",
      "id": "color_box",
      "items_count": 19,
      "linkedin_id": null,
      "location": null,
      "name": "",
      "organization": null,
      "permanent_id": 37053,
      "profile_image_url": "https://gravatar.com/avatar/fb9039a0ef6902a53968a5a47ba465c9?d=https%3A%2F%2Fidenticons.github.com%2F42733d595c9eac9e5d3dbeaacc52d596.png\u0026r=x",
      "twitter_screen_name": "color_box",
      "website_url": null
    }
  },
  {
    "rendered_body": "\u003cp\u003ePythonを始めてみたのですが、以下の記法にちょっぴり感激いたしました。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"Python\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehoge.py\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"s\"\u003eu\"失敗した。\"\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"c\"\u003e# 結果：失敗した。失敗した。失敗した。失敗した。失敗した。\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003eそこで、他の言語でも同様の記法で同様の結果が得られるのか気になったので試してみました。\u003c/p\u003e\n\n\u003chr\u003e\n\n\u003cul\u003e\n\u003cli\u003eRuby -\u0026gt; イケました!\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"Ruby\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehoge.rb\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"失敗した。\"\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 結果：失敗した。失敗した。失敗した。失敗した。失敗した。\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003eElixir -\u0026gt; ダメでした…\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"Elixir\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehoge.exs\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nc\"\u003eIO\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eputs\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"失敗した。\"\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 結果：warning: this expression will fail with ArithmeticError\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003ePerl -\u0026gt; ダメでした…\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"Perl\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehoge.pl\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"s\"\u003e\"失敗した。\"\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 結果：0\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003ePHP -\u0026gt; ダメでした…\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"php\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehoge.php\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"失敗した。\"\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 結果：0\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cul\u003e\n\u003cli\u003eSwift -\u0026gt; ダメでした…\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"Swift\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ehoge.playground\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"失敗した。\"\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// 結果：実行不可\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003chr\u003e\n\n\u003cp\u003e意外とダメなものなのですね。\u003cbr\u003e\n今回試していない言語を触る機会があれば、同様の記法でイケるか試してみたいと思います!\u003c/p\u003e\n",
    "body": "Pythonを始めてみたのですが、以下の記法にちょっぴり感激いたしました。\n\n```Python:hoge.py\nprint u\"失敗した。\" * 5 # 結果：失敗した。失敗した。失敗した。失敗した。失敗した。\n```\n\nそこで、他の言語でも同様の記法で同様の結果が得られるのか気になったので試してみました。\n***\n\n* Ruby -\u003e イケました!\n\n```Ruby:hoge.rb\nputs \"失敗した。\" * 5 # 結果：失敗した。失敗した。失敗した。失敗した。失敗した。\n```\n\n* Elixir -\u003e ダメでした…\n\n```Elixir:hoge.exs\nIO.puts \"失敗した。\" * 5 # 結果：warning: this expression will fail with ArithmeticError\n```\n\n* Perl -\u003e ダメでした…\n\n```Perl:hoge.pl\nprint \"失敗した。\" * 5; # 結果：0\n```\n\n* PHP -\u003e ダメでした…\n\n```php:hoge.php\nprint \"失敗した。\" * 5; // 結果：0\n```\n\n* Swift -\u003e ダメでした…\n\n```Swift:hoge.playground\nprintln(\"失敗した。\" * 5) // 結果：実行不可\n```\n***\n\n意外とダメなものなのですね。\n今回試していない言語を触る機会があれば、同様の記法でイケるか試してみたいと思います!\n",
    "coediting": false,
    "created_at": "2015-06-16T21:20:37+09:00",
    "id": "90f83fc8409175e68040",
    "private": false,
    "tags": [
      {
        "name": "Python",
        "versions": []
      }
    ],
    "title": "Pythonの「*」文字出力を他の言語でやってみた",
    "updated_at": "2015-06-16T21:20:37+09:00",
    "url": "http://qiita.com/nagi244/items/90f83fc8409175e68040",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 9,
      "followers_count": 10,
      "github_login_name": null,
      "id": "nagi244",
      "items_count": 1,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "INDETAIL Co.,Ltd",
      "permanent_id": 10982,
      "profile_image_url": "https://secure.gravatar.com/avatar/c71864d468c0dc1c088b58ad246a03d1",
      "twitter_screen_name": "nagi244",
      "website_url": ""
    }
  },
  {
    "rendered_body": "\n\u003ch1\u003e\n\u003cspan id=\"背景\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%83%8C%E6%99%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e背景\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/Mr_K/items/c092295379fe1dda6211\"\u003e前回\u003c/a\u003eの続き。\u003cbr\u003e\nCodeFileにしているcsファイルから、DLLのクラスを呼び出せるかが気になった。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"準備\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%BA%96%E5%82%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e準備\u003c/h1\u003e\n\n\u003cp\u003e1) 前回のソリューションにクラスライブラリのプロジェクトを追加する。（名前はClassLibrary）\u003cbr\u003e\n2) 既定で存在するClass1.csを以下のように修正する。\u003cbr\u003e\n●Class1.aspx\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"csharp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"nn\"\u003eClassLibrary\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eClass1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"nf\"\u003eClass1\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"kt\"\u003estring\u003c/span\u003e \u003cspan class=\"nf\"\u003eGetKaomoji\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003eswitch\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\"(´∀｀)\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"k\"\u003ecase\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\"(　・ω・)\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"s\"\u003e\"(・∀・)\"\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e3) WebApplicationプロジェクトの参照設定で、ClassLibraryを追加する。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"実験と結果\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E9%A8%93%E3%81%A8%E7%B5%90%E6%9E%9C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実験と結果\u003c/h1\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"codefileaspxcsから別dllのクラスを呼んでみる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#codefileaspxcs%E3%81%8B%E3%82%89%E5%88%A5dll%E3%81%AE%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%92%E5%91%BC%E3%82%93%E3%81%A7%E3%81%BF%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCodeFile.aspx.csから別DLLのクラスを呼んでみる。\u003c/h2\u003e\n\n\u003cp\u003eCodeFile.aspx.csを以下のように修正する。\u003cbr\u003e\n●CodeFile.aspx.cs\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"csharp\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"nn\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003enamespace\u003c/span\u003e \u003cspan class=\"nn\"\u003eWebApplication\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003epublic\u003c/span\u003e \u003cspan class=\"k\"\u003epartial\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCodeFile\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eSystem\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eWeb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eUI\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ePage\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eprotected\u003c/span\u003e \u003cspan class=\"k\"\u003evoid\u003c/span\u003e \u003cspan class=\"nf\"\u003ePage_Load\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eobject\u003c/span\u003e \u003cspan class=\"n\"\u003esender\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eEventArgs\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"kt\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003esample\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"n\"\u003eClassLibrary\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eClass1\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e//←別DLLのクラスを呼ぶよ!\u003c/span\u003e\n            \u003cspan class=\"n\"\u003elbl\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eText\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\"code file!!\"\u003c/span\u003e \u003cspan class=\"p\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003esample\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eGetKaomoji\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cstrong\u003e→　CodeBehindのようにintellisenseから別DLLのクラス呼び出せた\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"ビルドしてない状態でブラウザでリクエストしてみる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%93%E3%83%AB%E3%83%89%E3%81%97%E3%81%A6%E3%81%AA%E3%81%84%E7%8A%B6%E6%85%8B%E3%81%A7%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%A7%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eビルドしてない状態でブラウザでリクエストしてみる\u003c/h2\u003e\n\n\u003cp\u003e→　エラーとなる。(DLLが見つからないと怒られる)\u003cbr\u003e\n\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/82737/84a25ca1-71ae-2fd4-f466-103fb0076b84.png\" alt=\"11.PNG\"\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"ビルドした後リクエストしてみる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%93%E3%83%AB%E3%83%89%E3%81%97%E3%81%9F%E5%BE%8C%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eビルドした後、リクエストしてみる\u003c/h3\u003e\n\n\u003cp\u003e→　正しく表示できる。\u003cbr\u003e\n\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/82737/a26e93b4-ae83-ba4e-669a-5d8101b5eda7.png\" alt=\"12.PNG\"\u003e\u003cbr\u003e\n\u003cstrong\u003e→CodeFile属性の場合、CodeBehindと同様に、リクエスト時に参照するクラスライブラリのDLLファイルがbinフォルダに配置しておく必要がある\u003c/strong\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h1\u003e\n\n\u003col\u003e\n\u003cli\u003e別DLL内のクラスの呼び出し方は、CodeBehind属性・CodeFile属性ともに同じである。 \u003c/li\u003e\n\u003cli\u003eCodeBehind属性・CodeFile属性の両方とも、別のDLL内のクラスを参照する場合は、参照するDLLファイルをbinフォルダに配置しておく必要がある。\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"関連\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%96%A2%E9%80%A3\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e関連\u003c/h1\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/Mr_K/items/c092295379fe1dda6211\"\u003eCodeBehind vs CodeFile (1)\u003c/a\u003e\u003c/p\u003e\n",
    "body": "#背景\n[前回](http://qiita.com/Mr_K/items/c092295379fe1dda6211)の続き。\nCodeFileにしているcsファイルから、DLLのクラスを呼び出せるかが気になった。\n\n#準備\n1) 前回のソリューションにクラスライブラリのプロジェクトを追加する。（名前はClassLibrary）\n2) 既定で存在するClass1.csを以下のように修正する。\n●Class1.aspx\n\n```csharp\nnamespace ClassLibrary {\n    public class Class1 {\n        public Class1() { }\n        public string GetKaomoji(int num) {\n            switch (num) {\n                case 1: return \"(´∀｀)\";\n                case 2: return \"(　・ω・)\";\n                default: return \"(・∀・)\";\n            }\n        }\n    }\n}\n```\n3) WebApplicationプロジェクトの参照設定で、ClassLibraryを追加する。\n\n#実験と結果\n## CodeFile.aspx.csから別DLLのクラスを呼んでみる。\nCodeFile.aspx.csを以下のように修正する。\n●CodeFile.aspx.cs\n\n```csharp\nusing System;\n\nnamespace WebApplication {\n    public partial class CodeFile : System.Web.UI.Page {\n        protected void Page_Load(object sender, EventArgs e) {\n            var sample = new ClassLibrary.Class1(); //←別DLLのクラスを呼ぶよ!\n            lbl.Text = \"code file!!\" + sample.GetKaomoji(1);\n        }\n    }\n}\n```\n**→　CodeBehindのようにintellisenseから別DLLのクラス呼び出せた**\n\n##ビルドしてない状態でブラウザでリクエストしてみる\n→　エラーとなる。(DLLが見つからないと怒られる)\n![11.PNG](https://qiita-image-store.s3.amazonaws.com/0/82737/84a25ca1-71ae-2fd4-f466-103fb0076b84.png)\n\n###ビルドした後、リクエストしてみる\n→　正しく表示できる。\n![12.PNG](https://qiita-image-store.s3.amazonaws.com/0/82737/a26e93b4-ae83-ba4e-669a-5d8101b5eda7.png)\n**→CodeFile属性の場合、CodeBehindと同様に、リクエスト時に参照するクラスライブラリのDLLファイルがbinフォルダに配置しておく必要がある**\n\n#まとめ\n1. 別DLL内のクラスの呼び出し方は、CodeBehind属性・CodeFile属性ともに同じである。 \n1. CodeBehind属性・CodeFile属性の両方とも、別のDLL内のクラスを参照する場合は、参照するDLLファイルをbinフォルダに配置しておく必要がある。\n\n#関連\n[CodeBehind vs CodeFile (1)](http://qiita.com/Mr_K/items/c092295379fe1dda6211)\n",
    "coediting": false,
    "created_at": "2015-06-16T21:11:42+09:00",
    "id": "d3006288571687240659",
    "private": false,
    "tags": [
      {
        "name": "C#",
        "versions": []
      },
      {
        "name": "ASP.NET",
        "versions": []
      }
    ],
    "title": "CodeBehind vs CodeFile (2) ",
    "updated_at": "2015-06-16T21:18:14+09:00",
    "url": "http://qiita.com/Mr_K/items/d3006288571687240659",
    "user": {
      "description": null,
      "facebook_id": null,
      "followees_count": 0,
      "followers_count": 0,
      "github_login_name": null,
      "id": "Mr_K",
      "items_count": 2,
      "linkedin_id": null,
      "location": null,
      "name": "",
      "organization": null,
      "permanent_id": 82737,
      "profile_image_url": "https://secure.gravatar.com/avatar/c048e797a3fbc4154d637587727d5726",
      "twitter_screen_name": null,
      "website_url": null
    }
  },
  {
    "rendered_body": "\n\u003ch1\u003e\n\u003cspan id=\"うおー\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%86%E3%81%8A%E3%83%BC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eうおー！\u003c/h1\u003e\n\n\u003cp\u003e「\u003ca href=\"http://qiita.com/t_uda/items/1969e09a970d71e4cfd6\"\u003eswitch(true) イディオム考察\u003c/a\u003e」とゆー記事を読んだ。とりあえず、心の中で即答した上で、「うおー説明しにくい！」ってなったので書いておく。「switch(true)って何？」という向きは、リンク先をご覧あれ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"論理値の比較はやめておけ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%AB%96%E7%90%86%E5%80%A4%E3%81%AE%E6%AF%94%E8%BC%83%E3%81%AF%E3%82%84%E3%82%81%E3%81%A6%E3%81%8A%E3%81%91\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e論理値の比較はやめておけ\u003c/h1\u003e\n\n\u003cp\u003e私が心の中で即答したのは、「論理値の比較はやめておけ」ということだ。論理値の比較は、そして特にリテラルとの比較はやめておけ、ということだ。つまり、下記みたいなもん全部だ。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// 1\nif(true === bJudge){}\n\n// 2\nif(bFlag === (c===d)){}\n\n// 3\nif((a===b)===(c===d)){}\n\n// 4\nswitch(true){\n  case a \u0026lt; 0:\n    break;\n  case b \u0026gt; c:\n    break;\n}\n\n// 5\nswitch(a \u0026gt; b)\n  case c \u0026gt; d:\n    break;\n  default:\n    break;\n}\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eでもね。「これって、何で？」という純真でおめめキラキラな問いには、答えられそうで根拠が足りない。1なんかは、無意味だからやめれ、とよく言うけど、1回のムダは理由次第で許される場合もある。例えば、あまり自明でない演算子の優先順位を強調するために、言語仕様上は無意味な「念のためカッコ」を付けるのは、可読性の上から許されるだろう。では、なぜコレがいけないのか。うまく答えられない。2なんかは、場合によっては本質だったりする。bFlagがconfigで設定された値で、条件を反転させる機能がある場合だ。でも、心の中でやめれと叫ぶ声がする。3と5はまあ、分かりにくいよね。これは説明の必要は無いだろう。多くの人とは合意できそうな気がする。何となれば、多数決でも良さそうだ。こう書ける場面に遭遇したことはあるけれど、まあ書かん方が良い。\u003c/p\u003e\n\n\u003cp\u003eでは、4。やめて欲しいけど、やっぱり「なぜ」をうまく主張できない。可読性の話は、多数決で圧勝できそうな時くらいしか主張できない。それなりにたくさんの実例が存在してしまうと、「要は慣れればOK」という主張に反駁できる何かが必要になってしまう。論理的な段階の数とか、依拠する数学的なモデルとか、そういうところに帰着できないと、なかなかうまく主張できた気がしないのだ。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"ループは事情が違うよ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%AB%E3%83%BC%E3%83%97%E3%81%AF%E4%BA%8B%E6%83%85%E3%81%8C%E9%81%95%E3%81%86%E3%82%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eループは事情が違うよ\u003c/h1\u003e\n\n\u003cp\u003eなお、上の例にループが一切無いけど、ループ条件にtrueを入れるのは、真偽値の比較をしているわけではなく、単に評価させているだけなので別に違和感を感じない。特に、while(true)なんかにはキモさは感じない。あくまで「感じない」というだけで、これも明確に説明できるわけじゃないんだけどね。\u003c/p\u003e\n\n\u003cp\u003e不思議なもんだね。\u003c/p\u003e\n\n\u003cp\u003eでも、感覚的ないやーんって、突き詰めると単なる感情であることが判る時もあるし、無意識ではあるけど真っ当な理由が存在する時もある。だから、考える価値はあると思うんだ。どっちなのか未だわからないので、もう少し考えたい。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"フォールスルーの問題はまた別なんじゃないかな\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%95%E3%82%A9%E3%83%BC%E3%83%AB%E3%82%B9%E3%83%AB%E3%83%BC%E3%81%AE%E5%95%8F%E9%A1%8C%E3%81%AF%E3%81%BE%E3%81%9F%E5%88%A5%E3%81%AA%E3%82%93%E3%81%98%E3%82%83%E3%81%AA%E3%81%84%E3%81%8B%E3%81%AA\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eフォールスルーの問題はまた別なんじゃないかな\u003c/h1\u003e\n\n\u003cp\u003eswitchが「ラベル」を選択するのか「ブロック」を選択するのかが言語によって無茶苦茶ぶれるんだよね。そして、直感的に「ブロック」を選択するように感じやすい。ツールによるフォールスルーの表示の仕方も、「ブロック」として認識している表れだ。やっぱり選んでいるのは「ラベル」だとはわかりにくいんだよ。そして、ブロックとして認識していると、各ブロックの順序は交換可能だと錯覚しかねない。まあ、それは避けられたとしても、フォールスルー先のロジックを修正した時、フォールスルーによって到達するパスに対する望ましくない影響を過小評価しがちだ。フォールスルーだと判っていてもね。\u003c/p\u003e\n",
    "body": "#うおー！\n「[switch(true) イディオム考察](http://qiita.com/t_uda/items/1969e09a970d71e4cfd6)」とゆー記事を読んだ。とりあえず、心の中で即答した上で、「うおー説明しにくい！」ってなったので書いておく。「switch(true)って何？」という向きは、リンク先をご覧あれ。\n\n#論理値の比較はやめておけ\n私が心の中で即答したのは、「論理値の比較はやめておけ」ということだ。論理値の比較は、そして特にリテラルとの比較はやめておけ、ということだ。つまり、下記みたいなもん全部だ。\n\n```\n// 1\nif(true === bJudge){}\n\n// 2\nif(bFlag === (c===d)){}\n\n// 3\nif((a===b)===(c===d)){}\n\n// 4\nswitch(true){\n  case a \u003c 0:\n    break;\n  case b \u003e c:\n    break;\n}\n\n// 5\nswitch(a \u003e b)\n  case c \u003e d:\n    break;\n  default:\n    break;\n}\n```\n\nでもね。「これって、何で？」という純真でおめめキラキラな問いには、答えられそうで根拠が足りない。1なんかは、無意味だからやめれ、とよく言うけど、1回のムダは理由次第で許される場合もある。例えば、あまり自明でない演算子の優先順位を強調するために、言語仕様上は無意味な「念のためカッコ」を付けるのは、可読性の上から許されるだろう。では、なぜコレがいけないのか。うまく答えられない。2なんかは、場合によっては本質だったりする。bFlagがconfigで設定された値で、条件を反転させる機能がある場合だ。でも、心の中でやめれと叫ぶ声がする。3と5はまあ、分かりにくいよね。これは説明の必要は無いだろう。多くの人とは合意できそうな気がする。何となれば、多数決でも良さそうだ。こう書ける場面に遭遇したことはあるけれど、まあ書かん方が良い。\n\nでは、4。やめて欲しいけど、やっぱり「なぜ」をうまく主張できない。可読性の話は、多数決で圧勝できそうな時くらいしか主張できない。それなりにたくさんの実例が存在してしまうと、「要は慣れればOK」という主張に反駁できる何かが必要になってしまう。論理的な段階の数とか、依拠する数学的なモデルとか、そういうところに帰着できないと、なかなかうまく主張できた気がしないのだ。\n\n#ループは事情が違うよ\nなお、上の例にループが一切無いけど、ループ条件にtrueを入れるのは、真偽値の比較をしているわけではなく、単に評価させているだけなので別に違和感を感じない。特に、while(true)なんかにはキモさは感じない。あくまで「感じない」というだけで、これも明確に説明できるわけじゃないんだけどね。\n\n不思議なもんだね。\n\nでも、感覚的ないやーんって、突き詰めると単なる感情であることが判る時もあるし、無意識ではあるけど真っ当な理由が存在する時もある。だから、考える価値はあると思うんだ。どっちなのか未だわからないので、もう少し考えたい。\n\n#フォールスルーの問題はまた別なんじゃないかな\nswitchが「ラベル」を選択するのか「ブロック」を選択するのかが言語によって無茶苦茶ぶれるんだよね。そして、直感的に「ブロック」を選択するように感じやすい。ツールによるフォールスルーの表示の仕方も、「ブロック」として認識している表れだ。やっぱり選んでいるのは「ラベル」だとはわかりにくいんだよ。そして、ブロックとして認識していると、各ブロックの順序は交換可能だと錯覚しかねない。まあ、それは避けられたとしても、フォールスルー先のロジックを修正した時、フォールスルーによって到達するパスに対する望ましくない影響を過小評価しがちだ。フォールスルーだと判っていてもね。\n",
    "coediting": false,
    "created_at": "2015-06-16T21:09:33+09:00",
    "id": "dc6058166756ea69ac69",
    "private": false,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "switch",
        "versions": []
      }
    ],
    "title": "switch(true) が嫌な理由、説明しにくい",
    "updated_at": "2015-06-16T21:46:33+09:00",
    "url": "http://qiita.com/mrpepper/items/dc6058166756ea69ac69",
    "user": {
      "description": null,
      "facebook_id": null,
      "followees_count": 2,
      "followers_count": 4,
      "github_login_name": "mrpepper023",
      "id": "mrpepper",
      "items_count": 41,
      "linkedin_id": null,
      "location": null,
      "name": "",
      "organization": null,
      "permanent_id": 79187,
      "profile_image_url": "https://avatars.githubusercontent.com/u/12499568?v=3",
      "twitter_screen_name": null,
      "website_url": null
    }
  },
  {
    "rendered_body": "\u003cp\u003eKeystone v3 APIは、Havanaから導入されたAPIのバージョンである。\u003ccode\u003edocs.openstack.org\u003c/code\u003eにある公式のインストールマニュアルでは未だにv2 APIを使うように記述されているがv3 APIを併用して使うことも可能である。使うと言っても、python-keystoneclientはv2 APIのみサポートしているので、使うためには新しく導入されたpython-openstackclientを利用する必要がある。ちなみに、Ubuntu14.04のリポジトリにあるpython-openstackclientは古すぎる、かつjunoリリースのリポジトリからは削除されているという状況のため、使うにはkiloリリースのリポジトリを導入するか、ソースから入れる必要がある。当然であるが、v3のエンドポイントをkeystoneに追加する必要もある。更に加えて言うと、パブリッククラウドやOpenStackのようなプライベートクラウドを構築するソフトウェアでは、マルチテナントという言葉がよく使われる。OpenStackもテナントという言葉を使っていたのだが、Havanaリリースから正式にテナントの事をプロジェクトと表記することになっている。が、周りでは未だにテナントと言う人が大半である。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"v3-apiの特徴\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#v3-api%E3%81%AE%E7%89%B9%E5%BE%B4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ev3 APIの特徴\u003c/h1\u003e\n\n\u003cp\u003ev3 APIを使うとv2までと何が違うのかについて説明しだすと日が暮れてしまうので割愛する。一言で言うと以下の2つの概念が導入されたのである。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eDomains\u003c/li\u003e\n\u003cli\u003eGroups\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e残念ながら、どちらもこの記事の趣旨とは外れるため説明はしない。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"テナントプロジェクトの管理者の導入\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%86%E3%83%8A%E3%83%B3%E3%83%88%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E7%AE%A1%E7%90%86%E8%80%85%E3%81%AE%E5%B0%8E%E5%85%A5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eテナント(プロジェクト)の管理者の導入\u003c/h1\u003e\n\n\u003cp\u003ev2 APIしか使わない場合、作成されたテナントに対してどのユーザを紐付けるのかについて管理できるのは、OpenStackそのものの管理者(いわゆるadmin roleの人)だけだった。v3 APIを使うことで、各テナントごとに管理者(ここではProject Adminと呼ぶ)を定義して、Project Adminが自分のテナントにどのユーザを紐付けるかを決定することが可能である。他にもいろいろ権限を譲渡することは可能であるが、本記事ではひとまずユーザヒモ付を行うところまでやってみようと思う。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"keystoneにv3-api用の設定を入れる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#keystone%E3%81%ABv3-api%E7%94%A8%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eKeystoneにv3 API用の設定を入れる\u003c/h2\u003e\n\n\u003cp\u003e使用するOpenStackのリリースはjunoである。kiloでもし仕様が変わっていたら申し訳ない。まずは、keystoneにv3 API用エンドポイントを追加する。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eまずserviceを作成する\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ekeystone --os-token \u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_SERVICE_TOKEN\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e --os-endpoint \u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_SERVICE_ENDPOINT\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e service-create --name keystonev3 --type identityv3 --description \u003cspan class=\"s2\"\u003e\"OpenStack Identity v3\"\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eエンドポイント追加\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ekeystone --os-token \u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_SERVICE_TOKEN\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e --os-endpoint \u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_SERVICE_ENDPOINT\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e endpoint-create --region\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eREGION\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e --service-id\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003ekeystone --os-token \u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_SERVICE_TOKEN\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e --os-endpoint \u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_SERVICE_ENDPOINT\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e service-list \u003cspan class=\"p\"\u003e|\u003c/span\u003e awk \u003cspan class=\"s1\"\u003e'/ identityv3 / {print $2}'\u003c/span\u003e\u003cspan class=\"k\"\u003e)\u003c/span\u003e --publicurl\u003cspan class=\"o\"\u003e=\u003c/span\u003ehttp://\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eKEYSTONE_ENDPOINT\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e:5000/v3 --internalurl\u003cspan class=\"o\"\u003e=\u003c/span\u003ehttp://\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eKEYSTONE_ENDPOINT\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e:5000/v3 --adminurl\u003cspan class=\"o\"\u003e=\u003c/span\u003ehttp://\u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eKEYSTONE_ENDPOINT\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e:35357/v3\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e次に、テナント管理者用のroleを作成する。ここではproject_adminという名称にする。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ekeystone --os-token \u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_SERVICE_TOKEN\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e --os-endpoint \u003cspan class=\"k\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_SERVICE_ENDPOINT\u003c/span\u003e\u003cspan class=\"k\"\u003e}\u003c/span\u003e role-create --name project_admin\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eなお、ここで使用している環境変数などは自分で事前にセットしといてくれ。公式マニュアル見れば分かるはず!\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"python-openstackclientを導入する\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#python-openstackclient%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003epython-openstackclientを導入する\u003c/h2\u003e\n\n\u003cp\u003e今回はソースから入れてみようと思う。なお、使用するOSはUbuntu14.04である。CentOSを使う場合もほぼ同じはずだが試してはいない。OpenStack Clientだけはkiloリリースを利用するため、\u003ccode\u003estable/kilo\u003c/code\u003eブランチをcheckoutする。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003esudo su -\napt-get install python-dev libffi-dev\n\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e /opt\ngit clone https://github.com/openstack/python-openstackclient.git\n\u003cspan class=\"nb\"\u003ecd \u003c/span\u003epython-openstackclient\ngit checkout stable/kilo\npython ./tools/install_venv.py\n./tools/with_venv.sh python setup.py install\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e.bashrcに以下を追加しておくと便利である。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"alias openstack='/opt/python-openstackclient/tools/with_venv.sh openstack'\"\u003c/span\u003e \u0026gt;\u0026gt; ~/.bashrc\n\u003cspan class=\"nb\"\u003esource\u003c/span\u003e ~/.bashrc\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"keystone-policyjsonの編集\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#keystone-policyjson%E3%81%AE%E7%B7%A8%E9%9B%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eKeystone policy.jsonの編集\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ehttp://ubuntu-cloud.archive.canonical.com/ubuntu\u003c/code\u003eにあるjunoリリースをUbuntu14.04に導入すると、デフォルトでv2 APIに適したpolicy.jsonがインストールされる。そこで、このjsonファイルを編集してテナント管理者としての権限をproject_admin roleに与える。ファイルを全部貼っつけると、かなりの量になるので、ここではオリジナル(\u003ccode\u003epolicy.json.orig\u003c/code\u003e)とのdiffの結果のみ記す。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ediff policy.json policy.json.orig\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e28c28\n\u0026lt;     \"identity:get_domain\": \"rule:admin_required or role:project_admin\",\n---\n\u0026gt;     \"identity:get_domain\": \"rule:admin_required\",\n34,36c34,36\n\u0026lt;     \"identity:get_project\": \"rule:admin_required or role:project_admin\",\n\u0026lt;     \"identity:list_projects\": \"rule:admin_required or role:project_admin\",\n\u0026lt;     \"identity:list_user_projects\": \"rule:admin_or_owner or role:project_admin\",\n---\n\u0026gt;     \"identity:get_project\": \"rule:admin_required\",\n\u0026gt;     \"identity:list_projects\": \"rule:admin_required\",\n\u0026gt;     \"identity:list_user_projects\": \"rule:admin_or_owner\",\n38c38\n\u0026lt;     \"identity:update_project\": \"rule:admin_required or (project_id:%(target.project.id)s and role:project_admin)\",\n---\n\u0026gt;     \"identity:update_project\": \"rule:admin_required\",\n41,42c41,42\n\u0026lt;     \"identity:get_user\": \"rule:admin_required or role:project_admin\",\n\u0026lt;     \"identity:list_users\": \"rule:admin_required or role:project_admin\",\n---\n\u0026gt;     \"identity:get_user\": \"rule:admin_required\",\n\u0026gt;     \"identity:list_users\": \"rule:admin_required\",\n70,71c70,71\n\u0026lt;     \"identity:get_role\": \"rule:admin_required or role:project_admin\",\n\u0026lt;     \"identity:list_roles\": \"rule:admin_required or role:project_admin\",\n---\n\u0026gt;     \"identity:get_role\": \"rule:admin_required\",\n\u0026gt;     \"identity:list_roles\": \"rule:admin_required\",\n77,79c77,79\n\u0026lt;     \"identity:list_grants\": \"rule:admin_required or role:project_admin\",\n\u0026lt;     \"identity:create_grant\": \"rule:admin_required or (project_id:%(target.project.id)s and role:project_admin)\",\n\u0026lt;     \"identity:revoke_grant\": \"rule:admin_required or (project_id:%(target.project.id)s and role:project_admin)\",\n---\n\u0026gt;     \"identity:list_grants\": \"rule:admin_required\",\n\u0026gt;     \"identity:create_grant\": \"rule:admin_required\",\n\u0026gt;     \"identity:revoke_grant\": \"rule:admin_required\",\n81c81\n\u0026lt;     \"identity:list_role_assignments\": \"rule:admin_required or role:project_admin\",\n---\n\u0026gt;     \"identity:list_role_assignments\": \"rule:admin_required\",\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこのjsonファイルで肝となるのは、この1行である。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\"identity:update_project\": \"rule:admin_required or (project_id:%(target.project.id)s and role:project_admin)\",\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ejsonファイルを編集したらKeystoneを再起動する。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eservice keystone restart\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"実際にテナント管理者でユーザ紐付けをやってみる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AB%E3%83%86%E3%83%8A%E3%83%B3%E3%83%88%E7%AE%A1%E7%90%86%E8%80%85%E3%81%A7%E3%83%A6%E3%83%BC%E3%82%B6%E7%B4%90%E4%BB%98%E3%81%91%E3%82%92%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実際にテナント管理者でユーザ紐付けをやってみる\u003c/h2\u003e\n\n\u003cp\u003e当然であるが、project_admin roleを持つユーザはadmin roleを持つユーザで付与してあげる必要がある。また、前提として\u003ccode\u003edemo\u003c/code\u003eというテナント(プロジェクト)を事前に作成しておく。ここから先はproject_adminのroleを持つユーザの作業を想定する。そして、紐付けをする対象ユーザは\u003ccode\u003edemo_user\u003c/code\u003eという名称にする。\u003c/p\u003e\n\n\u003cp\u003ev3 API用の環境変数をセットする。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_REGION_NAME\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;Region Name\u0026gt;\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_TENANT_NAME\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edemo\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_USERNAME\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;User Name\u0026gt;\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_PASSWORD\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026lt;User Password\u0026gt;\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_AUTH_URL\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ehttp://\u0026lt;Keystone Endpoint\u0026gt;:5000/v3\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_IDENTITY_API_VERSION\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_PROJECT_DOMAIN_ID\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edefault\n\u003cspan class=\"nb\"\u003eexport \u003c/span\u003e\u003cspan class=\"nv\"\u003eOS_USER_DOMAIN_ID\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003edefault\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e存在するroleの種別を確認する。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eopenstack role list\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e+----------------------------------+---------------+\n| ID                               | Name          |\n+----------------------------------+---------------+\n| 69a12bb20a6b4d40a6aa3976341e94b8 | _member_      |\n| e119fa409edb46738b3832430122a6fe | project_admin |\n| ebf755abf62641d386335070d561ac5b | admin         |\n+----------------------------------+---------------+\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e次にプロジェクトの確認をする。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eopenstack project list --long\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e+----------------------------------+---------+-----------+----------------+---------+\n| ID                               | Name    | Domain ID | Description    | Enabled |\n+----------------------------------+---------+-----------+----------------+---------+\n| 5e312dd75687441ca66afd1928994a28 | admin   | default   | Admin Tenant   | True    |\n| cadcece515464528baedcb84efab7ba7 | demo    | default   |                | True    |\n| d91fb8307105471da67128f5bfcff118 | service | default   | Service Tenant | True    |\n+----------------------------------+---------+-----------+----------------+---------+\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003edemo\u003c/code\u003eプロジェクトに対して\u003ccode\u003edemo_user\u003c/code\u003eを\u003ccode\u003e_member_\u003c/code\u003eというroleで紐付ける。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eopenstack role add --project\u003cspan class=\"o\"\u003e=\u003c/span\u003edemo --user\u003cspan class=\"o\"\u003e=\u003c/span\u003edemo_user _member_\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"以下確認作業\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%A5%E4%B8%8B%E7%A2%BA%E8%AA%8D%E4%BD%9C%E6%A5%AD\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e以下、確認作業\u003c/h3\u003e\n\n\u003cp\u003euserのUUIDを確認する。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eopenstack user list --domain\u003cspan class=\"o\"\u003e=\u003c/span\u003edefault \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep demo_user\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e| 84790aef5e6a702c0ec31b0f9d4a6eee03e79b366c163be412cd99ac1ac6712f | demo_user     |\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eroleのアサイン情報をUUIDでgrepして確認する。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"bash\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eopenstack role assignment list \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep 84790aef5e6a702c0ec31b0f9d4a6eee03e79b366c163be412cd99ac1ac6712f\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e| 69a12bb20a6b4d40a6aa3976341e94b8 | 84790aef5e6a702c0ec31b0f9d4a6eee03e79b366c163be412cd99ac1ac6712f |       | cadcece515464528baedcb84efab7ba7 |        |\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003egrepしてるので見づらいが、Role、User、Group、Project、Domainの順に出力されている。よって、\u003ccode\u003edemo_user\u003c/code\u003e (\u003ccode\u003e84790aef5e6a702c0ec31b0f9d4a6eee03e79b366c163be412cd99ac1ac6712f\u003c/code\u003e)が、\u003ccode\u003edemo\u003c/code\u003e(\u003ccode\u003ecadcece515464528baedcb84efab7ba7\u003c/code\u003e)プロジェクトに対して、\u003ccode\u003e_member_\u003c/code\u003e(\u003ccode\u003e69a12bb20a6b4d40a6aa3976341e94b8\u003c/code\u003e)というroleで紐付けられていることが確認できた。\u003c/p\u003e\n\n\u003cp\u003e補足であるが、現行のkiloリリース時点では同様の作業をGUIから行うためのHorizonの実装はまだなされていない。ゆえに、GUIから同様の作業をしたい場合には、その次のlibertyリリースまで待つか、独自でGUIを実装する必要がある。\u003c/p\u003e\n",
    "body": "Keystone v3 APIは、Havanaから導入されたAPIのバージョンである。`docs.openstack.org`にある公式のインストールマニュアルでは未だにv2 APIを使うように記述されているがv3 APIを併用して使うことも可能である。使うと言っても、python-keystoneclientはv2 APIのみサポートしているので、使うためには新しく導入されたpython-openstackclientを利用する必要がある。ちなみに、Ubuntu14.04のリポジトリにあるpython-openstackclientは古すぎる、かつjunoリリースのリポジトリからは削除されているという状況のため、使うにはkiloリリースのリポジトリを導入するか、ソースから入れる必要がある。当然であるが、v3のエンドポイントをkeystoneに追加する必要もある。更に加えて言うと、パブリッククラウドやOpenStackのようなプライベートクラウドを構築するソフトウェアでは、マルチテナントという言葉がよく使われる。OpenStackもテナントという言葉を使っていたのだが、Havanaリリースから正式にテナントの事をプロジェクトと表記することになっている。が、周りでは未だにテナントと言う人が大半である。\n\n# v3 APIの特徴\nv3 APIを使うとv2までと何が違うのかについて説明しだすと日が暮れてしまうので割愛する。一言で言うと以下の2つの概念が導入されたのである。\n\n* Domains\n* Groups\n\n残念ながら、どちらもこの記事の趣旨とは外れるため説明はしない。\n\n# テナント(プロジェクト)の管理者の導入\nv2 APIしか使わない場合、作成されたテナントに対してどのユーザを紐付けるのかについて管理できるのは、OpenStackそのものの管理者(いわゆるadmin roleの人)だけだった。v3 APIを使うことで、各テナントごとに管理者(ここではProject Adminと呼ぶ)を定義して、Project Adminが自分のテナントにどのユーザを紐付けるかを決定することが可能である。他にもいろいろ権限を譲渡することは可能であるが、本記事ではひとまずユーザヒモ付を行うところまでやってみようと思う。\n\n## Keystoneにv3 API用の設定を入れる\n使用するOpenStackのリリースはjunoである。kiloでもし仕様が変わっていたら申し訳ない。まずは、keystoneにv3 API用エンドポイントを追加する。\n\n```bash:まずserviceを作成する\nkeystone --os-token ${OS_SERVICE_TOKEN} --os-endpoint ${OS_SERVICE_ENDPOINT} service-create --name keystonev3 --type identityv3 --description \"OpenStack Identity v3\"\n\n```\n\n```bash:エンドポイント追加\nkeystone --os-token ${OS_SERVICE_TOKEN} --os-endpoint ${OS_SERVICE_ENDPOINT} endpoint-create --region=${REGION} --service-id=$(keystone --os-token ${OS_SERVICE_TOKEN} --os-endpoint ${OS_SERVICE_ENDPOINT} service-list | awk '/ identityv3 / {print $2}') --publicurl=http://${KEYSTONE_ENDPOINT}:5000/v3 --internalurl=http://${KEYSTONE_ENDPOINT}:5000/v3 --adminurl=http://${KEYSTONE_ENDPOINT}:35357/v3\n```\n\n次に、テナント管理者用のroleを作成する。ここではproject_adminという名称にする。\n\n```bash\nkeystone --os-token ${OS_SERVICE_TOKEN} --os-endpoint ${OS_SERVICE_ENDPOINT} role-create --name project_admin\n```\n\nなお、ここで使用している環境変数などは自分で事前にセットしといてくれ。公式マニュアル見れば分かるはず!\n\n## python-openstackclientを導入する\n\n今回はソースから入れてみようと思う。なお、使用するOSはUbuntu14.04である。CentOSを使う場合もほぼ同じはずだが試してはいない。OpenStack Clientだけはkiloリリースを利用するため、`stable/kilo`ブランチをcheckoutする。\n\n```bash\nsudo su -\napt-get install python-dev libffi-dev\ncd /opt\ngit clone https://github.com/openstack/python-openstackclient.git\ncd python-openstackclient\ngit checkout stable/kilo\npython ./tools/install_venv.py\n./tools/with_venv.sh python setup.py install\n```\n\n.bashrcに以下を追加しておくと便利である。\n\n```bash\necho \"alias openstack='/opt/python-openstackclient/tools/with_venv.sh openstack'\" \u003e\u003e ~/.bashrc\nsource ~/.bashrc\n```\n\n## Keystone policy.jsonの編集\n`http://ubuntu-cloud.archive.canonical.com/ubuntu`にあるjunoリリースをUbuntu14.04に導入すると、デフォルトでv2 APIに適したpolicy.jsonがインストールされる。そこで、このjsonファイルを編集してテナント管理者としての権限をproject_admin roleに与える。ファイルを全部貼っつけると、かなりの量になるので、ここではオリジナル(`policy.json.orig`)とのdiffの結果のみ記す。\n\n```bash\ndiff policy.json policy.json.orig\n```\n\n```text\n28c28\n\u003c     \"identity:get_domain\": \"rule:admin_required or role:project_admin\",\n---\n\u003e     \"identity:get_domain\": \"rule:admin_required\",\n34,36c34,36\n\u003c     \"identity:get_project\": \"rule:admin_required or role:project_admin\",\n\u003c     \"identity:list_projects\": \"rule:admin_required or role:project_admin\",\n\u003c     \"identity:list_user_projects\": \"rule:admin_or_owner or role:project_admin\",\n---\n\u003e     \"identity:get_project\": \"rule:admin_required\",\n\u003e     \"identity:list_projects\": \"rule:admin_required\",\n\u003e     \"identity:list_user_projects\": \"rule:admin_or_owner\",\n38c38\n\u003c     \"identity:update_project\": \"rule:admin_required or (project_id:%(target.project.id)s and role:project_admin)\",\n---\n\u003e     \"identity:update_project\": \"rule:admin_required\",\n41,42c41,42\n\u003c     \"identity:get_user\": \"rule:admin_required or role:project_admin\",\n\u003c     \"identity:list_users\": \"rule:admin_required or role:project_admin\",\n---\n\u003e     \"identity:get_user\": \"rule:admin_required\",\n\u003e     \"identity:list_users\": \"rule:admin_required\",\n70,71c70,71\n\u003c     \"identity:get_role\": \"rule:admin_required or role:project_admin\",\n\u003c     \"identity:list_roles\": \"rule:admin_required or role:project_admin\",\n---\n\u003e     \"identity:get_role\": \"rule:admin_required\",\n\u003e     \"identity:list_roles\": \"rule:admin_required\",\n77,79c77,79\n\u003c     \"identity:list_grants\": \"rule:admin_required or role:project_admin\",\n\u003c     \"identity:create_grant\": \"rule:admin_required or (project_id:%(target.project.id)s and role:project_admin)\",\n\u003c     \"identity:revoke_grant\": \"rule:admin_required or (project_id:%(target.project.id)s and role:project_admin)\",\n---\n\u003e     \"identity:list_grants\": \"rule:admin_required\",\n\u003e     \"identity:create_grant\": \"rule:admin_required\",\n\u003e     \"identity:revoke_grant\": \"rule:admin_required\",\n81c81\n\u003c     \"identity:list_role_assignments\": \"rule:admin_required or role:project_admin\",\n---\n\u003e     \"identity:list_role_assignments\": \"rule:admin_required\",\n```\n\nこのjsonファイルで肝となるのは、この1行である。\n\n```text\n\"identity:update_project\": \"rule:admin_required or (project_id:%(target.project.id)s and role:project_admin)\",\n```\n\njsonファイルを編集したらKeystoneを再起動する。\n\n```bash\nservice keystone restart\n```\n\n## 実際にテナント管理者でユーザ紐付けをやってみる\n\n当然であるが、project_admin roleを持つユーザはadmin roleを持つユーザで付与してあげる必要がある。また、前提として`demo`というテナント(プロジェクト)を事前に作成しておく。ここから先はproject_adminのroleを持つユーザの作業を想定する。そして、紐付けをする対象ユーザは`demo_user`という名称にする。\n\n\nv3 API用の環境変数をセットする。\n\n```bash\nexport OS_REGION_NAME=\u003cRegion Name\u003e\nexport OS_TENANT_NAME=demo\nexport OS_USERNAME=\u003cUser Name\u003e\nexport OS_PASSWORD=\u003cUser Password\u003e\nexport OS_AUTH_URL=http://\u003cKeystone Endpoint\u003e:5000/v3\nexport OS_IDENTITY_API_VERSION=3\nexport OS_PROJECT_DOMAIN_ID=default\nexport OS_USER_DOMAIN_ID=default\n```\n\n存在するroleの種別を確認する。\n\n```bash\nopenstack role list\n```\n\n```text\n+----------------------------------+---------------+\n| ID                               | Name          |\n+----------------------------------+---------------+\n| 69a12bb20a6b4d40a6aa3976341e94b8 | _member_      |\n| e119fa409edb46738b3832430122a6fe | project_admin |\n| ebf755abf62641d386335070d561ac5b | admin         |\n+----------------------------------+---------------+\n```\n\n次にプロジェクトの確認をする。\n\n```bash\nopenstack project list --long\n```\n\n```text\n+----------------------------------+---------+-----------+----------------+---------+\n| ID                               | Name    | Domain ID | Description    | Enabled |\n+----------------------------------+---------+-----------+----------------+---------+\n| 5e312dd75687441ca66afd1928994a28 | admin   | default   | Admin Tenant   | True    |\n| cadcece515464528baedcb84efab7ba7 | demo    | default   |                | True    |\n| d91fb8307105471da67128f5bfcff118 | service | default   | Service Tenant | True    |\n+----------------------------------+---------+-----------+----------------+---------+\n```\n\n`demo`プロジェクトに対して`demo_user`を`_member_`というroleで紐付ける。\n\n```bash\nopenstack role add --project=demo --user=demo_user _member_\n```\n\n### 以下、確認作業\n\nuserのUUIDを確認する。\n\n```bash\nopenstack user list --domain=default | grep demo_user\n```\n\n```text\n| 84790aef5e6a702c0ec31b0f9d4a6eee03e79b366c163be412cd99ac1ac6712f | demo_user     |\n```\n\nroleのアサイン情報をUUIDでgrepして確認する。\n\n```bash\nopenstack role assignment list | grep 84790aef5e6a702c0ec31b0f9d4a6eee03e79b366c163be412cd99ac1ac6712f\n```\n\n```text\n| 69a12bb20a6b4d40a6aa3976341e94b8 | 84790aef5e6a702c0ec31b0f9d4a6eee03e79b366c163be412cd99ac1ac6712f |       | cadcece515464528baedcb84efab7ba7 |        |\n```\n\ngrepしてるので見づらいが、Role、User、Group、Project、Domainの順に出力されている。よって、`demo_user` (`84790aef5e6a702c0ec31b0f9d4a6eee03e79b366c163be412cd99ac1ac6712f`)が、`demo`(`cadcece515464528baedcb84efab7ba7`)プロジェクトに対して、`_member_`(`69a12bb20a6b4d40a6aa3976341e94b8`)というroleで紐付けられていることが確認できた。\n\n補足であるが、現行のkiloリリース時点では同様の作業をGUIから行うためのHorizonの実装はまだなされていない。ゆえに、GUIから同様の作業をしたい場合には、その次のlibertyリリースまで待つか、独自でGUIを実装する必要がある。\n",
    "coediting": false,
    "created_at": "2015-06-16T21:08:58+09:00",
    "id": "a6dc61b52f2386889789",
    "private": false,
    "tags": [
      {
        "name": "Ubuntu",
        "versions": [
          "14.04"
        ]
      },
      {
        "name": "openstack",
        "versions": [
          "juno"
        ]
      }
    ],
    "title": "Keystone v3 APIを使ってOpenStackにテナント(プロジェクト)の管理者の概念を導入する",
    "updated_at": "2015-06-16T21:10:13+09:00",
    "url": "http://qiita.com/kentarosasaki/items/a6dc61b52f2386889789",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 0,
      "followers_count": 0,
      "github_login_name": "kentarosasaki",
      "id": "kentarosasaki",
      "items_count": 5,
      "linkedin_id": "",
      "location": "",
      "name": "Kentaro Sasaki",
      "organization": "",
      "permanent_id": 6595,
      "profile_image_url": "https://secure.gravatar.com/avatar/bf303c6f322473a9fd4132966d337f2c",
      "twitter_screen_name": "mathomd",
      "website_url": ""
    }
  },
  {
    "rendered_body": "\u003cp\u003ezabbixのマクロでパスワード画面に表示したくない場合にアスタリスク表示する。\u003cbr\u003e\nとりあえずのやっつけjavascript.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eマクロ作成時はマスクしない。\u003c/li\u003e\n\u003cli\u003eすでに作成されている場合はアスタリスク表示になる。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"0-環境\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#0-%E7%92%B0%E5%A2%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e0 環境\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003ecentos 6.6 64bit\u003c/li\u003e\n\u003cli\u003ezabbix 2.2\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"1-usrsharezabbixjsbrowserjsの最後に以下を追加\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#1-usrsharezabbixjsbrowserjs%E3%81%AE%E6%9C%80%E5%BE%8C%E3%81%AB%E4%BB%A5%E4%B8%8B%E3%82%92%E8%BF%BD%E5%8A%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e1. /usr/share/zabbix/js/browser.jsの最後に以下を追加\u003c/h1\u003e\n\n\u003cp\u003epasswordの箇所にマクロ名を指定\u003cbr\u003e\n//iのiオプションは大文字、小文字を無視\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"js\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003ewindow\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eonload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n\u003cspan class=\"nx\"\u003eset_mask\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003efunction\u003c/span\u003e \u003cspan class=\"nx\"\u003eset_mask\u003c/span\u003e \u003cspan class=\"p\"\u003e(){\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ebase\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edocument\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003egetElementsByClassName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"form_row\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nx\"\u003econsole\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elog\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'set_mask'\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ebase\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nx\"\u003ebase\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/password/i\u003c/span\u003e\u003cspan class=\"p\"\u003e)){\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e//console.log(base[i].children[2]);\u003c/span\u003e\n        \u003cspan class=\"nx\"\u003ebase\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nx\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e].\u003c/span\u003e\u003cspan class=\"nx\"\u003esetAttribute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"type\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"password\"\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n",
    "body": "zabbixのマクロでパスワード画面に表示したくない場合にアスタリスク表示する。\nとりあえずのやっつけjavascript.\n\n- マクロ作成時はマスクしない。\n- すでに作成されている場合はアスタリスク表示になる。\n\n# 0 環境\n- centos 6.6 64bit\n- zabbix 2.2\n\n\n# 1. /usr/share/zabbix/js/browser.jsの最後に以下を追加\n\npasswordの箇所にマクロ名を指定\n//iのiオプションは大文字、小文字を無視\n\n```js\n\n\nwindow.onload = function(){\nset_mask();\n};\n\nfunction set_mask (){\n\nvar base = document.getElementsByClassName(\"form_row\");\nconsole.log('set_mask');\nfor(var i=0; i\u003c base.length; i++){\n    if ( base[i].children[0].children[0].value.match(/password/i)){\n        //console.log(base[i].children[2]);\n        base[i].children[2].children[0].setAttribute(\"type\", \"password\");\n    }\n}\n};\n\n\n```\n",
    "coediting": false,
    "created_at": "2015-06-16T21:06:05+09:00",
    "id": "248556d2e33de7db7ec9",
    "private": false,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "zabbix",
        "versions": []
      }
    ],
    "title": "zabbixで指定したマクロの値をマスクする",
    "updated_at": "2015-06-16T21:06:05+09:00",
    "url": "http://qiita.com/nakayama_yasuhiro/items/248556d2e33de7db7ec9",
    "user": {
      "description": null,
      "facebook_id": null,
      "followees_count": 7,
      "followers_count": 3,
      "github_login_name": null,
      "id": "nakayama_yasuhiro",
      "items_count": 19,
      "linkedin_id": null,
      "location": null,
      "name": "",
      "organization": null,
      "permanent_id": 55033,
      "profile_image_url": "https://pbs.twimg.com/profile_images/430343023134662656/puRYMVjT_normal.jpeg",
      "twitter_screen_name": "yasuXS",
      "website_url": null
    }
  },
  {
    "rendered_body": "\u003cp\u003e昔リリースしたアプリが、どのバージョンのXcodeでビルドされたものなのか調べる必要があったので、その方法をまとめておきます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h1\u003e\n\n\u003cp\u003eipaファイルを解凍すると出てくるInfo.plistの\u003ccode\u003eDTXcode\u003c/code\u003eを見ればOKでした。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"手順\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%89%8B%E9%A0%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e手順\u003c/h1\u003e\n\n\u003col\u003e\n\u003cli\u003eiTunesでダウンロードするなりして、調べたいアプリのipaファイルを手に入れる\u003c/li\u003e\n\u003cli\u003e念のためコピーしてから、拡張子を.ipaから.zipに変更する\u003c/li\u003e\n\u003cli\u003eダブルクリックして解凍する\u003c/li\u003e\n\u003cli\u003ePayloadフォルダの中にあるアプリを右クリックして「パッケージの内容を表示」する\u003c/li\u003e\n\u003cli\u003e中に入っているInfo.plistをダブルクリックで開く（要Xcode）\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eDTXcode\u003c/code\u003eの値を見る。\u003ccode\u003e0632\u003c/code\u003eだったらXcode 6.3.2でビルドされている\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"備考\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%82%99%E8%80%83\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e備考\u003c/h1\u003e\n\n\u003cp\u003eアプリをiTunesでダウンロードした場合、iTunesの「マイ App」の中から該当アプリを右クリックして「Finder で表示」でipaファイルを探せます。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"他の便利そうなキーと値の例\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%96%E3%81%AE%E4%BE%BF%E5%88%A9%E3%81%9D%E3%81%86%E3%81%AA%E3%82%AD%E3%83%BC%E3%81%A8%E5%80%A4%E3%81%AE%E4%BE%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e他の便利そうなキーと値の例\u003c/h1\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eキー\u003c/th\u003e\n\u003cth\u003e値の例\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eBuildMachineOSBuild\u003c/td\u003e\n\u003ctd\u003e14D136\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDTCompiler\u003c/td\u003e\n\u003ctd\u003ecom.apple.compilers.llvm.clang.1_0\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDTPlatformBuild\u003c/td\u003e\n\u003ctd\u003e12F69\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDTPlatformVersion\u003c/td\u003e\n\u003ctd\u003e8.3\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDTSDKBuild\u003c/td\u003e\n\u003ctd\u003e12F69\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDTSDKName\u003c/td\u003e\n\u003ctd\u003eiphoneos8.3\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDTXcode\u003c/td\u003e\n\u003ctd\u003e0632\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDTXcodeBuild\u003c/td\u003e\n\u003ctd\u003e6D2105\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n",
    "body": "昔リリースしたアプリが、どのバージョンのXcodeでビルドされたものなのか調べる必要があったので、その方法をまとめておきます。\n\n# 結論\n\nipaファイルを解凍すると出てくるInfo.plistの`DTXcode`を見ればOKでした。\n\n# 手順\n1. iTunesでダウンロードするなりして、調べたいアプリのipaファイルを手に入れる\n2. 念のためコピーしてから、拡張子を.ipaから.zipに変更する\n3. ダブルクリックして解凍する\n4. Payloadフォルダの中にあるアプリを右クリックして「パッケージの内容を表示」する\n5. 中に入っているInfo.plistをダブルクリックで開く（要Xcode）\n6. `DTXcode`の値を見る。`0632`だったらXcode 6.3.2でビルドされている\n\n# 備考\n\nアプリをiTunesでダウンロードした場合、iTunesの「マイ App」の中から該当アプリを右クリックして「Finder で表示」でipaファイルを探せます。\n\n# 他の便利そうなキーと値の例\nキー|値の例\n---|---\nBuildMachineOSBuild|14D136\nDTCompiler|com.apple.compilers.llvm.clang.1_0\nDTPlatformBuild|12F69\nDTPlatformVersion|8.3\nDTSDKBuild|12F69\nDTSDKName|iphoneos8.3\nDTXcode|0632\nDTXcodeBuild|6D2105\n",
    "coediting": false,
    "created_at": "2015-06-16T20:48:13+09:00",
    "id": "8b7c9dc4f7ab164e738d",
    "private": false,
    "tags": [
      {
        "name": "Xcode",
        "versions": []
      },
      {
        "name": "iOS",
        "versions": []
      }
    ],
    "title": "iOSアプリのビルドに使ったXcodeのバージョンを調べる方法",
    "updated_at": "2015-06-16T20:56:52+09:00",
    "url": "http://qiita.com/bricklife/items/8b7c9dc4f7ab164e738d",
    "user": {
      "description": "株式会社メルカリでiPhoneアプリを作ってます http://mercari.jp 趣味で「入門LEGO MINDSTORMS NXT」などレゴ マインドストームの本を書いてます http://www.amazon.co.jp/gp/product/B00D6AH0AO",
      "facebook_id": "",
      "followees_count": 6,
      "followers_count": 4,
      "github_login_name": "bricklife",
      "id": "bricklife",
      "items_count": 2,
      "linkedin_id": "",
      "location": "",
      "name": "Shinichiro Oba",
      "organization": "Mercari, Inc.",
      "permanent_id": 31516,
      "profile_image_url": "https://avatars.githubusercontent.com/u/266357?v=2",
      "twitter_screen_name": null,
      "website_url": "http://bricklife.com"
    }
  },
  {
    "rendered_body": "\n\u003ch1\u003e\n\u003cspan id=\"やりたいこと\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%84%E3%82%8A%E3%81%9F%E3%81%84%E3%81%93%E3%81%A8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eやりたいこと\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eAndroidのUIテストをやりたい。\n\n\u003cul\u003e\n\u003cli\u003e複数バージョンまとめてテストしたい。\u003c/li\u003e\n\u003cli\u003eCI環境で動かせるようにヘッドレスなエミュレータで実行したい。\u003c/li\u003e\n\u003cli\u003eシェルスクリプトでまとめてかけたら良いな。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eいや、まてよ・・・・\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eテストを流し込むのは起動待ちした後にしないといけないけどどうやるんだ？\n\n\u003cul\u003e\n\u003cli\u003eadb wait-for-deviceってたしかうまくいかないよな\u003c/li\u003e\n\u003cli\u003eそもそも、複数台立ち上げたときにエミュレータの起動待ちってどうやんの？？\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"スクリプト本体\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E6%9C%AC%E4%BD%93\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eスクリプト本体\u003c/h1\u003e\n\n\u003cp\u003eandroid sdkは事前に導入しておいてください。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"shell\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003estart-multi-emulator.sh\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e#!/bin/sh\n\n# android-19とandroid-22のエミュレータを作成\necho n | android create avd --force --name emulator-android-21 --target android-21 -c 50M -s WXGA800\necho n | android create avd --force --name emulator-android-19 --target android-19 -c 50M -s WXGA800\n\n# エミュレータを実行\nemulator -avd circleci-android-21 -no-skin -no-audio -no-window \u0026amp;\nemulator -avd circleci-android-19 -no-skin -no-audio -no-window \u0026amp;\n\n# 起動監視スクリプトを実行\n./wait-for-boot.sh\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"shell\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003ewait-for-boot.sh\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e#!/bin/sh\n\nspinstr='|/-\\'\nspin_index=0\n\nspin_until () {\n    while ! $@\n    do\n        spin_index=$(expr $(expr $spin_index + 1) % 4)\n        printf \"\\r${spinstr:spin_index:1} \"\n        sleep 0.5\n    done\n    printf \"\\r\"\n}\n\nadb_shell_getprop () {\n    adb -s $1 shell getprop $2 | tr -d [:space:] # delete the whitespace\n}\n\ndevice_actually_ready () {\n    [ \"$(adb_shell_getprop $1 init.svc.bootanim)\" = \"stopped\" ]\n}\n\n# エミュレータ一覧取得\nDEVICES=$(adb devices | sed \"1d;s/device//\")\n\n# エミュレータ毎に起動監視\nfor device in $DEVICES\ndo\n    spin_until adb -s $device shell true 2\u0026gt; /dev/null\n    # 起動確認するまでまつ\n    spin_until device_actually_ready $device\n    echo \"$device is started\"\n    sleep 5\n    # 起動後にロック解除\n    adb -s $device shell input keyevent 82\ndone\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"実行方法\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A1%8C%E6%96%B9%E6%B3%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実行方法\u003c/h1\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e$ ./start-multi-emulator.sh\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"余談\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%99%E8%AB%87\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e余談\u003c/h1\u003e\n\n\u003cul\u003e\n\u003cli\u003eCircleCIのVM内にcircle-androidってシェルスクリプトがあってそれが１台分のエミュレータ起動待ち処理を実装してたのでそれを流用しました\u003c/li\u003e\n\u003cli\u003e複数台対応しないのかと問い合わせたところ自分でシェルスクリプト作れよ！って言われたので作りました。\u003c/li\u003e\n\u003c/ul\u003e\n",
    "body": "\n# やりたいこと\n\n* AndroidのUIテストをやりたい。\n    * 複数バージョンまとめてテストしたい。\n    * CI環境で動かせるようにヘッドレスなエミュレータで実行したい。\n    * シェルスクリプトでまとめてかけたら良いな。\n\nいや、まてよ・・・・\n\n* テストを流し込むのは起動待ちした後にしないといけないけどどうやるんだ？\n    * adb wait-for-deviceってたしかうまくいかないよな\n    * そもそも、複数台立ち上げたときにエミュレータの起動待ちってどうやんの？？\n\n\n# スクリプト本体\n\nandroid sdkは事前に導入しておいてください。\n\n```start-multi-emulator.sh\n\n#!/bin/sh\n\n# android-19とandroid-22のエミュレータを作成\necho n | android create avd --force --name emulator-android-21 --target android-21 -c 50M -s WXGA800\necho n | android create avd --force --name emulator-android-19 --target android-19 -c 50M -s WXGA800\n\n# エミュレータを実行\nemulator -avd circleci-android-21 -no-skin -no-audio -no-window \u0026\nemulator -avd circleci-android-19 -no-skin -no-audio -no-window \u0026\n\n# 起動監視スクリプトを実行\n./wait-for-boot.sh\n```\n\n```wait-for-boot.sh\n#!/bin/sh\n \nspinstr='|/-\\'\nspin_index=0\n \nspin_until () {\n    while ! $@\n    do\n        spin_index=$(expr $(expr $spin_index + 1) % 4)\n        printf \"\\r${spinstr:spin_index:1} \"\n        sleep 0.5\n    done\n    printf \"\\r\"\n}\n \nadb_shell_getprop () {\n    adb -s $1 shell getprop $2 | tr -d [:space:] # delete the whitespace\n}\n \ndevice_actually_ready () {\n    [ \"$(adb_shell_getprop $1 init.svc.bootanim)\" = \"stopped\" ]\n}\n \n# エミュレータ一覧取得\nDEVICES=$(adb devices | sed \"1d;s/device//\")\n\n# エミュレータ毎に起動監視\nfor device in $DEVICES\ndo\n    spin_until adb -s $device shell true 2\u003e /dev/null\n    # 起動確認するまでまつ\n    spin_until device_actually_ready $device\n    echo \"$device is started\"\n    sleep 5\n    # 起動後にロック解除\n    adb -s $device shell input keyevent 82\ndone\n```\n\n# 実行方法\n\n```\n$ ./start-multi-emulator.sh\n```\n\n\n# 余談\n\n* CircleCIのVM内にcircle-androidってシェルスクリプトがあってそれが１台分のエミュレータ起動待ち処理を実装してたのでそれを流用しました\n* 複数台対応しないのかと問い合わせたところ自分でシェルスクリプト作れよ！って言われたので作りました。\n",
    "coediting": false,
    "created_at": "2015-06-16T20:47:37+09:00",
    "id": "ffd56f8a7dd76e3968fb",
    "private": false,
    "tags": [
      {
        "name": "ShellScript",
        "versions": []
      },
      {
        "name": "Android",
        "versions": []
      },
      {
        "name": "adb",
        "versions": []
      },
      {
        "name": "emulator",
        "versions": []
      }
    ],
    "title": "ヘッドレスなAndroidエミュレータを複数台立ち上げて起動待ちするシェルスクリプト",
    "updated_at": "2015-06-16T20:48:03+09:00",
    "url": "http://qiita.com/muran001/items/ffd56f8a7dd76e3968fb",
    "user": {
      "description": "2014年6月から大手SIerに見切りをつけてWeb系のエンジニアとして活動してます。\r\n",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 69,
      "github_login_name": "muran001",
      "id": "muran001",
      "items_count": 27,
      "linkedin_id": "",
      "location": "Tokyo,Japan",
      "name": "",
      "organization": "",
      "permanent_id": 40141,
      "profile_image_url": "https://avatars.githubusercontent.com/u/7020590?",
      "twitter_screen_name": null,
      "website_url": ""
    }
  },
  {
    "rendered_body": "\n\u003ch1\u003e\n\u003cspan id=\"meteor-はじめの一歩-pert-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#meteor-%E3%81%AF%E3%81%98%E3%82%81%E3%81%AE%E4%B8%80%E6%AD%A9-pert-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eMeteor はじめの一歩 Pert 1\u003c/h1\u003e\n\n\u003cp\u003eMeteorはオープンソースのNode.jsとMongoDBを基盤としたプラットフォームです。\u003c/p\u003e\n\n\u003cp\u003e今回は、MeteorをLinuxマシンにインストールして使えるところまで紹介してみます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"インストール\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eインストール\u003c/h2\u003e\n\n\u003cp\u003eMeteorインストールの前に最新のNodeJSとMongoDBをインストールしておいてください。\u003c/p\u003e\n\n\u003cp\u003eMeteorのインストールは簡単です。以下のコマンドを実行します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"sh\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003ecurl https://install.meteor.com/ \u003cspan class=\"p\"\u003e|\u003c/span\u003e sh\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"sh\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eMeteor 1.1.0.2 has been installed in your home directory \u003cspan class=\"o\"\u003e(\u003c/span\u003e~/.meteor\u003cspan class=\"o\"\u003e)\u003c/span\u003e.\nWriting a launcher script to /usr/local/bin/meteor \u003cspan class=\"k\"\u003efor\u003c/span\u003e your convenience.\nThis may prompt \u003cspan class=\"k\"\u003efor\u003c/span\u003e your password.\n\u003cspan class=\"o\"\u003e[\u003c/span\u003esudo\u003cspan class=\"o\"\u003e]\u003c/span\u003e password \u003cspan class=\"k\"\u003efor\u003c/span\u003e username:\n\nTo get started fast:\n\n  \u003cspan class=\"nv\"\u003e$ \u003c/span\u003emeteor create ~/my_cool_app\n  \u003cspan class=\"nv\"\u003e$ \u003c/span\u003e\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ~/my_cool_app\n  \u003cspan class=\"nv\"\u003e$ \u003c/span\u003emeteor\n\nOr see the docs at:\n\n  docs.meteor.com\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eホームディレクトリの.memteorにインストールされるようです。\u003c/p\u003e\n\n\u003cp\u003e以下のようにバージョンが表示されればインストール成功です。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"sh\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003emeteor --version\nMeteor 1.1.0.2\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"デモアプリ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%87%E3%83%A2%E3%82%A2%E3%83%97%E3%83%AA\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eデモアプリ\u003c/h2\u003e\n\n\u003cp\u003eMeteorにはいくつかのデモアプリが用意されているようです。\u003cbr\u003e\nここでは、その中のTODOアプリをセットアップしてみます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"sh\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003emeteor create --example todos\ntodos: created.\n\nTo run your new app:\n  \u003cspan class=\"nb\"\u003ecd \u003c/span\u003etodos\n  meteor\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003emeteor createした後に出力される説明とおりにtodosディレクトリへcdして、単にmeteorと打つだけ。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"sh\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nv\"\u003e$ \u003c/span\u003emeteor\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eそうすると、必要なパッケージ、バンドル、CSS、JSが用意され、Node Serverが起動してアプリをブラウザで確認することができます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"sh\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ehttp://localhost:3000\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/11224/c7ac2deb-b296-180a-715c-41d54ada8a0e.png\" alt=\"todos01.png\"\u003e\u003c/p\u003e\n\n\u003cp\u003e洗練されたUIです。タスク内容もセンスありです。\u003c/p\u003e\n\n\u003cp\u003eすでに動くアプリなので、新しいタスクリストを作成したりして、動作を確認してみましょう。\u003c/p\u003e\n",
    "body": "# Meteor はじめの一歩 Pert 1\n\nMeteorはオープンソースのNode.jsとMongoDBを基盤としたプラットフォームです。\n\n今回は、MeteorをLinuxマシンにインストールして使えるところまで紹介してみます。\n\n## インストール\n\nMeteorインストールの前に最新のNodeJSとMongoDBをインストールしておいてください。\n\nMeteorのインストールは簡単です。以下のコマンドを実行します。\n\n```sh\n$ curl https://install.meteor.com/ | sh\n```\n\n```sh\nMeteor 1.1.0.2 has been installed in your home directory (~/.meteor).\nWriting a launcher script to /usr/local/bin/meteor for your convenience.\nThis may prompt for your password.\n[sudo] password for username:\n\nTo get started fast:\n\n  $ meteor create ~/my_cool_app\n  $ cd ~/my_cool_app\n  $ meteor\n\nOr see the docs at:\n\n  docs.meteor.com\n\n```\n\nホームディレクトリの.memteorにインストールされるようです。\n\n\n以下のようにバージョンが表示されればインストール成功です。\n\n```sh\n$ meteor --version\nMeteor 1.1.0.2\n```\n\n## デモアプリ\n\nMeteorにはいくつかのデモアプリが用意されているようです。\nここでは、その中のTODOアプリをセットアップしてみます。\n\n```sh\n$ meteor create --example todos\ntodos: created.\n\nTo run your new app:\n  cd todos\n  meteor\n```\n\nmeteor createした後に出力される説明とおりにtodosディレクトリへcdして、単にmeteorと打つだけ。\n\n```sh\n$ meteor\n```\n\nそうすると、必要なパッケージ、バンドル、CSS、JSが用意され、Node Serverが起動してアプリをブラウザで確認することができます。\n\n```sh\nhttp://localhost:3000\n```\n\n![todos01.png](https://qiita-image-store.s3.amazonaws.com/0/11224/c7ac2deb-b296-180a-715c-41d54ada8a0e.png)\n\n\n洗練されたUIです。タスク内容もセンスありです。\n\nすでに動くアプリなので、新しいタスクリストを作成したりして、動作を確認してみましょう。\n\n",
    "coediting": false,
    "created_at": "2015-06-16T20:45:13+09:00",
    "id": "ec4c4ff40cffc950b6ff",
    "private": false,
    "tags": [
      {
        "name": "JavaScript",
        "versions": []
      },
      {
        "name": "Meteor",
        "versions": []
      }
    ],
    "title": "Meteor はじめの一歩 Pert 1",
    "updated_at": "2015-06-16T20:50:54+09:00",
    "url": "http://qiita.com/lemonjp/items/ec4c4ff40cffc950b6ff",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 3,
      "followers_count": 3,
      "github_login_name": "lemonjp",
      "id": "lemonjp",
      "items_count": 1,
      "linkedin_id": "",
      "location": "Croydon, UK",
      "name": "Moritsugu Wada",
      "organization": "",
      "permanent_id": 11224,
      "profile_image_url": "https://avatars.githubusercontent.com/u/760361?v=3",
      "twitter_screen_name": "lemonjp",
      "website_url": ""
    }
  },
  {
    "rendered_body": "\n\u003ch2\u003e\n\u003cspan id=\"vim入れる前に下準備\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#vim%E5%85%A5%E3%82%8C%E3%82%8B%E5%89%8D%E3%81%AB%E4%B8%8B%E6%BA%96%E5%82%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003evim入れる前に、下準備\u003c/h2\u003e\n\n\u003cp\u003e表題入る前に、一先ずbashに変えておく。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003echsh -s /usr/local/bin/bash\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e実行するとパスワードを聞かれるので、パスワードを入力。\u003c/p\u003e\n\n\u003cp\u003eついでに、ファイルを２つ作っておく\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003etouch ~/.bash_profile\ntouch ~/.bashrc\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e.bash_profileの中身を書く\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003evi ~/.bash_profile\nif [ -f $HOME/.bashrc ]; then\n    source $HOME/.bashrc\nfi\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e.bash_profileの中はこれだけ書いておいて、あとは.bashrcにガリガリ書いていく\u003c/p\u003e\n\n\u003cp\u003e.bashrc の中身を書く\u003cbr\u003e\nここの中身は個人の好みなので、参考にならないかも。\u003cbr\u003e\n一先ず、赤帽系の僕は、llが無いと落ち着かないので、alias張っておく。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003evi ~/.bashrc\nalias ll='ls -lG'\nalias la='ls -laG'\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"vimのインストール\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#vim%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003evimのインストール\u003c/h2\u003e\n\n\u003cp\u003e1.コンパイル用のフォルダを作成する\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003emkdir -p $HOME/local/src\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e2.作ったフォルダへ移動\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ecd $HOME/local/src\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e3.vim本体をダウンロードしてくる\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ewget ftp://ftp.vim.org/pub/vim/unix/vim-7.4.tar.bz2\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e4.展開\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003etar jxf vim-7.4.tar.bz2\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e5.ディレクトリ移動\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ecd vim74\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e6.パッチをダウンロードしてくるフォルダを作成する\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003emkdir patches\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e7.ディレクトリ移動\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ecd patches\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e8.パッチのダウンロード\u003cbr\u003e\n※以下、URLにアクセスして、最終パッチの番号を控えておく。\u003cbr\u003e\n　\u003ca\u003eftp://ftp.vim.org/pub/vim/patches/7.4/\u003c/a\u003e\u003cbr\u003e\n※結構数あるので、時間かかる\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ecurl -O 'ftp://ftp.vim.org/pub/vim/patches/7.4/7.4.[001-738]'\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e2015.06.16 時点での最終パッチは738\u003c/p\u003e\n\n\u003cp\u003e9.ディレクトリ移動（１階層上へ）\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ecd ..\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e10.パッチの適用\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003ecat patches/7.4.* | patch -p0\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e11.configure\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e./configure --enable-multibyte --enable-xim --enable-fontset \\\n\u0026gt;--with-features=big --prefix=$HOME/local\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e12.make\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003emake\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e13.make install\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003emake install\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e14..bashrcに追記\u003cbr\u003e\n※は、適宜変更\u003cbr\u003e\n /hoem/ は $HOME でもいけるかも。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003evi ~/.bashrc\nalias vim='/home/\u0026lt;id\u0026gt;/local/bin/vim'\nalias vi='/home/\u0026lt;id\u0026gt;/local/bin/vim'\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e15..bashrcを再読み込み\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003esource ~/.bashrc\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e16.vim起動確認\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003evim\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eインストールしたvimのバージョンが表示されればOK。\u003cbr\u003e\n表示されない場合、aliasの設定を今一度確認。\u003c/p\u003e\n\n\u003cp\u003e多分、上から順番にやっていくとうまく入るはず。\u003c/p\u003e\n\n\u003cp\u003e参考：\u003cbr\u003e\n\u003ca href=\"http://sekki.org/wordpress/?p=413\"\u003ehttp://sekki.org/wordpress/?p=413\u003c/a\u003e\u003cbr\u003e\n\u003ca href=\"http://www.hazama.nu/t2o2/archives/002696.shtml\"\u003ehttp://www.hazama.nu/t2o2/archives/002696.shtml\u003c/a\u003e\u003c/p\u003e\n",
    "body": "##vim入れる前に、下準備\n\n表題入る前に、一先ずbashに変えておく。\n\n```\nchsh -s /usr/local/bin/bash\n```\n\n実行するとパスワードを聞かれるので、パスワードを入力。\n\nついでに、ファイルを２つ作っておく\n\n```\ntouch ~/.bash_profile\ntouch ~/.bashrc\n```\n\n.bash_profileの中身を書く\n\n```\nvi ~/.bash_profile\nif [ -f $HOME/.bashrc ]; then\n    source $HOME/.bashrc\nfi\n```\n\n.bash_profileの中はこれだけ書いておいて、あとは.bashrcにガリガリ書いていく\n\n\n\n\n.bashrc の中身を書く\nここの中身は個人の好みなので、参考にならないかも。\n一先ず、赤帽系の僕は、llが無いと落ち着かないので、alias張っておく。\n\n```\nvi ~/.bashrc\nalias ll='ls -lG'\nalias la='ls -laG'\n```\n\n##vimのインストール\n\n1.コンパイル用のフォルダを作成する\n\n```\nmkdir -p $HOME/local/src\n```\n\n2.作ったフォルダへ移動\n\n```\ncd $HOME/local/src\n```\n\n3.vim本体をダウンロードしてくる\n\n```\nwget ftp://ftp.vim.org/pub/vim/unix/vim-7.4.tar.bz2\n```\n\n4.展開\n\n```\ntar jxf vim-7.4.tar.bz2\n```\n\n5.ディレクトリ移動\n\n```\ncd vim74\n```\n\n6.パッチをダウンロードしてくるフォルダを作成する\n\n```\nmkdir patches\n```\n\n7.ディレクトリ移動\n\n```\ncd patches\n```\n\n8.パッチのダウンロード\n※以下、URLにアクセスして、最終パッチの番号を控えておく。\n　ftp://ftp.vim.org/pub/vim/patches/7.4/\n※結構数あるので、時間かかる\n\n```\ncurl -O 'ftp://ftp.vim.org/pub/vim/patches/7.4/7.4.[001-738]'\n```\n2015.06.16 時点での最終パッチは738\n\n\n9.ディレクトリ移動（１階層上へ）\n\n```\ncd ..\n```\n\n10.パッチの適用\n\n```\ncat patches/7.4.* | patch -p0\n```\n\n11.configure\n\n```\n./configure --enable-multibyte --enable-xim --enable-fontset \\\n\u003e--with-features=big --prefix=$HOME/local\n```\n\n12.make\n\n```\nmake\n```\n\n13.make install\n\n```\nmake install\n```\n\n14..bashrcに追記\n※\u003cid\u003eは、適宜変更\n /hoem/\u003cid\u003e は $HOME でもいけるかも。\n\n```\nvi ~/.bashrc\nalias vim='/home/\u003cid\u003e/local/bin/vim'\nalias vi='/home/\u003cid\u003e/local/bin/vim'\n```\n\n15..bashrcを再読み込み\n\n```\nsource ~/.bashrc\n```\n\n16.vim起動確認\n\n```\nvim\n```\n\nインストールしたvimのバージョンが表示されればOK。\n表示されない場合、aliasの設定を今一度確認。\n\n多分、上から順番にやっていくとうまく入るはず。\n\n参考：\nhttp://sekki.org/wordpress/?p=413\nhttp://www.hazama.nu/t2o2/archives/002696.shtml\n\n",
    "coediting": false,
    "created_at": "2015-06-16T20:44:43+09:00",
    "id": "61ec69bf1d24b84c15ef",
    "private": false,
    "tags": [
      {
        "name": "Vim",
        "versions": []
      }
    ],
    "title": "さくらレンタルサーバ（スタンダード）にvimいれたった",
    "updated_at": "2015-06-16T20:44:43+09:00",
    "url": "http://qiita.com/lx_lucifer_xl/items/61ec69bf1d24b84c15ef",
    "user": {
      "description": null,
      "facebook_id": null,
      "followees_count": 0,
      "followers_count": 0,
      "github_login_name": null,
      "id": "lx_lucifer_xl",
      "items_count": 1,
      "linkedin_id": null,
      "location": null,
      "name": "",
      "organization": null,
      "permanent_id": 82089,
      "profile_image_url": "https://secure.gravatar.com/avatar/45e6520cf69bd4b32c38060bcc4617c1",
      "twitter_screen_name": null,
      "website_url": null
    }
  },
  {
    "rendered_body": "\n\u003ch2\u003e\n\u003cspan id=\"polymer-starter-kit-is-何\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#polymer-starter-kit-is-%E4%BD%95\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePolymer Starter Kit is 何\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ePolymer Starter Kit\u003c/code\u003e は Android I/O と揶揄される Google I/O 2015 で発表された、数少ない Web 領域の発表である \u003ccode\u003ePolymer 1.0\u003c/code\u003e を簡単に試すことが出来る \u003ccode\u003eboilerplate\u003c/code\u003e であり、\u003ccode\u003escaffold\u003c/code\u003e の要素もあるので \u003ccode\u003eYeoman\u003c/code\u003e のような存在でもあり、フロントエンドのモダンなワークフローを知る良い教材です。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBuild tools \u0026amp; boilerplate for creating production-quality web apps using Polymer\u003cbr\u003e\n\u003ca href=\"https://developers.google.com/web/tools/polymer-starter-kit/\"\u003ehttps://developers.google.com/web/tools/polymer-starter-kit/\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eGoogle は 2014年に \u003ccode\u003ePolymer Starter Kit\u003c/code\u003e の前身とも言える \u003ccode\u003eWeb Starter Kit\u003c/code\u003e をリリースしていますが、こちらはマルチデバイス対応のサイト、いわゆるレスポンシブウェブデザインのサイトを効率的に作るためのツールに留まっていて、\u003ccode\u003ePolymer Starter Kit\u003c/code\u003e はその発展形と捉えることも出来ます。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBoilerplate \u0026amp; Tooling for Multi-Device Development\u003cbr\u003e\n\u003ca href=\"https://developers.google.com/web/tools/starter-kit/\"\u003ehttps://developers.google.com/web/tools/starter-kit/\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"polymer-starter-kit-に含まれるもの\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#polymer-starter-kit-%E3%81%AB%E5%90%AB%E3%81%BE%E3%82%8C%E3%82%8B%E3%82%82%E3%81%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePolymer Starter Kit に含まれるもの\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"http://polymer-project.org/\"\u003ePolymer\u003c/a\u003e、\u003ca href=\"https://elements.polymer-project.org/browse?package=paper-elements\"\u003ePaperエレメント\u003c/a\u003e、\u003ca href=\"https://elements.polymer-project.org/browse?package=iron-elements\"\u003eIronエレメント\u003c/a\u003e、\u003ca href=\"https://elements.polymer-project.org/browse?package=neon-elements\"\u003eNeonエレメント\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eマテリアルデザインレイアウト\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://visionmedia.github.io/page.js/\"\u003ePage.js\u003c/a\u003e でルーティングする SPA\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://github.com/Polymer/web-component-tester\"\u003eWeb Component Tester\u003c/a\u003e を使ったユニットテスト\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://elements.polymer-project.org/browse?package=platinum-elements\"\u003ePlatinum Service Worker elements\u003c/a\u003e を使ったオフラインファーストの準備\n\n\u003cul\u003e\n\u003cli\u003eService Worker を簡単に使うことが出来る\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://github.com/Polymer/vulcanize\"\u003eVulcanize\u003c/a\u003eを含むエンドツーエンドのビルドツール\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"gulpfilejs-を読み解く\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#gulpfilejs-%E3%82%92%E8%AA%AD%E3%81%BF%E8%A7%A3%E3%81%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003egulpfile.js を読み解く\u003c/h2\u003e\n\n\u003cp\u003e前置きが長くなりましたが、本題に入ります。\u003c/p\u003e\n\n\u003cp\u003e前述の通り、\u003ccode\u003ePolymer Starter Kit\u003c/code\u003e の前身として \u003ccode\u003eWeb Starter Kit\u003c/code\u003e があり、同じように \u003ccode\u003egulpfile.js\u003c/code\u003e がタスクランナーとして用いられています。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eWeb Starter Kit\u003c/code\u003e から変わっていない設定もいくつかありますが、\u003ccode\u003ePolymer Starter Kit\u003c/code\u003e ならではの設定もありますので、ひとつひとつ読み解いていきます。\u003c/p\u003e\n\n\u003cp\u003eちなみに \u003ccode\u003eWeb Starter Kit\u003c/code\u003e の \u003ccode\u003egulpfile.js\u003c/code\u003e は zchee さんが Qiita に投稿されています。\u003cbr\u003e\n\u003ca href=\"http://qiita.com/zchee/items/5cc8bc318f6407e47a4c\"\u003eGoogle Web Starter Kitのgulpfileを翻訳してみた\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"use-scrict\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#use-scrict\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003euse scrict\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e'use strict';\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003estrict モードの宣言です。\u003c/p\u003e\n\n\u003cp\u003eエラーではないが、しかし怪しい、曖昧な記述がエラーになります。\u003cbr\u003e\n潜在的や誤りの早期発見、非 strict モードよりも高速な実行というメリットがあります。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"include-gulp--tools-well-use\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#include-gulp--tools-well-use\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eInclude Gulp \u0026amp; Tools We'll Use\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Include Gulp \u0026amp; Tools We'll Use\nvar gulp = require('gulp');\nvar $ = require('gulp-load-plugins')();\nvar del = require('del');\nvar runSequence = require('run-sequence');\nvar browserSync = require('browser-sync');\nvar reload = browserSync.reload;\nvar merge = require('merge-stream');\nvar path = require('path');\nvar fs = require('fs');\nvar glob = require('glob');\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e使用する package　の変数宣言です。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003egulp-load-plugins\u003c/code\u003e を使うことで \u003ccode\u003egulp-*\u003c/code\u003e という命名規則に沿っている package を個別に宣言する必要がなくなります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"json\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003epackage.json\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\"private\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\"devDependencies\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"browser-sync\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^2.7.7\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"del\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.1.1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"glob\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^5.0.6\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^3.8.5\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-autoprefixer\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^2.1.0\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-cache\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^0.2.8\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-changed\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.0.0\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-cssmin\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^0.1.7\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-flatten\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"0.0.4\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-if\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.2.1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-imagemin\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^2.2.1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-jshint\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.6.3\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-load-plugins\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^0.10.0\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-minify-html\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.0.2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-rename\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.2.0\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-replace\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^0.5.3\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-size\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.0.0\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-uglify\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.2.0\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-uncss\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.0.1\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-useref\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.1.2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"gulp-vulcanize\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^6.0.0\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"jshint-stylish\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^2.0.0\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"merge-stream\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^0.1.7\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"opn\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.0.0\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"require-dir\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^0.3.0\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"run-sequence\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^1.0.2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"vulcanize\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u0026gt;= 1.4.2\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"web-component-tester\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"^3.1.3\"\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\"engines\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nt\"\u003e\"node\"\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"\u0026gt;=0.10.0\"\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e変数宣言しているものを含め、\u003ccode\u003ePolymer Starter Kit\u003c/code\u003e で使用している package は \u003ccode\u003epackage.json\u003c/code\u003e で定義しています。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003epackage.json\u003c/code\u003e の \u003ccode\u003edevDependencies\u003c/code\u003e に記載されている package は全部で28個と結構な個数を呼んでいます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003evar AUTOPREFIXER_BROWSERS = [\n  'ie \u0026gt;= 10',\n  'ie_mob \u0026gt;= 10',\n  'ff \u0026gt;= 30',\n  'chrome \u0026gt;= 34',\n  'safari \u0026gt;= 7',\n  'opera \u0026gt;= 23',\n  'ios \u0026gt;= 7',\n  'android \u0026gt;= 4.4',\n  'bb \u0026gt;= 10'\n];\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ePostCSS である Autoprefixer 用の変数宣言です。\u003cbr\u003e\n\u003ccode\u003eWeb Starter Kit\u003c/code\u003e と同じ設定です。\u003c/p\u003e\n\n\u003cp\u003e作成するウェブサイトの要件に合わせて変更すると良いでしょう。\u003c/p\u003e\n\n\u003ch4\u003e\n\u003cspan id=\"pleeease\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#pleeease\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ePleeease\u003c/h4\u003e\n\n\u003cp\u003e完全に私感且つ厳密には同じ用途ではありませんが、CSS だけで複数のツールを併用しなければならない昨今の状況を鑑みると、\u003ccode\u003ePleeease\u003c/code\u003e がもう少し流行っても良いのではないかと思っています。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePleeease\u003cbr\u003e\nAll the annoying CSS stuff we don't want to do in 1 tool!\u003cbr\u003e\n\u003ca href=\"http://pleeease.io/\"\u003ehttp://pleeease.io/\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eとはいえ、プリフィックスを付与する一点に絞っている \u003ccode\u003eAutoprefixer\u003c/code\u003e の方が、こういう場面では組み合わせやすいのだろうなーとも思います。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003evar styleTask = function (stylesPath, srcs) {\n  return gulp.src(srcs.map(function(src) {\n      return path.join('app', stylesPath, src);\n    }))\n    .pipe($.changed(stylesPath, {extension: '.css'}))\n    .pipe($.autoprefixer(AUTOPREFIXER_BROWSERS))\n    .pipe(gulp.dest('.tmp/' + stylesPath))\n    .pipe($.if('*.css', $.cssmin()))\n    .pipe(gulp.dest('dist/' + stylesPath))\n    .pipe($.size({title: stylesPath}));\n};\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003estyleTask\u003c/code\u003e という変数宣言です。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003estylesPath\u003c/code\u003e で定義されるディレクトリ以下の \u003ccode\u003eCSS\u003c/code\u003e ファイルを対象として、下記の処理を行ないます。\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003eautoprefixer でプリフィックスを付与\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.tmp/' + stylesPath\u003c/code\u003e にプリフィックスが付与された \u003ccode\u003eCSS\u003c/code\u003e ファイルを出力\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.css\u003c/code\u003e ファイルであれば、CSS を縮小化する \u003ccode\u003ecssmin\u003c/code\u003e を実行\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003edist/' + stylesPath\u003c/code\u003e に縮小化された \u003ccode\u003eCSS\u003c/code\u003e ファイルを出力\u003c/li\u003e\n\u003cli\u003eファイルサイズを表示\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"compile-and-automatically-prefix-stylesheets\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#compile-and-automatically-prefix-stylesheets\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCompile and Automatically Prefix Stylesheets\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Compile and Automatically Prefix Stylesheets\ngulp.task('styles', function () {\n  return styleTask('styles', ['**/*.css']);\n});\n\ngulp.task('elements', function () {\n  return styleTask('elements', ['**/*.css']);\n});\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003estyles\u003c/code\u003e タスクと \u003ccode\u003eelements\u003c/code\u003e タスクを定義し、それぞれ前述の \u003ccode\u003estyleTask\u003c/code\u003e を \u003ccode\u003e.css\u003c/code\u003e ファイルに対して実行します。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"lint-javascript\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#lint-javascript\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLint JavaScript\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Lint JavaScript\ngulp.task('jshint', function () {\n  return gulp.src([\n      'app/scripts/**/*.js',\n      'app/elements/**/*.js',\n      'app/elements/**/*.html'\n    ])\n    .pipe(reload({stream: true, once: true}))\n    .pipe($.jshint.extract()) // Extract JS from .html files\n    .pipe($.jshint())\n    .pipe($.jshint.reporter('jshint-stylish'))\n    .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n});\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eJavaScript の構文を解析するタスクです。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003ebrowserSync\u003c/code\u003e がアクティブな場合に限り、\u003ccode\u003eapp/scripts\u003c/code\u003e 以下、\u003ccode\u003eapp/elements\u003c/code\u003e 以下の \u003ccode\u003e.js\u003c/code\u003e ファイルと \u003ccode\u003eapp/elements\u003c/code\u003e 以下の \u003ccode\u003e.html\u003c/code\u003e ファイルを対象として、\u003ccode\u003eJSHint\u003c/code\u003e による構文解析を行ない、\u003ccode\u003ejshint-stylish\u003c/code\u003e で CLI に最適化したレポートを表示させます。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"optimize-images\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#optimize-images\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eOptimize Images\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Optimize Images\ngulp.task('images', function () {\n  return gulp.src('app/images/**/*')\n    .pipe($.cache($.imagemin({\n      progressive: true,\n      interlaced: true\n    })))\n    .pipe(gulp.dest('dist/images'))\n    .pipe($.size({title: 'images'}));\n});\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e画像を圧縮するタスクです。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eWeb Starter Kit\u003c/code\u003e と同じ設定です。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eapp/images\u003c/code\u003e 以下の画像ファイルに対して、\u003ccode\u003eimagemin\u003c/code\u003e で画像圧縮を行ない、\u003ccode\u003edist/images\u003c/code\u003e 以下に出力し、コンソールにファイルサイズを表示します。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"copy-all-files-at-the-root-level-app\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#copy-all-files-at-the-root-level-app\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCopy All Files At The Root Level (app)\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Copy All Files At The Root Level (app)\ngulp.task('copy', function () {\n  var app = gulp.src([\n    'app/*',\n    '!app/test',\n    '!app/precache.json'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist'));\n\n  var bower = gulp.src([\n    'bower_components/**/*'\n  ]).pipe(gulp.dest('dist/bower_components'));\n\n  var elements = gulp.src(['app/elements/**/*.html'])\n    .pipe(gulp.dest('dist/elements'));\n\n  var swBootstrap = gulp.src(['bower_components/platinum-sw/bootstrap/*.js'])\n    .pipe(gulp.dest('dist/elements/bootstrap'));\n\n  var swToolbox = gulp.src(['bower_components/sw-toolbox/*.js'])\n    .pipe(gulp.dest('dist/sw-toolbox'));\n\n  var vulcanized = gulp.src(['app/elements/elements.html'])\n    .pipe($.rename('elements.vulcanized.html'))\n    .pipe(gulp.dest('dist/elements'));\n\n  return merge(app, bower, elements, vulcanized, swBootstrap, swToolbox)\n    .pipe($.size({title: 'copy'}));\n});\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eコピータスクです。\u003c/p\u003e\n\n\u003cp\u003e下記の内容を実行します。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eapp/test\u003c/code\u003e 以下と \u003ccode\u003eapp/precache.json\u003c/code\u003e を除く、\u003ccode\u003eapp\u003c/code\u003e 以下のすべてのファイルを \u003ccode\u003edist\u003c/code\u003e にコピー \u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ebower_components\u003c/code\u003e 以下のファイルを \u003ccode\u003edist/bower_components\u003c/code\u003e にコピー\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eapp/elements\u003c/code\u003e 以下の \u003ccode\u003e.html\u003c/code\u003e ファイルを \u003ccode\u003edist/elements\u003c/code\u003e にコピー\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ebower_components/platinum-sw/bootstrap\u003c/code\u003e 以下の \u003ccode\u003e.js\u003c/code\u003e ファイルを \u003ccode\u003edist/elements/bootstrap\u003c/code\u003e にコピー\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003ebower_components/sw-toolbox\u003c/code\u003e 以下の \u003ccode\u003e.js\u003c/code\u003e ファイルを \u003ccode\u003edist/sw-toolbox\u003c/code\u003e にコピー\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eapp/elements/elements.html\u003c/code\u003e を \u003ccode\u003eelements.vulcanized.html\u003c/code\u003e にリネームして \u003ccode\u003edist/elements\u003c/code\u003e にコピー\u003c/li\u003e\n\u003cli\u003e上記のコピーを実行した後のファイルサイズをコンソールに表示します。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ccode\u003eWeb Starter Kit\u003c/code\u003e にも似たような設定がありますが、より細かい要件が設定されています。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"copy-web-fonts-to-dist\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#copy-web-fonts-to-dist\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eCopy Web Fonts To Dist\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Copy Web Fonts To Dist\ngulp.task('fonts', function () {\n  return gulp.src(['app/fonts/**'])\n    .pipe(gulp.dest('dist/fonts'))\n    .pipe($.size({title: 'fonts'}));\n});\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eWeb フォントをコピーするタスクです。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eWeb Starter Kit\u003c/code\u003e と同じ設定です。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eapp/fonts\u003c/code\u003e 以下のファイルを \u003ccode\u003edist/fonts\u003c/code\u003e 以下にコピーし、コンソールにファイルサイズを表示します。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"scan-your-html-for-assets--optimize-them\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#scan-your-html-for-assets--optimize-them\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eScan Your HTML For Assets \u0026amp; Optimize Them\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Scan Your HTML For Assets \u0026amp; Optimize Them\ngulp.task('html', function () {\n  var assets = $.useref.assets({searchPath: ['.tmp', 'app', 'dist']});\n\n  return gulp.src(['app/**/*.html', '!app/{elements,test}/**/*.html'])\n    // Replace path for vulcanized assets\n    .pipe($.if('*.html', $.replace('elements/elements.html', 'elements/elements.vulcanized.html')))\n    .pipe(assets)\n    // Concatenate And Minify JavaScript\n    .pipe($.if('*.js', $.uglify({preserveComments: 'some'})))\n    // Concatenate And Minify Styles\n    // In case you are still using useref build blocks\n    .pipe($.if('*.css', $.cssmin()))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    // Minify Any HTML\n    .pipe($.if('*.html', $.minifyHtml({\n      quotes: true,\n      empty: true,\n      spare: true\n    })))\n    // Output Files\n    .pipe(gulp.dest('dist'))\n    .pipe($.size({title: 'html'}));\n});\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eapp\u003c/code\u003e 以下の \u003ccode\u003e.html\u003c/code\u003e 、\u003ccode\u003eapp/elements\u003c/code\u003e と \u003ccode\u003eapp/test\u003c/code\u003e 以下には無い \u003ccode\u003e.html\u003c/code\u003e を対象として、下記の最適化を実行します。\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ccode\u003e.html\u003c/code\u003e ファイルであれば、\u003ccode\u003eelements/elements.html\u003c/code\u003e を \u003ccode\u003eelements/elements.vulcanized.html\u003c/code\u003e に置き換える\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.js\u003c/code\u003e ファイルであれば \u003ccode\u003euglify\u003c/code\u003e で複数の \u003ccode\u003e.js\u003c/code\u003e ファイルを 1つのファイルに結合して圧縮\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.css\u003c/code\u003e ファイルであれば \u003ccode\u003ecssmin\u003c/code\u003e でファイルサイズを縮小\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.html\u003c/code\u003e ファイルであれば \u003ccode\u003eminifyHtml\u003c/code\u003e でファイルサイズを縮小\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003edist\u003c/code\u003e ディレクトリに上記のファイルを出力\u003c/li\u003e\n\u003cli\u003eファイルサイズを表示\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"vulcanize-imports\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#vulcanize-imports\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eVulcanize imports\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Vulcanize imports\ngulp.task('vulcanize', function () {\n  var DEST_DIR = 'dist/elements';\n\n  return gulp.src('dist/elements/elements.vulcanized.html')\n    .pipe($.vulcanize({\n      dest: DEST_DIR,\n      strip: true,\n      inlineCss: true,\n      inlineScripts: true\n    }))\n    .pipe(gulp.dest(DEST_DIR))\n    .pipe($.size({title: 'vulcanize'}));\n});\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003ePolymer は便利で素敵なモジュールを import すればするほど、リクエスト数が増えてしまいます。\u003c/p\u003e\n\n\u003cp\u003eこのリクエスト数の増加を解消するツールが vulcanize です。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eVulcanize\u003cbr\u003e\nReduce an HTML file and its dependent HTML Imports into one file\u003cbr\u003e\n\u003ca href=\"https://github.com/Polymer/vulcanize\"\u003ehttps://github.com/Polymer/vulcanize\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eVulcanize を使うことで、複数のモジュールを結合し、リクエスト数を大幅に減らすことが出来ます。\u003c/p\u003e\n\n\u003cp\u003eここではその vulcanize タスクを定義しています。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003edist/elements/elements.vulcanized.html\u003c/code\u003e から import している UI モジュールを結合して、\u003ccode\u003edist/elements\u003c/code\u003e にファイルを吐き出し、ファイルサイズを表示します。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"generate-a-list-of-files-that-should-be-precached-when-serving-from-dist\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#generate-a-list-of-files-that-should-be-precached-when-serving-from-dist\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eGenerate a list of files that should be precached when serving from 'dist'.\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Generate a list of files that should be precached when serving from 'dist'.\n// The list will be consumed by the \u0026lt;platinum-sw-cache\u0026gt; element.\ngulp.task('precache', function (callback) {\n  var dir = 'dist';\n\n  glob('{elements,scripts,styles}/**/*.*', {cwd: dir}, function(error, files) {\n    if (error) {\n      callback(error);\n    } else {\n      files.push('index.html', './', 'bower_components/webcomponentsjs/webcomponents-lite.min.js');\n      var filePath = path.join(dir, 'precache.json');\n      fs.writeFile(filePath, JSON.stringify(files), callback);\n    }\n  });\n});\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eelements\u003c/code\u003e 、\u003ccode\u003escripts\u003c/code\u003e 、\u003ccode\u003estyles\u003c/code\u003e 以下のファイルを対象として、\u003ccode\u003eService Worker\u003c/code\u003e でオフライン対応を実現するコードを生成する \u003ccode\u003eprecache\u003c/code\u003e タスクです。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"clean-output-directory\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#clean-output-directory\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eClean Output Directory\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Clean Output Directory\ngulp.task('clean', del.bind(null, ['.tmp', 'dist']));\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003e.tmp\u003c/code\u003e と \u003ccode\u003edist\u003c/code\u003e ディレクトリを削除します。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eWeb Starter Kit\u003c/code\u003e と同じ設定です。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"watch-files-for-changes--reload\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#watch-files-for-changes--reload\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eWatch Files For Changes \u0026amp; Reload\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Watch Files For Changes \u0026amp; Reload\ngulp.task('serve', ['styles', 'elements', 'images'], function () {\n  browserSync({\n    notify: false,\n    snippetOptions: {\n      rule: {\n        match: '\u0026lt;span id=\"browser-sync-binding\"\u0026gt;\u0026lt;/span\u0026gt;',\n        fn: function (snippet) {\n          return snippet;\n        }\n      }\n    },\n    // Run as an https by uncommenting 'https: true'\n    // Note: this uses an unsigned certificate which on first access\n    //       will present a certificate warning in the browser.\n    // https: true,\n    server: {\n      baseDir: ['.tmp', 'app'],\n      routes: {\n        '/bower_components': 'bower_components'\n      }\n    }\n  });\n\n  gulp.watch(['app/**/*.html'], reload);\n  gulp.watch(['app/styles/**/*.css'], ['styles', reload]);\n  gulp.watch(['app/elements/**/*.css'], ['elements', reload]);\n  gulp.watch(['app/{scripts,elements}/**/*.js'], ['jshint']);\n  gulp.watch(['app/images/**/*'], reload);\n});\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003ebrowserSync\u003c/code\u003e で \u003ccode\u003e.tmp\u003c/code\u003e と \u003ccode\u003eapp\u003c/code\u003e ディレクトリをルートとしたローカルサーバを起動し、\u003ccode\u003estyles\u003c/code\u003e タスク、\u003ccode\u003eelements\u003c/code\u003e タスク、\u003ccode\u003eimages\u003c/code\u003e タスクを並列で実行します。\u003c/p\u003e\n\n\u003cp\u003eまた、ファイルの変更を監視し、指定のファイルに変更があれば以下の内容を実行します。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eapp\u003c/code\u003e 以下の \u003ccode\u003e.html\u003c/code\u003e ファイルに変更があればブラウザをリロード\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eapp/styles\u003c/code\u003e 以下の \u003ccode\u003e.css\u003c/code\u003e ファイルに変更があれば \u003ccode\u003estyles\u003c/code\u003e タスクを実行してブラウザをリロード\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eapp/elements\u003c/code\u003e 以下の \u003ccode\u003e.css\u003c/code\u003e ファイルに変更があれば \u003ccode\u003eelements\u003c/code\u003e タスクを実行してブラウザをリロード\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eapp/scripts\u003c/code\u003e 、\u003ccode\u003eapp/elements\u003c/code\u003e 以下の \u003ccode\u003e.js\u003c/code\u003e ファイルに変更があれば \u003ccode\u003ejshint\u003c/code\u003e タスクを実行\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eapp/images\u003c/code\u003e 以下のファイルに変更があればブラウザをリロード\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ccode\u003eWeb Starter Kit\u003c/code\u003e にも近しい設定がありますが、より細かい要件が設定されています。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"build-and-serve-the-output-from-the-dist-build\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#build-and-serve-the-output-from-the-dist-build\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eBuild and serve the output from the dist build\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Build and serve the output from the dist build\ngulp.task('serve:dist', ['default'], function () {\n  browserSync({\n    notify: false,\n    snippetOptions: {\n      rule: {\n        match: '\u0026lt;span id=\"browser-sync-binding\"\u0026gt;\u0026lt;/span\u0026gt;',\n        fn: function (snippet) {\n          return snippet;\n        }\n      }\n    },\n    // Run as an https by uncommenting 'https: true'\n    // Note: this uses an unsigned certificate which on first access\n    //       will present a certificate warning in the browser.\n    // https: true,\n    server: 'dist'\n  });\n});\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e本番環境用の \u003ccode\u003edist\u003c/code\u003e ディレクトリをルートとして \u003ccode\u003ebrowserSync\u003c/code\u003e でローカルサーバを起動します。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esnippetOptions\u003c/code\u003e が指定されている以外は \u003ccode\u003eWeb Starter Kit\u003c/code\u003e と同じ設定です。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"build-production-files-the-default-task\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#build-production-files-the-default-task\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eBuild Production Files, the Default Task\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Build Production Files, the Default Task\ngulp.task('default', ['clean'], function (cb) {\n  runSequence(\n    ['copy', 'styles'],\n    'elements',\n    ['jshint', 'images', 'fonts', 'html'],\n    'vulcanize', 'precache',\n    cb);\n});\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003egulp\u003c/code\u003e のデフォルトタスクです。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003egulp\u003c/code\u003e はその特性上、タスクが並列実行され、実行順序を担保出来ないので、\u003ccode\u003erunSequence\u003c/code\u003e を使い、下記の順序でタスクを処理させます。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003erunSequence\u003cbr\u003e\nRuns a sequence of gulp tasks in the specified order. This function is designed to solve the situation where you have defined run-order, but choose not to or cannot use dependencies.\u003cbr\u003e\n\u003ca href=\"https://github.com/OverZealous/run-sequence\"\u003ehttps://github.com/OverZealous/run-sequence\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003col\u003e\n\u003cli\u003e\n\u003ccode\u003eclean\u003c/code\u003e タスクを実行\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003erunSequence\u003c/code\u003e で \u003ccode\u003ecopy\u003c/code\u003e、\u003ccode\u003estyles\u003c/code\u003e タスクのみを実行\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eelements\u003c/code\u003e タスクを実行\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003erunSequence\u003c/code\u003e で \u003ccode\u003ejshint\u003c/code\u003e、\u003ccode\u003eimages\u003c/code\u003e、\u003ccode\u003efonts\u003c/code\u003e、\u003ccode\u003ehtml\u003c/code\u003e タスクのみを実行\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003evulcanize\u003c/code\u003e、\u003ccode\u003eprecache\u003c/code\u003e タスクを実行\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eなお、\u003ccode\u003erun-sequence\u003c/code\u003e は \u003ccode\u003eorchestrator\u003c/code\u003e が \u003ccode\u003enon-dependent ordered tasks\u003c/code\u003e を実装するまでの場つなぎであると明言されています。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePlease Note\u003cbr\u003e\nThis is intended to be a temporary solution until orchestrator is updated to support non-dependent ordered tasks.\u003cbr\u003e\n\u003ca href=\"https://github.com/OverZealous/run-sequence\"\u003ehttps://github.com/OverZealous/run-sequence\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ccode\u003ePolymer Starter Kit\u003c/code\u003e ならではの \u003ccode\u003eelements\u003c/code\u003e タスク、\u003ccode\u003evulcanize\u003c/code\u003e タスク、\u003ccode\u003eprecache\u003c/code\u003e タスクが設定されていることが \u003ccode\u003eWeb Starter Kit\u003c/code\u003e との違いです。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"load-tasks-for-web-component-tester\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#load-tasks-for-web-component-tester\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLoad tasks for web-component-tester\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Load tasks for web-component-tester\n// Adds tasks for `gulp test:local` and `gulp test:remote`\ntry { require('web-component-tester').gulp.init(gulp); } catch (err) {}\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003egulp test:local\u003c/code\u003e と \u003ccode\u003egulp test:remote\u003c/code\u003e タスクを定義し、\u003ccode\u003eweb-component-tester\u003c/code\u003e を使ったユニットテストを実行するタスクです。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eweb-component-tester\u003cbr\u003e\n\u003ccode\u003eweb-component-tester\u003c/code\u003e makes testing your web components a breeze!\u003cbr\u003e\n\u003ca href=\"https://github.com/Polymer/web-component-tester\"\u003ehttps://github.com/Polymer/web-component-tester\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ccode\u003egulp test:local\u003c/code\u003e を叩くと \u003ccode\u003ewct:local\u003c/code\u003e が呼ばれ、標準設定では \u003ccode\u003eSelenium\u003c/code\u003e で \u003ccode\u003echrome 41\u003c/code\u003e、\u003ccode\u003echrome 43\u003c/code\u003e、\u003ccode\u003efirefox 38\u003c/code\u003e、\u003ccode\u003esafari 8.0.5\u003c/code\u003e のブラウザが立ち上がり、\u003ccode\u003eapp/test\u003c/code\u003e 以下を対象としたテストが実行されます。\u003c/p\u003e\n\n\u003cp\u003e下記のエラーが表示される場合は、指定の URI から \u003ccode\u003eselenium-safari-driver\u003c/code\u003e をダウンロード、インストールしてください。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTest run ended in failure: Until Selenium's SafariDriver supports Safari 6.2+, 7.1+, \u0026amp; 8.0+, you must\u003cbr\u003e\nmanually install it. Follow the steps at:\u003cbr\u003e\n\u003ca href=\"https://code.google.com/p/selenium/issues/detail?id=7933#c23\"\u003ehttps://code.google.com/p/selenium/issues/detail?id=7933#c23\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e…と記載されていますが、自分の環境では \u003ccode\u003eselenium-safari-driver\u003c/code\u003e のインストールがうまくいきません……。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"load-custom-tasks-from-the-tasks-directory\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#load-custom-tasks-from-the-tasks-directory\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eLoad custom tasks from the \u003ccode\u003etasks\u003c/code\u003e directory\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e// Load custom tasks from the `tasks` directory\ntry { require('require-dir')('tasks'); } catch (err) {}\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003erequire-dir\u003c/code\u003e を使って \u003ccode\u003etasks\u003c/code\u003e ディレクトリに定義するタスクを読み込みます。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003erequire-dir \u003cbr\u003e\nNode helper to require() directories. The directory's files are examined, and each one that can be require()'d is require()'d and returned as part of a hash from that file's basename to its exported contents.\u003cbr\u003e\n\u003ca href=\"https://www.npmjs.com/package/require-dir\"\u003ehttps://www.npmjs.com/package/require-dir\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003e\u003ccode\u003eWeb Starter Kit\u003c/code\u003e と同じ設定です。\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003egulpfile.js\u003c/code\u003e には手を入れず、独自のタスクは別ファイルで追加します。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"以下雑感\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BB%A5%E4%B8%8B%E9%9B%91%E6%84%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e以下、雑感\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003eWeb Starter Kit\u003c/code\u003e も良く出来ているが、\u003ccode\u003ePolymer Starter Kit\u003c/code\u003e はより「2015年6月現在のトレンド」に即した作りになっているように感じる。\u003c/li\u003e\n\u003cli\u003eとはいえ \u003ccode\u003eWeb Starter Kit\u003c/code\u003e 方向性が異なるので、\u003ccode\u003eSass\u003c/code\u003e や \u003ccode\u003eCompass\u003c/code\u003e 、\u003ccode\u003eCoffeeScript\u003c/code\u003e や \u003ccode\u003eJSX\u003c/code\u003e をコンパイルするタスクは用意されていない。 \u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003eGoogle Page Speed Insights\u003c/code\u003e タスクも用意されていないし、\u003ccode\u003eWeb Starter Kit\u003c/code\u003e と \u003ccode\u003ePolymer Starter Kit\u003c/code\u003e をいい感じに組み合わせるのが良いかもしれない。\u003c/li\u003e\n\u003cli\u003eなんにせよここまで簡単に \u003ccode\u003ePolymer\u003c/code\u003e でレスポンシブデザイン且つマテリアルデザインなオフライン対応された SPA をサクッと作れるのは感動。\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"resource\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#resource\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eresource\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://webcomponents.org/\"\u003eWebComponents.org\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/zchee/items/5cc8bc318f6407e47a4c\"\u003eGoogle Web Starter Kitのgulpfileを翻訳してみた\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Strict_mode\"\u003eStrict モード\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://www.tejitak.com/blog/?p=848\"\u003evulcanizeでPolymer Web Componentsの初期ロードを速くする\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/naoiwata/items/4c82140a5fb5d7bdb3f8\"\u003eGulp でタスクを並列/直列処理する\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://motemen.hatenablog.com/entry/2015/06/polymer-tools-and-ci\"\u003ePolymer エレメントの開発ツールと CI\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/oh_rusty_nail/items/488d6a0fa1684c809819\"\u003eSeleniumでSafariを動かす\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://qiita.com/KazIgu/items/25fc8406f2534a8dcb2a\"\u003egulpfile.coffeeをtask毎に分割する\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n",
    "body": "## Polymer Starter Kit is 何\n\n`Polymer Starter Kit` は Android I/O と揶揄される Google I/O 2015 で発表された、数少ない Web 領域の発表である `Polymer 1.0` を簡単に試すことが出来る `boilerplate` であり、`scaffold` の要素もあるので `Yeoman` のような存在でもあり、フロントエンドのモダンなワークフローを知る良い教材です。\n\n\u003e Build tools \u0026 boilerplate for creating production-quality web apps using Polymer\nhttps://developers.google.com/web/tools/polymer-starter-kit/\n\nGoogle は 2014年に `Polymer Starter Kit` の前身とも言える `Web Starter Kit` をリリースしていますが、こちらはマルチデバイス対応のサイト、いわゆるレスポンシブウェブデザインのサイトを効率的に作るためのツールに留まっていて、`Polymer Starter Kit` はその発展形と捉えることも出来ます。\n\n\u003e Boilerplate \u0026 Tooling for Multi-Device Development\nhttps://developers.google.com/web/tools/starter-kit/\n\n\n## Polymer Starter Kit に含まれるもの\n\n- [Polymer](http://polymer-project.org/)、[Paperエレメント](https://elements.polymer-project.org/browse?package=paper-elements)、[Ironエレメント](https://elements.polymer-project.org/browse?package=iron-elements)、[Neonエレメント](https://elements.polymer-project.org/browse?package=neon-elements)\n- マテリアルデザインレイアウト\n- [Page.js](https://visionmedia.github.io/page.js/) でルーティングする SPA\n- [Web Component Tester](https://github.com/Polymer/web-component-tester) を使ったユニットテスト\n- [Platinum Service Worker elements](https://elements.polymer-project.org/browse?package=platinum-elements) を使ったオフラインファーストの準備\n - Service Worker を簡単に使うことが出来る\n- [Vulcanize](https://github.com/Polymer/vulcanize)を含むエンドツーエンドのビルドツール\n\n\n## gulpfile.js を読み解く\n\n前置きが長くなりましたが、本題に入ります。\n\n前述の通り、`Polymer Starter Kit` の前身として `Web Starter Kit` があり、同じように `gulpfile.js` がタスクランナーとして用いられています。\n\n`Web Starter Kit` から変わっていない設定もいくつかありますが、`Polymer Starter Kit` ならではの設定もありますので、ひとつひとつ読み解いていきます。\n\nちなみに `Web Starter Kit` の `gulpfile.js` は zchee さんが Qiita に投稿されています。\n[Google Web Starter Kitのgulpfileを翻訳してみた](http://qiita.com/zchee/items/5cc8bc318f6407e47a4c)\n\n\n### use scrict\n\n```\n'use strict';\n```\n\nstrict モードの宣言です。\n\nエラーではないが、しかし怪しい、曖昧な記述がエラーになります。\n潜在的や誤りの早期発見、非 strict モードよりも高速な実行というメリットがあります。\n\n\n### Include Gulp \u0026 Tools We'll Use\n\n```\n// Include Gulp \u0026 Tools We'll Use\nvar gulp = require('gulp');\nvar $ = require('gulp-load-plugins')();\nvar del = require('del');\nvar runSequence = require('run-sequence');\nvar browserSync = require('browser-sync');\nvar reload = browserSync.reload;\nvar merge = require('merge-stream');\nvar path = require('path');\nvar fs = require('fs');\nvar glob = require('glob');\n```\n\n使用する package　の変数宣言です。\n\n`gulp-load-plugins` を使うことで `gulp-*` という命名規則に沿っている package を個別に宣言する必要がなくなります。\n\n```package.json\n{\n  \"private\": true,\n  \"devDependencies\": {\n    \"browser-sync\": \"^2.7.7\",\n    \"del\": \"^1.1.1\",\n    \"glob\": \"^5.0.6\",\n    \"gulp\": \"^3.8.5\",\n    \"gulp-autoprefixer\": \"^2.1.0\",\n    \"gulp-cache\": \"^0.2.8\",\n    \"gulp-changed\": \"^1.0.0\",\n    \"gulp-cssmin\": \"^0.1.7\",\n    \"gulp-flatten\": \"0.0.4\",\n    \"gulp-if\": \"^1.2.1\",\n    \"gulp-imagemin\": \"^2.2.1\",\n    \"gulp-jshint\": \"^1.6.3\",\n    \"gulp-load-plugins\": \"^0.10.0\",\n    \"gulp-minify-html\": \"^1.0.2\",\n    \"gulp-rename\": \"^1.2.0\",\n    \"gulp-replace\": \"^0.5.3\",\n    \"gulp-size\": \"^1.0.0\",\n    \"gulp-uglify\": \"^1.2.0\",\n    \"gulp-uncss\": \"^1.0.1\",\n    \"gulp-useref\": \"^1.1.2\",\n    \"gulp-vulcanize\": \"^6.0.0\",\n    \"jshint-stylish\": \"^2.0.0\",\n    \"merge-stream\": \"^0.1.7\",\n    \"opn\": \"^1.0.0\",\n    \"require-dir\": \"^0.3.0\",\n    \"run-sequence\": \"^1.0.2\",\n    \"vulcanize\": \"\u003e= 1.4.2\",\n    \"web-component-tester\": \"^3.1.3\"\n  },\n  \"engines\": {\n    \"node\": \"\u003e=0.10.0\"\n  }\n}\n```\n\n変数宣言しているものを含め、`Polymer Starter Kit` で使用している package は `package.json` で定義しています。\n\n`package.json` の `devDependencies` に記載されている package は全部で28個と結構な個数を呼んでいます。\n\n```\nvar AUTOPREFIXER_BROWSERS = [\n  'ie \u003e= 10',\n  'ie_mob \u003e= 10',\n  'ff \u003e= 30',\n  'chrome \u003e= 34',\n  'safari \u003e= 7',\n  'opera \u003e= 23',\n  'ios \u003e= 7',\n  'android \u003e= 4.4',\n  'bb \u003e= 10'\n];\n```\n\nPostCSS である Autoprefixer 用の変数宣言です。\n`Web Starter Kit` と同じ設定です。\n\n作成するウェブサイトの要件に合わせて変更すると良いでしょう。\n\n#### Pleeease\n\n完全に私感且つ厳密には同じ用途ではありませんが、CSS だけで複数のツールを併用しなければならない昨今の状況を鑑みると、`Pleeease` がもう少し流行っても良いのではないかと思っています。\n\n\u003e Pleeease\nAll the annoying CSS stuff we don't want to do in 1 tool!\nhttp://pleeease.io/\n\nとはいえ、プリフィックスを付与する一点に絞っている `Autoprefixer` の方が、こういう場面では組み合わせやすいのだろうなーとも思います。\n\n```\nvar styleTask = function (stylesPath, srcs) {\n  return gulp.src(srcs.map(function(src) {\n      return path.join('app', stylesPath, src);\n    }))\n    .pipe($.changed(stylesPath, {extension: '.css'}))\n    .pipe($.autoprefixer(AUTOPREFIXER_BROWSERS))\n    .pipe(gulp.dest('.tmp/' + stylesPath))\n    .pipe($.if('*.css', $.cssmin()))\n    .pipe(gulp.dest('dist/' + stylesPath))\n    .pipe($.size({title: stylesPath}));\n};\n```\n\n`styleTask` という変数宣言です。\n\n`stylesPath` で定義されるディレクトリ以下の `CSS` ファイルを対象として、下記の処理を行ないます。\n\n1. autoprefixer でプリフィックスを付与\n2. `.tmp/' + stylesPath` にプリフィックスが付与された `CSS` ファイルを出力\n3. `.css` ファイルであれば、CSS を縮小化する `cssmin` を実行\n4. `dist/' + stylesPath` に縮小化された `CSS` ファイルを出力\n5. ファイルサイズを表示\n\n\n### Compile and Automatically Prefix Stylesheets\n\n```\n// Compile and Automatically Prefix Stylesheets\ngulp.task('styles', function () {\n  return styleTask('styles', ['**/*.css']);\n});\n\ngulp.task('elements', function () {\n  return styleTask('elements', ['**/*.css']);\n});\n```\n\n`styles` タスクと `elements` タスクを定義し、それぞれ前述の `styleTask` を `.css` ファイルに対して実行します。\n\n\n### Lint JavaScript\n\n```\n// Lint JavaScript\ngulp.task('jshint', function () {\n  return gulp.src([\n      'app/scripts/**/*.js',\n      'app/elements/**/*.js',\n      'app/elements/**/*.html'\n    ])\n    .pipe(reload({stream: true, once: true}))\n    .pipe($.jshint.extract()) // Extract JS from .html files\n    .pipe($.jshint())\n    .pipe($.jshint.reporter('jshint-stylish'))\n    .pipe($.if(!browserSync.active, $.jshint.reporter('fail')));\n});\n```\n\nJavaScript の構文を解析するタスクです。\n\n`browserSync` がアクティブな場合に限り、`app/scripts` 以下、`app/elements` 以下の `.js` ファイルと `app/elements` 以下の `.html` ファイルを対象として、`JSHint` による構文解析を行ない、`jshint-stylish` で CLI に最適化したレポートを表示させます。\n\n\n### Optimize Images\n\n```\n// Optimize Images\ngulp.task('images', function () {\n  return gulp.src('app/images/**/*')\n    .pipe($.cache($.imagemin({\n      progressive: true,\n      interlaced: true\n    })))\n    .pipe(gulp.dest('dist/images'))\n    .pipe($.size({title: 'images'}));\n});\n```\n\n画像を圧縮するタスクです。\n\n`Web Starter Kit` と同じ設定です。\n\n`app/images` 以下の画像ファイルに対して、`imagemin` で画像圧縮を行ない、`dist/images` 以下に出力し、コンソールにファイルサイズを表示します。\n\n\n### Copy All Files At The Root Level (app)\n\n```\n// Copy All Files At The Root Level (app)\ngulp.task('copy', function () {\n  var app = gulp.src([\n    'app/*',\n    '!app/test',\n    '!app/precache.json'\n  ], {\n    dot: true\n  }).pipe(gulp.dest('dist'));\n\n  var bower = gulp.src([\n    'bower_components/**/*'\n  ]).pipe(gulp.dest('dist/bower_components'));\n\n  var elements = gulp.src(['app/elements/**/*.html'])\n    .pipe(gulp.dest('dist/elements'));\n\n  var swBootstrap = gulp.src(['bower_components/platinum-sw/bootstrap/*.js'])\n    .pipe(gulp.dest('dist/elements/bootstrap'));\n\n  var swToolbox = gulp.src(['bower_components/sw-toolbox/*.js'])\n    .pipe(gulp.dest('dist/sw-toolbox'));\n\n  var vulcanized = gulp.src(['app/elements/elements.html'])\n    .pipe($.rename('elements.vulcanized.html'))\n    .pipe(gulp.dest('dist/elements'));\n\n  return merge(app, bower, elements, vulcanized, swBootstrap, swToolbox)\n    .pipe($.size({title: 'copy'}));\n});\n```\n\nコピータスクです。\n\n下記の内容を実行します。\n\n- `app/test` 以下と `app/precache.json` を除く、`app` 以下のすべてのファイルを `dist` にコピー \n- `bower_components` 以下のファイルを `dist/bower_components` にコピー\n- `app/elements` 以下の `.html` ファイルを `dist/elements` にコピー\n- `bower_components/platinum-sw/bootstrap` 以下の `.js` ファイルを `dist/elements/bootstrap` にコピー\n- `bower_components/sw-toolbox` 以下の `.js` ファイルを `dist/sw-toolbox` にコピー\n- `app/elements/elements.html` を `elements.vulcanized.html` にリネームして `dist/elements` にコピー\n- 上記のコピーを実行した後のファイルサイズをコンソールに表示します。\n\n`Web Starter Kit` にも似たような設定がありますが、より細かい要件が設定されています。\n\n\n### Copy Web Fonts To Dist \n\n```\n// Copy Web Fonts To Dist\ngulp.task('fonts', function () {\n  return gulp.src(['app/fonts/**'])\n    .pipe(gulp.dest('dist/fonts'))\n    .pipe($.size({title: 'fonts'}));\n});\n```\n\nWeb フォントをコピーするタスクです。\n\n`Web Starter Kit` と同じ設定です。\n\n`app/fonts` 以下のファイルを `dist/fonts` 以下にコピーし、コンソールにファイルサイズを表示します。\n\n\n### Scan Your HTML For Assets \u0026 Optimize Them\n\n```\n// Scan Your HTML For Assets \u0026 Optimize Them\ngulp.task('html', function () {\n  var assets = $.useref.assets({searchPath: ['.tmp', 'app', 'dist']});\n\n  return gulp.src(['app/**/*.html', '!app/{elements,test}/**/*.html'])\n    // Replace path for vulcanized assets\n    .pipe($.if('*.html', $.replace('elements/elements.html', 'elements/elements.vulcanized.html')))\n    .pipe(assets)\n    // Concatenate And Minify JavaScript\n    .pipe($.if('*.js', $.uglify({preserveComments: 'some'})))\n    // Concatenate And Minify Styles\n    // In case you are still using useref build blocks\n    .pipe($.if('*.css', $.cssmin()))\n    .pipe(assets.restore())\n    .pipe($.useref())\n    // Minify Any HTML\n    .pipe($.if('*.html', $.minifyHtml({\n      quotes: true,\n      empty: true,\n      spare: true\n    })))\n    // Output Files\n    .pipe(gulp.dest('dist'))\n    .pipe($.size({title: 'html'}));\n});\n```\n\n`app` 以下の `.html` 、`app/elements` と `app/test` 以下には無い `.html` を対象として、下記の最適化を実行します。\n\n1. `.html` ファイルであれば、`elements/elements.html` を `elements/elements.vulcanized.html` に置き換える\n2. `.js` ファイルであれば `uglify` で複数の `.js` ファイルを 1つのファイルに結合して圧縮\n3. `.css` ファイルであれば `cssmin` でファイルサイズを縮小\n4. `.html` ファイルであれば `minifyHtml` でファイルサイズを縮小\n5. `dist` ディレクトリに上記のファイルを出力\n6. ファイルサイズを表示\n\n\n### Vulcanize imports\n\n```\n// Vulcanize imports\ngulp.task('vulcanize', function () {\n  var DEST_DIR = 'dist/elements';\n\n  return gulp.src('dist/elements/elements.vulcanized.html')\n    .pipe($.vulcanize({\n      dest: DEST_DIR,\n      strip: true,\n      inlineCss: true,\n      inlineScripts: true\n    }))\n    .pipe(gulp.dest(DEST_DIR))\n    .pipe($.size({title: 'vulcanize'}));\n});\n```\n\nPolymer は便利で素敵なモジュールを import すればするほど、リクエスト数が増えてしまいます。\n\nこのリクエスト数の増加を解消するツールが vulcanize です。\n\n\u003e Vulcanize\nReduce an HTML file and its dependent HTML Imports into one file\nhttps://github.com/Polymer/vulcanize\n\nVulcanize を使うことで、複数のモジュールを結合し、リクエスト数を大幅に減らすことが出来ます。\n\nここではその vulcanize タスクを定義しています。\n\n`dist/elements/elements.vulcanized.html` から import している UI モジュールを結合して、`dist/elements` にファイルを吐き出し、ファイルサイズを表示します。\n\n\n### Generate a list of files that should be precached when serving from 'dist'.\n\n```\n// Generate a list of files that should be precached when serving from 'dist'.\n// The list will be consumed by the \u003cplatinum-sw-cache\u003e element.\ngulp.task('precache', function (callback) {\n  var dir = 'dist';\n\n  glob('{elements,scripts,styles}/**/*.*', {cwd: dir}, function(error, files) {\n    if (error) {\n      callback(error);\n    } else {\n      files.push('index.html', './', 'bower_components/webcomponentsjs/webcomponents-lite.min.js');\n      var filePath = path.join(dir, 'precache.json');\n      fs.writeFile(filePath, JSON.stringify(files), callback);\n    }\n  });\n});\n```\n\n`elements` 、`scripts` 、`styles` 以下のファイルを対象として、`Service Worker` でオフライン対応を実現するコードを生成する `precache` タスクです。\n\n\n### Clean Output Directory \n\n```\n// Clean Output Directory\ngulp.task('clean', del.bind(null, ['.tmp', 'dist']));\n```\n\n`.tmp` と `dist` ディレクトリを削除します。\n\n`Web Starter Kit` と同じ設定です。\n\n\n### Watch Files For Changes \u0026 Reload\n\n```\n// Watch Files For Changes \u0026 Reload\ngulp.task('serve', ['styles', 'elements', 'images'], function () {\n  browserSync({\n    notify: false,\n    snippetOptions: {\n      rule: {\n        match: '\u003cspan id=\"browser-sync-binding\"\u003e\u003c/span\u003e',\n        fn: function (snippet) {\n          return snippet;\n        }\n      }\n    },\n    // Run as an https by uncommenting 'https: true'\n    // Note: this uses an unsigned certificate which on first access\n    //       will present a certificate warning in the browser.\n    // https: true,\n    server: {\n      baseDir: ['.tmp', 'app'],\n      routes: {\n        '/bower_components': 'bower_components'\n      }\n    }\n  });\n\n  gulp.watch(['app/**/*.html'], reload);\n  gulp.watch(['app/styles/**/*.css'], ['styles', reload]);\n  gulp.watch(['app/elements/**/*.css'], ['elements', reload]);\n  gulp.watch(['app/{scripts,elements}/**/*.js'], ['jshint']);\n  gulp.watch(['app/images/**/*'], reload);\n});\n```\n\n`browserSync` で `.tmp` と `app` ディレクトリをルートとしたローカルサーバを起動し、`styles` タスク、`elements` タスク、`images` タスクを並列で実行します。\n\nまた、ファイルの変更を監視し、指定のファイルに変更があれば以下の内容を実行します。\n\n- `app` 以下の `.html` ファイルに変更があればブラウザをリロード\n- `app/styles` 以下の `.css` ファイルに変更があれば `styles` タスクを実行してブラウザをリロード\n- `app/elements` 以下の `.css` ファイルに変更があれば `elements ` タスクを実行してブラウザをリロード\n- `app/scripts` 、`app/elements` 以下の `.js` ファイルに変更があれば `jshint ` タスクを実行\n- `app/images` 以下のファイルに変更があればブラウザをリロード\n\n`Web Starter Kit` にも近しい設定がありますが、より細かい要件が設定されています。\n\n\n### Build and serve the output from the dist build\n\n```\n// Build and serve the output from the dist build\ngulp.task('serve:dist', ['default'], function () {\n  browserSync({\n    notify: false,\n    snippetOptions: {\n      rule: {\n        match: '\u003cspan id=\"browser-sync-binding\"\u003e\u003c/span\u003e',\n        fn: function (snippet) {\n          return snippet;\n        }\n      }\n    },\n    // Run as an https by uncommenting 'https: true'\n    // Note: this uses an unsigned certificate which on first access\n    //       will present a certificate warning in the browser.\n    // https: true,\n    server: 'dist'\n  });\n});\n```\n\n本番環境用の `dist` ディレクトリをルートとして `browserSync` でローカルサーバを起動します。\n\n`snippetOptions` が指定されている以外は `Web Starter Kit` と同じ設定です。\n\n\n### Build Production Files, the Default Task\n\n```\n// Build Production Files, the Default Task\ngulp.task('default', ['clean'], function (cb) {\n  runSequence(\n    ['copy', 'styles'],\n    'elements',\n    ['jshint', 'images', 'fonts', 'html'],\n    'vulcanize', 'precache',\n    cb);\n});\n```\n\n`gulp` のデフォルトタスクです。\n\n`gulp` はその特性上、タスクが並列実行され、実行順序を担保出来ないので、`runSequence` を使い、下記の順序でタスクを処理させます。\n\n\u003e runSequence\nRuns a sequence of gulp tasks in the specified order. This function is designed to solve the situation where you have defined run-order, but choose not to or cannot use dependencies.\nhttps://github.com/OverZealous/run-sequence\n\n1. `clean` タスクを実行\n2. `runSequence` で `copy`、`styles` タスクのみを実行\n3. `elements` タスクを実行\n4. `runSequence` で `jshint`、`images`、`fonts`、`html` タスクのみを実行\n5. `vulcanize`、`precache` タスクを実行\n\nなお、`run-sequence` は `orchestrator` が `non-dependent ordered tasks` を実装するまでの場つなぎであると明言されています。\n\n\u003e Please Note\nThis is intended to be a temporary solution until orchestrator is updated to support non-dependent ordered tasks.\nhttps://github.com/OverZealous/run-sequence\n\n`Polymer Starter Kit` ならではの `elements` タスク、`vulcanize` タスク、`precache` タスクが設定されていることが `Web Starter Kit` との違いです。\n\n\n### Load tasks for web-component-tester\n\n```\n// Load tasks for web-component-tester\n// Adds tasks for `gulp test:local` and `gulp test:remote`\ntry { require('web-component-tester').gulp.init(gulp); } catch (err) {}\n```\n\n`gulp test:local` と `gulp test:remote` タスクを定義し、`web-component-tester` を使ったユニットテストを実行するタスクです。\n\n\u003e web-component-tester\n`web-component-tester` makes testing your web components a breeze!\nhttps://github.com/Polymer/web-component-tester\n\n`gulp test:local` を叩くと `wct:local` が呼ばれ、標準設定では `Selenium` で `chrome 41`、`chrome 43`、`firefox 38`、`safari 8.0.5` のブラウザが立ち上がり、`app/test` 以下を対象としたテストが実行されます。\n\n下記のエラーが表示される場合は、指定の URI から `selenium-safari-driver` をダウンロード、インストールしてください。\n\n\u003e Test run ended in failure: Until Selenium's SafariDriver supports Safari 6.2+, 7.1+, \u0026 8.0+, you must\nmanually install it. Follow the steps at:\nhttps://code.google.com/p/selenium/issues/detail?id=7933#c23\n\n…と記載されていますが、自分の環境では `selenium-safari-driver` のインストールがうまくいきません……。\n\n\n### Load custom tasks from the `tasks` directory\n\n```\n// Load custom tasks from the `tasks` directory\ntry { require('require-dir')('tasks'); } catch (err) {}\n```\n\n`require-dir` を使って `tasks` ディレクトリに定義するタスクを読み込みます。\n\n\u003e require-dir \nNode helper to require() directories. The directory's files are examined, and each one that can be require()'d is require()'d and returned as part of a hash from that file's basename to its exported contents.\nhttps://www.npmjs.com/package/require-dir\n\n`Web Starter Kit` と同じ設定です。\n\n`gulpfile.js` には手を入れず、独自のタスクは別ファイルで追加します。\n\n## 以下、雑感\n\n- `Web Starter Kit` も良く出来ているが、`Polymer Starter Kit` はより「2015年6月現在のトレンド」に即した作りになっているように感じる。\n- とはいえ `Web Starter Kit` 方向性が異なるので、`Sass` や `Compass` 、`CoffeeScript` や `JSX` をコンパイルするタスクは用意されていない。 \n- `Google Page Speed Insights` タスクも用意されていないし、`Web Starter Kit` と `Polymer Starter Kit` をいい感じに組み合わせるのが良いかもしれない。\n- なんにせよここまで簡単に `Polymer` でレスポンシブデザイン且つマテリアルデザインなオフライン対応された SPA をサクッと作れるのは感動。\n\n\n## resource\n\n- [WebComponents.org](http://webcomponents.org/)\n- [Google Web Starter Kitのgulpfileを翻訳してみた](http://qiita.com/zchee/items/5cc8bc318f6407e47a4c)\n- [Strict モード](https://developer.mozilla.org/ja/docs/Web/JavaScript/Strict_mode)\n- [vulcanizeでPolymer Web Componentsの初期ロードを速くする](http://www.tejitak.com/blog/?p=848)\n- [Gulp でタスクを並列/直列処理する](http://qiita.com/naoiwata/items/4c82140a5fb5d7bdb3f8)\n- [Polymer エレメントの開発ツールと CI](http://motemen.hatenablog.com/entry/2015/06/polymer-tools-and-ci)\n- [SeleniumでSafariを動かす](http://qiita.com/oh_rusty_nail/items/488d6a0fa1684c809819)\n- [gulpfile.coffeeをtask毎に分割する](http://qiita.com/KazIgu/items/25fc8406f2534a8dcb2a)\n",
    "coediting": false,
    "created_at": "2015-06-16T20:44:02+09:00",
    "id": "6a1e23f2e442f9ed650a",
    "private": false,
    "tags": [
      {
        "name": "gulp",
        "versions": []
      },
      {
        "name": "WebComponents",
        "versions": []
      },
      {
        "name": "Polymer",
        "versions": []
      },
      {
        "name": "SinglePageApplication",
        "versions": []
      }
    ],
    "title": "Polymer Starter Kit の gulpfile.js を読み解く",
    "updated_at": "2015-06-16T20:44:02+09:00",
    "url": "http://qiita.com/ikkou/items/6a1e23f2e442f9ed650a",
    "user": {
      "description": "フロントエンドが好きです。",
      "facebook_id": "morohoshi.ikkou",
      "followees_count": 7,
      "followers_count": 17,
      "github_login_name": "ikkou",
      "id": "ikkou",
      "items_count": 6,
      "linkedin_id": "",
      "location": "Tokyo, JAPAN",
      "name": "IKKOU Morohoshi",
      "organization": "Drecom Co.,Ltd.",
      "permanent_id": 9946,
      "profile_image_url": "https://secure.gravatar.com/avatar/7e6c0c4304cec87abcd48d7c31159f47?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",
      "twitter_screen_name": "ikkou",
      "website_url": ""
    }
  },
  {
    "rendered_body": "\n\u003ch1\u003e\n\u003cspan id=\"サンプル\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eサンプル\u003c/h1\u003e\n\n\u003cp\u003e$\\frac{dy}{dx} = xy$ （初期条件: x=0でy=1）\u003c/p\u003e\n\n\u003cp\u003eの解をオイラー法で求める。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"オイラー法の概要\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%AA%E3%82%A4%E3%83%A9%E3%83%BC%E6%B3%95%E3%81%AE%E6%A6%82%E8%A6%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eオイラー法の概要\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"math\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\\frac{dy}{dx} = xy, y = f(x)\\ とする。 \n\\\\\n\\frac{dy}{dx} = \\frac{f(x+Δx)-f(x)}{Δx}　…（☆）\n\\\\\n= xf(x)\n\\\\\n⇔f(x+Δx) = f(x)(1+xΔx)\\ …①\n\\\\\n初期条件 x=0, y=1より\n\\\\\nf(Δx) = 1\\ …②\n\\\\\nx = Δx のとき①に代入すると\n\\\\\nf(2Δx) = f(Δx)\\{1+(Δx)^2\\}\n\\\\\n= {1+(Δx)^2}\\ (∵②)\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eという具合に、1点が分かれば次の点が分かる。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"正確な数値を求める\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%AD%A3%E7%A2%BA%E3%81%AA%E6%95%B0%E5%80%A4%E3%82%92%E6%B1%82%E3%82%81%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e正確な数値を求める\u003c/h2\u003e\n\n\u003cp\u003eオイラー法で計算した値と比較するために正確な数値を求める（手計算）。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"math\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\\frac{dy}{dx} = xy\n\\\\\n⇔\\frac{1}{y}dy = xdx\n\\\\\n⇔\\int \\frac{1}{y}dy = \\int xdx\n\\\\\n⇔logy = \\frac{1}{2}x^2 + C\n\\\\\n⇔y = exp(\\frac{1}{2}x^2 + C)\n\\\\\n初期条件より\n\\\\\n1 = exp(C)\n\\\\\n⇔1 = e^C ⇔ C = 0\n\\\\\nゆえに\n\\\\\ny = exp(\\frac{1}{2}x^2)\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"プログラムで使うf2を求める\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%A7%E4%BD%BF%E3%81%86f2%E3%82%92%E6%B1%82%E3%82%81%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eプログラムで使うf2を求める\u003c/h2\u003e\n\n\u003cp\u003e式①のこと\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"プログラム\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eプログラム\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003esample.c\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#include \u0026lt;math.h\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edx\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ef1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edx\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.01\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ef2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003edx\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ef1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eexp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"x = %f 数値解 -\u0026gt; f1 = %f 正確な値 -\u0026gt; f = %f \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003ef1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e実行結果\u003cbr\u003e\n\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/44742/70283af2-b847-6be9-244a-ca6b28c3134f.png\" alt=\"sample_result.png\"\u003e\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"問題\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%95%8F%E9%A1%8C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e問題\u003c/h1\u003e\n\n\u003cp\u003e$\\frac{dy}{dx} = -3xy^2$ （初期条件: x=0でy=2）\u003c/p\u003e\n\n\u003cp\u003eの数値解をオイラー法で求め、正確な値と比較する。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"正確な値を求める\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%AD%A3%E7%A2%BA%E3%81%AA%E5%80%A4%E3%82%92%E6%B1%82%E3%82%81%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e正確な値を求める\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"math\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\\int \\frac{1}{y^2}dy = \\int -3xdx\n\\\\\n⇔-\\frac{1}{y} = -\\frac{3}{2}x^2 + C\n\\\\\n初期条件より\n\\\\\n-\\frac{1}{2} = 0 + C\n\\\\\nよって\n\\\\\n-\\frac{1}{y} = -\\frac{3}{2}x^2 - \\frac{1}{2}\n\\\\\n⇔ \\frac{1}{y} = \\frac{3x^2+1}{2}\n\\\\\n⇔ y = \\frac{2}{3x^2+1}\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"f2を求める\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#f2%E3%82%92%E6%B1%82%E3%82%81%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ef2を求める\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"math\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\\frac{dy}{dx} = \\frac{f(x+Δx)-f(x)}{Δx}　…（☆）\n\\\\\n= -3x{f(x)}^2\n\\\\\n⇔ f(x+Δx) = Δx(-3x{f(x)}^2)+f(x)\n\\\\\n⇔ f(x) -3xΔx{f(x)}^2\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"プログラム-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eプログラム\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"C\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eproblem.c\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"cp\"\u003e#include \u0026lt;stdio.h\u0026gt;\u003c/span\u003e\n\u003cspan class=\"cp\"\u003e#include \u0026lt;math.h\u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kt\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003edx\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"n\"\u003ef1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"n\"\u003edx\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.01\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edx\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003ef2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef1\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003edx\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003epow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003epow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003eprintf\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\"x = %f 数値解 -\u0026gt; f1 = %f 正確な値 -\u0026gt; f = %f \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\"\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n        \u003cspan class=\"n\"\u003ef1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ef2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cp\u003e実行結果\u003cbr\u003e\n\u003cimg src=\"https://qiita-image-store.s3.amazonaws.com/0/44742/bbcfe41f-72ce-32cf-661c-5b2d762159e7.png\" alt=\"problem_result.png\"\u003e\u003c/p\u003e\n",
    "body": "#サンプル\n$\\frac{dy}{dx} = xy$ （初期条件: x=0でy=1）\n\nの解をオイラー法で求める。\n\n##オイラー法の概要\n\n```math\n\\frac{dy}{dx} = xy, y = f(x)\\ とする。 \n\\\\\n\\frac{dy}{dx} = \\frac{f(x+Δx)-f(x)}{Δx}　…（☆）\n\\\\\n= xf(x)\n\\\\\n⇔f(x+Δx) = f(x)(1+xΔx)\\ …①\n\\\\\n初期条件 x=0, y=1より\n\\\\\nf(Δx) = 1\\ …②\n\\\\\nx = Δx のとき①に代入すると\n\\\\\nf(2Δx) = f(Δx)\\{1+(Δx)^2\\}\n\\\\\n= {1+(Δx)^2}\\ (∵②)\n```\nという具合に、1点が分かれば次の点が分かる。\n\n##正確な数値を求める\n\nオイラー法で計算した値と比較するために正確な数値を求める（手計算）。\n\n```math\n\\frac{dy}{dx} = xy\n\\\\\n⇔\\frac{1}{y}dy = xdx\n\\\\\n⇔\\int \\frac{1}{y}dy = \\int xdx\n\\\\\n⇔logy = \\frac{1}{2}x^2 + C\n\\\\\n⇔y = exp(\\frac{1}{2}x^2 + C)\n\\\\\n初期条件より\n\\\\\n1 = exp(C)\n\\\\\n⇔1 = e^C ⇔ C = 0\n\\\\\nゆえに\n\\\\\ny = exp(\\frac{1}{2}x^2)\n```\n\n##プログラムで使うf2を求める\n\n式①のこと\n\n##プログラム\n\n```C:sample.c\n\n#include \u003cstdio.h\u003e\n#include \u003cmath.h\u003e\n\nint main(void) {\n\tdouble f, f1, f2, dx, x;\n\n\tf1 = 1;\n\tdx = 0.01;\n\n\tfor (int i=0; i\u003c=100; ++i) {\n\t\tx = i*dx;\n        f2 = f1 + dx*x*f1;\n\n        f = exp(x*x/2);\n\n        printf(\"x = %f 数値解 -\u003e f1 = %f 正確な値 -\u003e f = %f \\n\", x, f1, f);\n\n        f1 = f2;\n\t}\n}\n\n```\n\n実行結果\n![sample_result.png](https://qiita-image-store.s3.amazonaws.com/0/44742/70283af2-b847-6be9-244a-ca6b28c3134f.png)\n\n#問題\n\n$\\frac{dy}{dx} = -3xy^2$ （初期条件: x=0でy=2）\n\nの数値解をオイラー法で求め、正確な値と比較する。\n\n##正確な値を求める\n\n```math\n\\int \\frac{1}{y^2}dy = \\int -3xdx\n\\\\\n⇔-\\frac{1}{y} = -\\frac{3}{2}x^2 + C\n\\\\\n初期条件より\n\\\\\n-\\frac{1}{2} = 0 + C\n\\\\\nよって\n\\\\\n-\\frac{1}{y} = -\\frac{3}{2}x^2 - \\frac{1}{2}\n\\\\\n⇔ \\frac{1}{y} = \\frac{3x^2+1}{2}\n\\\\\n⇔ y = \\frac{2}{3x^2+1}\n\n```\n\n##f2を求める\n\n```math\n\\frac{dy}{dx} = \\frac{f(x+Δx)-f(x)}{Δx}　…（☆）\n\\\\\n= -3x{f(x)}^2\n\\\\\n⇔ f(x+Δx) = Δx(-3x{f(x)}^2)+f(x)\n\\\\\n⇔ f(x) -3xΔx{f(x)}^2\n```\n\n##プログラム\n```C:problem.c\n#include \u003cstdio.h\u003e\n#include \u003cmath.h\u003e\n\nint main(void) {\n\tdouble f, f1, f2, dx, x;\n\n\tf1 = 2;\n\tdx = 0.01;\n\n\tfor (int i=0; i\u003c=100; ++i) {\n\t\tx = i*dx;\n\n        f2 = f1 - 3*x*dx*pow(f1, 2);\n\n        f = 2./(3*pow(x, 2)+1);\n\n        printf(\"x = %f 数値解 -\u003e f1 = %f 正確な値 -\u003e f = %f \\n\", x, f1, f);\n\n        f1 = f2;\n\t}\n}\n```\n\n実行結果\n![problem_result.png](https://qiita-image-store.s3.amazonaws.com/0/44742/bbcfe41f-72ce-32cf-661c-5b2d762159e7.png)\n",
    "coediting": false,
    "created_at": "2015-06-16T20:38:14+09:00",
    "id": "6a0b2eb4730fa1f2c292",
    "private": false,
    "tags": [
      {
        "name": "C",
        "versions": []
      },
      {
        "name": "数値計算",
        "versions": []
      },
      {
        "name": "数学",
        "versions": []
      }
    ],
    "title": "[C言語] 1階常微分方程式の解法（オイラー法）",
    "updated_at": "2015-06-16T21:12:47+09:00",
    "url": "http://qiita.com/watarumohawk/items/6a0b2eb4730fa1f2c292",
    "user": {
      "description": "Front-end, Web engineering、物理、C言語での数値計算。",
      "facebook_id": "",
      "followees_count": 5,
      "followers_count": 7,
      "github_login_name": "watarumohawk",
      "id": "watarumohawk",
      "items_count": 12,
      "linkedin_id": "watarusekiguchi",
      "location": "",
      "name": "Wataru Sekiguchi",
      "organization": "",
      "permanent_id": 44742,
      "profile_image_url": "https://avatars.githubusercontent.com/u/4612196?",
      "twitter_screen_name": "watarumohawk",
      "website_url": "http://watarusekiguchi.com"
    }
  },
  {
    "rendered_body": "\u003cp\u003eelastic beanstalkを使ってダウンタイムなしの更新を実現するときはswap urlを使うのが一般的なようです。\u003cbr\u003e\n\u003cem\u003e参考: \u003ca href=\"http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.CNAMESwap.html\"\u003eDeploying a new Application Version with Zero Downtime\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eしかし、\u003ca href=\"http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb3-deploy.html\"\u003eeb deployコマンドはurlではなく環境名を指定します\u003c/a\u003e。\u003c/p\u003e\n\n\u003cp\u003eswapをすると当然、特定のurlに関連付けられた環境が入れ替わります。\u003cbr\u003e\n人間の関心はelastic beanstalkの環境よりもurlのほうに向いているので（本番、staging用のurlなど）、更新したいurlがどちらの環境に向いているかelastic beanstalkコンソールなどから確認する手間がありました。\u003c/p\u003e\n\n\u003cp\u003eそこで、\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eaws elasticbeanstalk describe-environments --application-name $APP_NAME --environment-names $ENV1 $ENV2 | python -c  \"exec(\\\"import json,sys\\\\nobj=json.load(sys.stdin)\\\\nfor env in obj['Environments']:\\\\n if env['CNAME'] == '$URL': print env['EnvironmentName']\\\")\"\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eeb deploy $(上記のやつ)\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eという感じにしました。\u003c/p\u003e\n",
    "body": "elastic beanstalkを使ってダウンタイムなしの更新を実現するときはswap urlを使うのが一般的なようです。\n*参考: [Deploying a new Application Version with Zero Downtime](http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.CNAMESwap.html)*\n\nしかし、[eb deployコマンドはurlではなく環境名を指定します](http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb3-deploy.html)。\n\nswapをすると当然、特定のurlに関連付けられた環境が入れ替わります。\n人間の関心はelastic beanstalkの環境よりもurlのほうに向いているので（本番、staging用のurlなど）、更新したいurlがどちらの環境に向いているかelastic beanstalkコンソールなどから確認する手間がありました。\n\nそこで、\n\n```\naws elasticbeanstalk describe-environments --application-name $APP_NAME --environment-names $ENV1 $ENV2 | python -c  \"exec(\\\"import json,sys\\\\nobj=json.load(sys.stdin)\\\\nfor env in obj['Environments']:\\\\n if env['CNAME'] == '$URL': print env['EnvironmentName']\\\")\"\n\n```\n\n```\neb deploy $(上記のやつ)\n```\n\nという感じにしました。\n",
    "coediting": false,
    "created_at": "2015-06-16T20:38:12+09:00",
    "id": "cd0c579e4b65b645e9fb",
    "private": false,
    "tags": [
      {
        "name": "ElasticBeanstalk",
        "versions": []
      }
    ],
    "title": "elastic beanstalk環境をurlから解決する",
    "updated_at": "2015-06-16T20:38:12+09:00",
    "url": "http://qiita.com/knzw_ats/items/cd0c579e4b65b645e9fb",
    "user": {
      "description": null,
      "facebook_id": null,
      "followees_count": 0,
      "followers_count": 3,
      "github_login_name": "cloudstudy-dev",
      "id": "knzw_ats",
      "items_count": 11,
      "linkedin_id": null,
      "location": null,
      "name": "",
      "organization": null,
      "permanent_id": 29484,
      "profile_image_url": "https://pbs.twimg.com/profile_images/1316100694/profile_normal.png",
      "twitter_screen_name": "knzw_ats",
      "website_url": null
    }
  },
  {
    "rendered_body": "\n\u003ch1\u003e\n\u003cspan id=\"inout\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#inout\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003einout\u003c/h1\u003e\n\n\u003cp\u003eSwiftにはポインタという概念がありませんが、inoutを使うことで、関数の引数をポインタとして受け取り値を直接いじるCのような書き方ができます。\u003cbr\u003e\ninoutを使用した関数の呼び出し方は、普通の関数と違って以下のように実引数の変数の前に\u0026amp;をつけて呼ぶことになります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esquare\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003einout\u003c/span\u003e \u003cspan class=\"nl\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003einout\u003c/span\u003e \u003cspan class=\"nl\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/* 以下呼び出し側 */\u003c/span\u003e\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\n\u003cspan class=\"n\"\u003esquare\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// x=4, y=16になる\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eしかし、Swiftはタプルを使うことによって、返り値を複数指定できるため、inoutを使わなくても複数の値を返す関数を定義することができます（引数に構造体を指定することでも、複数の値を返すことができます）。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"nf\"\u003esquare\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/* 以下呼び出し側 */\u003c/span\u003e\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003esquare\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// res.0=4, res.1=16になる\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"外部引数名\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%A4%96%E9%83%A8%E5%BC%95%E6%95%B0%E5%90%8D\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e外部引数名\u003c/h1\u003e\n\n\u003cp\u003eSwiftでは、関数を呼び出す際に引数の意味が伝わるよう、引数にキーワード（外部引数名）をつけることができます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e// 以下のように外部引数名（widthとheight）をつけることができる。\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// wとhを内部引数名と呼ぶ。\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewidth\u003c/span\u003e \u003cspan class=\"nl\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"nl\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ew\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/* 以下呼び出し側 */\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// 呼び出し側の実引数が何を表しているのかが明確になる。\u003c/span\u003e\n\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eまた、以下のように仮引数の前に\u003ccode\u003e#\u003c/code\u003eを書くことで、内部引数名と外部引数名を同じにすることもできます。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"err\"\u003e#\u003c/span\u003e\u003cspan class=\"nl\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"err\"\u003e#\u003c/span\u003e\u003cspan class=\"nl\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/* 以下呼び出し側 */\u003c/span\u003e\n\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"引数に用いるvar\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%BC%95%E6%95%B0%E3%81%AB%E7%94%A8%E3%81%84%E3%82%8Bvar\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e引数に用いるvar\u003c/h1\u003e\n\n\u003cp\u003eSwiftでは、基本的に関数の引数の値を関数内で変更することができません。\u003cbr\u003e\nしかし、仮引数の前に\u003ccode\u003evar\u003c/code\u003eを書くことで変更可能になります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"nl\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"nl\"\u003eheight\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e// 引数の値を変更できる。\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"cm\"\u003e/* 以下呼び出し側 */\u003c/span\u003e\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ew\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\n\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003eres\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e// res=42\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// w, hはそれぞれ5, 6のまま\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e同様に\u003ccode\u003elet\u003c/code\u003eを書くこともできますが、これは何も書かないときと同じなので、変更しないことを明示的に示したいときに使います。\u003c/p\u003e\n\n\u003ch1\u003e\n\u003cspan id=\"オーバーロード\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%AA%E3%83%BC%E3%83%90%E3%83%BC%E3%83%AD%E3%83%BC%E3%83%89\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eオーバーロード\u003c/h1\u003e\n\n\u003cp\u003eSwiftでは、以下のいずれかが異なれば、同名の関数を定義することができます。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e引数の個数\u003c/li\u003e\n\u003cli\u003e引数の型\u003c/li\u003e\n\u003cli\u003e返り値の型\u003c/li\u003e\n\u003cli\u003e外部引数名\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eしたがって、以下のすべてを定義してもコンパイルエラーになりません。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// 引数の個数が異なる\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// 引数の型が異なる\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eDouble\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// 返り値の型が異なる\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eDouble\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// 外部引数名が異なる\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewidth\u003c/span\u003e \u003cspan class=\"nl\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eheight\u003c/span\u003e \u003cspan class=\"nl\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// 外部引数名が異なる\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunc\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehoge\u003c/span\u003e \u003cspan class=\"nl\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e \u003cspan class=\"nl\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eただし、呼び出し側で引数や返り値の型を意識する必要があります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"swift\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003ew\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\n\u003cspan class=\"k\"\u003evar\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// let res = area(w, h) コンパイルエラー\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// area関数にはIntを返すものとDoubleを返すものとがあるため、\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e// resの型がわからないとどの関数を呼べばいいかわからない\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e// 型をちゃんと指定する\u003c/span\u003e\n\u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"nl\"\u003eres\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eInt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003earea\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n",
    "body": "#inout\nSwiftにはポインタという概念がありませんが、inoutを使うことで、関数の引数をポインタとして受け取り値を直接いじるCのような書き方ができます。\ninoutを使用した関数の呼び出し方は、普通の関数と違って以下のように実引数の変数の前に\u0026をつけて呼ぶことになります。\n\n```swift\nfunc square(inout x:Int, inout y:Int) {\n    x = x * x\n    y = y * y\n}\n\n/* 以下呼び出し側 */\nvar x = 2\nvar y = 4\nsquare(\u0026x, \u0026y) // x=4, y=16になる\n```\n\nしかし、Swiftはタプルを使うことによって、返り値を複数指定できるため、inoutを使わなくても複数の値を返す関数を定義することができます（引数に構造体を指定することでも、複数の値を返すことができます）。\n\n```swift\nfunc square(x:Int, y:Int) -\u003e (Int, Int) {\n    return (x * x, y * y)\n}\n\n/* 以下呼び出し側 */\nvar x = 2\nvar y = 4\nvar res = square(x, y) // res.0=4, res.1=16になる\n```\n\n#外部引数名\nSwiftでは、関数を呼び出す際に引数の意味が伝わるよう、引数にキーワード（外部引数名）をつけることができます。\n\n```swift\n// 以下のように外部引数名（widthとheight）をつけることができる。\n// wとhを内部引数名と呼ぶ。\nfunc area(width w:Int, height h:Int) -\u003e Int {\n    return w * h\n}\n\n/* 以下呼び出し側 */\n// 呼び出し側の実引数が何を表しているのかが明確になる。\nlet res = area(width: 5, height: 6)\n```\n\nまた、以下のように仮引数の前に`#`を書くことで、内部引数名と外部引数名を同じにすることもできます。\n\n```swift\nfunc area(#width:Int, #height:Int) -\u003e Int {\n    return width * height\n}\n\n/* 以下呼び出し側 */\nlet res = area(width: 5, height: 6)\n```\n\n#引数に用いるvar\nSwiftでは、基本的に関数の引数の値を関数内で変更することができません。\nしかし、仮引数の前に`var`を書くことで変更可能になります。\n\n```swift\nfunc area(var width:Int, var height:Int) -\u003e Int {\n    // 引数の値を変更できる。\n    width += 1\n    height += 1\n    \n    return width * height\n}\n\n/* 以下呼び出し側 */\nvar w = 5\nvar h = 6\nlet res = area(w, h) // res=42\n// w, hはそれぞれ5, 6のまま\n```\n\n同様に`let`を書くこともできますが、これは何も書かないときと同じなので、変更しないことを明示的に示したいときに使います。\n\n#オーバーロード\nSwiftでは、以下のいずれかが異なれば、同名の関数を定義することができます。\n\n- 引数の個数\n- 引数の型\n- 返り値の型\n- 外部引数名\n\nしたがって、以下のすべてを定義してもコンパイルエラーになりません。\n\n```swift\nfunc area(w:Int, h:Int) -\u003e Int {\n    ...\n}\n\n// 引数の個数が異なる\nfunc area(a:Int, b:Int, h:Int) -\u003e Int {\n    ...\n}\n\n// 引数の型が異なる\nfunc area(w:Double, h:Double) -\u003e Int {\n    ...\n}\n\n// 返り値の型が異なる\nfunc area(w:Int, h:Int) -\u003e Double {\n    ...\n}\n\n// 外部引数名が異なる\nfunc area(width w:Int, height h:Int) -\u003e Int {\n    ...\n}\n\n// 外部引数名が異なる\nfunc area(hoge w:Int, foo h:Int) -\u003e Int {\n    ...\n}\n```\n\nただし、呼び出し側で引数や返り値の型を意識する必要があります。\n\n```swift\nvar w = 5\nvar h = 6\n// let res = area(w, h) コンパイルエラー\n// area関数にはIntを返すものとDoubleを返すものとがあるため、\n// resの型がわからないとどの関数を呼べばいいかわからない\n\n// 型をちゃんと指定する\nlet res : Int = area(w, h)\n```\n",
    "coediting": false,
    "created_at": "2015-06-16T20:35:46+09:00",
    "id": "e7f835644b21a0a5fad7",
    "private": false,
    "tags": [
      {
        "name": "Swift",
        "versions": []
      }
    ],
    "title": "Swiftにおける関数定義の基本",
    "updated_at": "2015-06-16T20:35:46+09:00",
    "url": "http://qiita.com/kitoko552/items/e7f835644b21a0a5fad7",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 0,
      "followers_count": 0,
      "github_login_name": "kitoko552",
      "id": "kitoko552",
      "items_count": 4,
      "linkedin_id": "",
      "location": "Tokyo, Japan",
      "name": "Kosuke Kito",
      "organization": "",
      "permanent_id": 42132,
      "profile_image_url": "https://avatars.githubusercontent.com/u/8244046?v=3",
      "twitter_screen_name": "kitoko552",
      "website_url": ""
    }
  },
  {
    "rendered_body": "\u003cp\u003e\u003ccode\u003ebe rake db:migrate RAILS_ENV=development\u003c/code\u003eが以下エラーを吐いてこけるので原因を調査。  \u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eActiveRecord::StatementInvalid: Mysql2::Error: Table 'polaris_db2.leveled_experiences' doesn't exist: SHOW FULL FIELDS FROM `leveled_experiences`\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"workaround\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#workaround\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eworkaround\u003c/h2\u003e\n\n\u003cp\u003e取り敢えずdevelopmentからfactory_girl_railsのgemを外すだけでdb:migrateは通るようになった\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"根本原因は\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%A0%B9%E6%9C%AC%E5%8E%9F%E5%9B%A0%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e根本原因は？\u003c/h2\u003e\n\n\u003cp\u003eこの\u003ca href=\"https://github.com/thoughtbot/factory_girl_rails/issues/20\"\u003e回答\u003c/a\u003eを引用すると、{}でくくり遅延評価属性を利用しないといけないものがあったみたい、もう少し基礎知識つけないとなぁ\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"lang\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eFactory.define :hat do |h|\n  h.person { Factory(:person) }\nend\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e参考\u003cbr\u003e\n\u003ca href=\"http://qiita.com/muran001/items/436fd07eba1db18ed622#2-5\"\u003eRSpecにおけるFactoryGirlの使い方まとめ\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://qiita.com/k_yagisan9/items/ec0c26abbe82cf656ed2\"\u003eRailsのrake db:xxxコマンドでtable doesn't existのエラーが出る際の対処\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"http://stackoverflow.com/questions/12423273/factorygirl-screws-up-rake-dbmigrate-process\"\u003eFactoryGirl screws up rake db:migrate process\u003c/a\u003e\u003c/p\u003e\n",
    "body": "`be rake db:migrate RAILS_ENV=development`が以下エラーを吐いてこけるので原因を調査。  \n\n```\nActiveRecord::StatementInvalid: Mysql2::Error: Table 'polaris_db2.leveled_experiences' doesn't exist: SHOW FULL FIELDS FROM `leveled_experiences`\n```\n\n## workaround\n取り敢えずdevelopmentからfactory_girl_railsのgemを外すだけでdb:migrateは通るようになった\n\n## 根本原因は？\n\nこの[回答](https://github.com/thoughtbot/factory_girl_rails/issues/20)を引用すると、{}でくくり遅延評価属性を利用しないといけないものがあったみたい、もう少し基礎知識つけないとなぁ\n\n```lang:\nFactory.define :hat do |h|\n  h.person { Factory(:person) }\nend\n```\n\n参考\n[RSpecにおけるFactoryGirlの使い方まとめ](http://qiita.com/muran001/items/436fd07eba1db18ed622#2-5)\n\n[Railsのrake db:xxxコマンドでtable doesn't existのエラーが出る際の対処](http://qiita.com/k_yagisan9/items/ec0c26abbe82cf656ed2)\n\n[FactoryGirl screws up rake db:migrate process](http://stackoverflow.com/questions/12423273/factorygirl-screws-up-rake-dbmigrate-process)\n",
    "coediting": false,
    "created_at": "2015-06-16T20:23:12+09:00",
    "id": "e54eaee3a89c8879c044",
    "private": false,
    "tags": [
      {
        "name": "Rails",
        "versions": [
          "4.1.8"
        ]
      },
      {
        "name": "FactoryGirl",
        "versions": []
      }
    ],
    "title": "FactoryGirl周りでrake db:migrateがこける場合",
    "updated_at": "2015-06-16T20:23:12+09:00",
    "url": "http://qiita.com/tikidunponpon/items/e54eaee3a89c8879c044",
    "user": {
      "description": "",
      "facebook_id": "",
      "followees_count": 9,
      "followers_count": 6,
      "github_login_name": "tikidunpon",
      "id": "tikidunponpon",
      "items_count": 7,
      "linkedin_id": "",
      "location": "",
      "name": "",
      "organization": "",
      "permanent_id": 9628,
      "profile_image_url": "https://avatars.githubusercontent.com/u/1140982?",
      "twitter_screen_name": "tsukiyodrum",
      "website_url": ""
    }
  }
]